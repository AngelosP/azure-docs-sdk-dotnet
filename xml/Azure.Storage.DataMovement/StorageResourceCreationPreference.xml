<Type Name="StorageResourceCreationPreference" FullName="Azure.Storage.DataMovement.StorageResourceCreationPreference">
  <TypeSignature Language="C#" Value="public enum StorageResourceCreationPreference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed StorageResourceCreationPreference extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Azure.Storage.DataMovement.StorageResourceCreationPreference" />
  <TypeSignature Language="VB.NET" Value="Public Enum StorageResourceCreationPreference" />
  <TypeSignature Language="F#" Value="type StorageResourceCreationPreference = " />
  <AssemblyInfo>
    <AssemblyName>Azure.Storage.DataMovement</AssemblyName>
    <AssemblyVersion>12.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
            Defines the behavior when a transfer resource already exists.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Storage.DataMovement.StorageResourceCreationPreference Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Azure.Storage.DataMovement.StorageResourceCreationPreference.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="F#" Value="Default = 0" Usage="Azure.Storage.DataMovement.StorageResourceCreationPreference.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.DataMovement</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.DataMovement.StorageResourceCreationPreference</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
            The default value will be <see cref="F:Azure.Storage.DataMovement.StorageResourceCreationPreference.FailIfExists" /> when
            starting a new transfer.
            When resuming a transfer, the value will default to the value used when first starting
            the transfer for all resources that were successfully enumerated and the regular default
            for any remaining resources.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="FailIfExists">
      <MemberSignature Language="C#" Value="FailIfExists" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Storage.DataMovement.StorageResourceCreationPreference FailIfExists = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Azure.Storage.DataMovement.StorageResourceCreationPreference.FailIfExists" />
      <MemberSignature Language="VB.NET" Value="FailIfExists" />
      <MemberSignature Language="F#" Value="FailIfExists = 1" Usage="Azure.Storage.DataMovement.StorageResourceCreationPreference.FailIfExists" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.DataMovement</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.DataMovement.StorageResourceCreationPreference</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
            If the resource already exists in the destination path, a failure will be thrown.
            <para />
            The value for <see cref="P:Azure.Storage.DataMovement.TransferManagerOptions.ErrorHandling" /> will determine if
            the transfer continues after the failure or not.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="OverwriteIfExists">
      <MemberSignature Language="C#" Value="OverwriteIfExists" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Storage.DataMovement.StorageResourceCreationPreference OverwriteIfExists = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Azure.Storage.DataMovement.StorageResourceCreationPreference.OverwriteIfExists" />
      <MemberSignature Language="VB.NET" Value="OverwriteIfExists" />
      <MemberSignature Language="F#" Value="OverwriteIfExists = 2" Usage="Azure.Storage.DataMovement.StorageResourceCreationPreference.OverwriteIfExists" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.DataMovement</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.DataMovement.StorageResourceCreationPreference</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
            Overwrites the resource if it already exists. No error will be thrown.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="SkipIfExists">
      <MemberSignature Language="C#" Value="SkipIfExists" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Azure.Storage.DataMovement.StorageResourceCreationPreference SkipIfExists = int32(3)" />
      <MemberSignature Language="DocId" Value="F:Azure.Storage.DataMovement.StorageResourceCreationPreference.SkipIfExists" />
      <MemberSignature Language="VB.NET" Value="SkipIfExists" />
      <MemberSignature Language="F#" Value="SkipIfExists = 3" Usage="Azure.Storage.DataMovement.StorageResourceCreationPreference.SkipIfExists" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Storage.DataMovement</AssemblyName>
        <AssemblyVersion>12.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Storage.DataMovement.StorageResourceCreationPreference</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
             If the resource already exists in the destination path, no failure will be thrown.
             The resource will simply be skipped over and the transfer will continue.
            
             If ErrorHandlingOptions.StopOnAnyFailures is set, the resource will still be skipped.
             </summary>
      </Docs>
    </Member>
  </Members>
</Type>
