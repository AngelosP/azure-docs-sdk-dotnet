<Type Name="MockableLargeInstanceResourceGroupResource" FullName="Azure.ResourceManager.LargeInstance.Mocking.MockableLargeInstanceResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableLargeInstanceResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableLargeInstanceResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.LargeInstance.Mocking.MockableLargeInstanceResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableLargeInstanceResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableLargeInstanceResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.LargeInstance</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableLargeInstanceResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LargeInstance.Mocking.MockableLargeInstanceResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LargeInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.LargeInstance.Mocking.MockableLargeInstanceResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLargeInstance">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt; GetLargeInstance (string azureLargeInstanceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt; GetLargeInstance(string azureLargeInstanceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LargeInstance.Mocking.MockableLargeInstanceResourceGroupResource.GetLargeInstance(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLargeInstance (azureLargeInstanceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LargeInstanceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetLargeInstance : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt;&#xA;override this.GetLargeInstance : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt;" Usage="mockableLargeInstanceResourceGroupResource.GetLargeInstance (azureLargeInstanceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LargeInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="azureLargeInstanceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="azureLargeInstanceName"> Name of the AzureLargeInstance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an Azure Large Instance for the specified subscription, resource group,
            and instance name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureLargeInstance/azureLargeInstances/{azureLargeInstanceName}</description></item><item><term>Operation Id</term><description>AzureLargeInstance_Get</description></item><item><term>Default Api Version</term><description>2023-07-20-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.LargeInstance.LargeInstanceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="azureLargeInstanceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="azureLargeInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLargeInstanceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt;&gt; GetLargeInstanceAsync (string azureLargeInstanceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt;&gt; GetLargeInstanceAsync(string azureLargeInstanceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LargeInstance.Mocking.MockableLargeInstanceResourceGroupResource.GetLargeInstanceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLargeInstanceAsync (azureLargeInstanceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LargeInstanceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetLargeInstanceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt;&gt;&#xA;override this.GetLargeInstanceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt;&gt;" Usage="mockableLargeInstanceResourceGroupResource.GetLargeInstanceAsync (azureLargeInstanceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LargeInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="azureLargeInstanceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="azureLargeInstanceName"> Name of the AzureLargeInstance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an Azure Large Instance for the specified subscription, resource group,
            and instance name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureLargeInstance/azureLargeInstances/{azureLargeInstanceName}</description></item><item><term>Operation Id</term><description>AzureLargeInstance_Get</description></item><item><term>Default Api Version</term><description>2023-07-20-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.LargeInstance.LargeInstanceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="azureLargeInstanceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="azureLargeInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLargeInstances">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.LargeInstance.LargeInstanceCollection GetLargeInstances ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.LargeInstance.LargeInstanceCollection GetLargeInstances() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LargeInstance.Mocking.MockableLargeInstanceResourceGroupResource.GetLargeInstances" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLargeInstances () As LargeInstanceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetLargeInstances : unit -&gt; Azure.ResourceManager.LargeInstance.LargeInstanceCollection&#xA;override this.GetLargeInstances : unit -&gt; Azure.ResourceManager.LargeInstance.LargeInstanceCollection" Usage="mockableLargeInstanceResourceGroupResource.GetLargeInstances " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LargeInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.LargeInstance.LargeInstanceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of LargeInstanceResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of LargeInstanceResources and their operations over a LargeInstanceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLargeStorageInstance">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt; GetLargeStorageInstance (string azureLargeStorageInstanceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt; GetLargeStorageInstance(string azureLargeStorageInstanceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LargeInstance.Mocking.MockableLargeInstanceResourceGroupResource.GetLargeStorageInstance(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLargeStorageInstance (azureLargeStorageInstanceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LargeStorageInstanceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetLargeStorageInstance : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt;&#xA;override this.GetLargeStorageInstance : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt;" Usage="mockableLargeInstanceResourceGroupResource.GetLargeStorageInstance (azureLargeStorageInstanceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LargeInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="azureLargeStorageInstanceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="azureLargeStorageInstanceName"> Name of the AzureLargeStorageInstance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an Azure Large Storage instance for the specified subscription, resource
            group, and instance name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureLargeInstance/azureLargeStorageInstances/{azureLargeStorageInstanceName}</description></item><item><term>Operation Id</term><description>AzureLargeStorageInstance_Get</description></item><item><term>Default Api Version</term><description>2023-07-20-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="azureLargeStorageInstanceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="azureLargeStorageInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLargeStorageInstanceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt;&gt; GetLargeStorageInstanceAsync (string azureLargeStorageInstanceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt;&gt; GetLargeStorageInstanceAsync(string azureLargeStorageInstanceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LargeInstance.Mocking.MockableLargeInstanceResourceGroupResource.GetLargeStorageInstanceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLargeStorageInstanceAsync (azureLargeStorageInstanceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LargeStorageInstanceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetLargeStorageInstanceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt;&gt;&#xA;override this.GetLargeStorageInstanceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt;&gt;" Usage="mockableLargeInstanceResourceGroupResource.GetLargeStorageInstanceAsync (azureLargeStorageInstanceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LargeInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="azureLargeStorageInstanceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="azureLargeStorageInstanceName"> Name of the AzureLargeStorageInstance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an Azure Large Storage instance for the specified subscription, resource
            group, and instance name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureLargeInstance/azureLargeStorageInstances/{azureLargeStorageInstanceName}</description></item><item><term>Operation Id</term><description>AzureLargeStorageInstance_Get</description></item><item><term>Default Api Version</term><description>2023-07-20-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="azureLargeStorageInstanceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="azureLargeStorageInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLargeStorageInstances">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.LargeInstance.LargeStorageInstanceCollection GetLargeStorageInstances ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.LargeInstance.LargeStorageInstanceCollection GetLargeStorageInstances() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LargeInstance.Mocking.MockableLargeInstanceResourceGroupResource.GetLargeStorageInstances" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLargeStorageInstances () As LargeStorageInstanceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetLargeStorageInstances : unit -&gt; Azure.ResourceManager.LargeInstance.LargeStorageInstanceCollection&#xA;override this.GetLargeStorageInstances : unit -&gt; Azure.ResourceManager.LargeInstance.LargeStorageInstanceCollection" Usage="mockableLargeInstanceResourceGroupResource.GetLargeStorageInstances " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LargeInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.LargeInstance.LargeStorageInstanceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of LargeStorageInstanceResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of LargeStorageInstanceResources and their operations over a LargeStorageInstanceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
