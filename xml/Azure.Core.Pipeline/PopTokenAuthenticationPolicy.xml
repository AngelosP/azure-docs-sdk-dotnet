<Type Name="PopTokenAuthenticationPolicy" FullName="Azure.Core.Pipeline.PopTokenAuthenticationPolicy">
  <TypeSignature Language="C#" Value="public class PopTokenAuthenticationPolicy : Azure.Core.Pipeline.HttpPipelinePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PopTokenAuthenticationPolicy extends Azure.Core.Pipeline.HttpPipelinePolicy" />
  <TypeSignature Language="DocId" Value="T:Azure.Core.Pipeline.PopTokenAuthenticationPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class PopTokenAuthenticationPolicy&#xA;Inherits HttpPipelinePolicy" />
  <TypeSignature Language="F#" Value="type PopTokenAuthenticationPolicy = class&#xA;    inherit HttpPipelinePolicy" />
  <AssemblyInfo>
    <AssemblyName>Azure.Core.Experimental</AssemblyName>
    <AssemblyVersion>0.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Core.Pipeline.HttpPipelinePolicy</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A policy that supports <see href="https://learn.microsoft.com/entra/msal/dotnet/advanced/proof-of-possession-tokens">Proof of Possession (PoP) tokens</see>.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PopTokenAuthenticationPolicy (Azure.Core.ISupportsProofOfPossession credential, string scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.Core.ISupportsProofOfPossession credential, string scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Pipeline.PopTokenAuthenticationPolicy.#ctor(Azure.Core.ISupportsProofOfPossession,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (credential As ISupportsProofOfPossession, scope As String)" />
      <MemberSignature Language="F#" Value="new Azure.Core.Pipeline.PopTokenAuthenticationPolicy : Azure.Core.ISupportsProofOfPossession * string -&gt; Azure.Core.Pipeline.PopTokenAuthenticationPolicy" Usage="new Azure.Core.Pipeline.PopTokenAuthenticationPolicy (credential, scope)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core.Experimental</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="credential" Type="Azure.Core.ISupportsProofOfPossession" />
        <Parameter Name="scope" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">The <see cref="T:Azure.Core.TokenCredential" /> to be used for authorization.</param>
        <param name="scope">The scope to be included in acquired tokens.</param>
        <summary>
            Creates a new instance of <see cref="T:Azure.Core.Pipeline.PopTokenAuthenticationPolicy" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAndAuthorizeRequest">
      <MemberSignature Language="C#" Value="protected void AuthenticateAndAuthorizeRequest (Azure.Core.HttpMessage message, Azure.Core.PopTokenRequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AuthenticateAndAuthorizeRequest(class Azure.Core.HttpMessage message, valuetype Azure.Core.PopTokenRequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Pipeline.PopTokenAuthenticationPolicy.AuthenticateAndAuthorizeRequest(Azure.Core.HttpMessage,Azure.Core.PopTokenRequestContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AuthenticateAndAuthorizeRequest (message As HttpMessage, context As PopTokenRequestContext)" />
      <MemberSignature Language="F#" Value="member this.AuthenticateAndAuthorizeRequest : Azure.Core.HttpMessage * Azure.Core.PopTokenRequestContext -&gt; unit" Usage="popTokenAuthenticationPolicy.AuthenticateAndAuthorizeRequest (message, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core.Experimental</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Core.HttpMessage" />
        <Parameter Name="context" Type="Azure.Core.PopTokenRequestContext" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Core.HttpMessage" /> with the <see cref="T:Azure.Core.Request" /> to be authorized.</param>
        <param name="context">The <see cref="T:Azure.Core.TokenRequestContext" /> used to authorize the <see cref="T:Azure.Core.Request" />.</param>
        <summary>
            Sets the Authorization header on the <see cref="T:Azure.Core.Request" /> by calling GetToken, or from cache, if possible.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAndAuthorizeRequestAsync">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.ValueTask AuthenticateAndAuthorizeRequestAsync (Azure.Core.HttpMessage message, Azure.Core.PopTokenRequestContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Threading.Tasks.ValueTask AuthenticateAndAuthorizeRequestAsync(class Azure.Core.HttpMessage message, valuetype Azure.Core.PopTokenRequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Pipeline.PopTokenAuthenticationPolicy.AuthenticateAndAuthorizeRequestAsync(Azure.Core.HttpMessage,Azure.Core.PopTokenRequestContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Function AuthenticateAndAuthorizeRequestAsync (message As HttpMessage, context As PopTokenRequestContext) As ValueTask" />
      <MemberSignature Language="F#" Value="member this.AuthenticateAndAuthorizeRequestAsync : Azure.Core.HttpMessage * Azure.Core.PopTokenRequestContext -&gt; System.Threading.Tasks.ValueTask" Usage="popTokenAuthenticationPolicy.AuthenticateAndAuthorizeRequestAsync (message, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core.Experimental</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Core.HttpMessage" />
        <Parameter Name="context" Type="Azure.Core.PopTokenRequestContext" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Core.HttpMessage" /> with the <see cref="T:Azure.Core.Request" /> to be authorized.</param>
        <param name="context">The <see cref="T:Azure.Core.TokenRequestContext" /> used to authorize the <see cref="T:Azure.Core.Request" />.</param>
        <summary>
            Sets the Authorization header on the <see cref="T:Azure.Core.Request" /> by calling GetToken, or from cache, if possible.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizeRequest">
      <MemberSignature Language="C#" Value="protected void AuthorizeRequest (Azure.Core.HttpMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AuthorizeRequest(class Azure.Core.HttpMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Pipeline.PopTokenAuthenticationPolicy.AuthorizeRequest(Azure.Core.HttpMessage)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AuthorizeRequest (message As HttpMessage)" />
      <MemberSignature Language="F#" Value="member this.AuthorizeRequest : Azure.Core.HttpMessage -&gt; unit" Usage="popTokenAuthenticationPolicy.AuthorizeRequest message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core.Experimental</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Core.HttpMessage" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Core.HttpMessage" /> this policy would be applied to.</param>
        <summary>
            Executes before <see cref="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.ProcessAsync(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" /> or
            <see cref="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.Process(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" /> is called.
            Implementers of this method are expected to call <see cref="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.AuthenticateAndAuthorizeRequest(Azure.Core.HttpMessage,Azure.Core.TokenRequestContext)" /> or <see cref="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.AuthenticateAndAuthorizeRequestAsync(Azure.Core.HttpMessage,Azure.Core.TokenRequestContext)" />
            if authorization is required for requests not related to handling a challenge response.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizeRequestAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.ValueTask AuthorizeRequestAsync (Azure.Core.HttpMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask AuthorizeRequestAsync(class Azure.Core.HttpMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Pipeline.PopTokenAuthenticationPolicy.AuthorizeRequestAsync(Azure.Core.HttpMessage)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AuthorizeRequestAsync (message As HttpMessage) As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member AuthorizeRequestAsync : Azure.Core.HttpMessage -&gt; System.Threading.Tasks.ValueTask&#xA;override this.AuthorizeRequestAsync : Azure.Core.HttpMessage -&gt; System.Threading.Tasks.ValueTask" Usage="popTokenAuthenticationPolicy.AuthorizeRequestAsync message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core.Experimental</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Core.HttpMessage" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Core.HttpMessage" /> this policy would be applied to.</param>
        <summary>
            Executes before <see cref="M:Azure.Core.Pipeline.HttpPipelinePolicy.Process(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" /><see cref="M:Azure.Core.Pipeline.HttpPipelinePolicy.ProcessAsync(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" /> or
            <see cref="M:Azure.Core.Pipeline.HttpPipelinePolicy.Process(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" /> is called.
            Implementers of this method are expected to call <see cref="M:Azure.Core.Pipeline.PopTokenAuthenticationPolicy.AuthenticateAndAuthorizeRequest(Azure.Core.HttpMessage,Azure.Core.PopTokenRequestContext)" /> or <see cref="M:Azure.Core.Pipeline.PopTokenAuthenticationPolicy.AuthenticateAndAuthorizeRequestAsync(Azure.Core.HttpMessage,Azure.Core.PopTokenRequestContext)" />
            if authorization is required for requests not related to handling a challenge response.
            </summary>
        <returns>The <see cref="T:System.Threading.Tasks.ValueTask" /> representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizeRequestOnChallenge">
      <MemberSignature Language="C#" Value="protected virtual bool AuthorizeRequestOnChallenge (Azure.Core.HttpMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool AuthorizeRequestOnChallenge(class Azure.Core.HttpMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Pipeline.PopTokenAuthenticationPolicy.AuthorizeRequestOnChallenge(Azure.Core.HttpMessage)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AuthorizeRequestOnChallenge (message As HttpMessage) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member AuthorizeRequestOnChallenge : Azure.Core.HttpMessage -&gt; bool&#xA;override this.AuthorizeRequestOnChallenge : Azure.Core.HttpMessage -&gt; bool" Usage="popTokenAuthenticationPolicy.AuthorizeRequestOnChallenge message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core.Experimental</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Core.HttpMessage" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Core.HttpMessage" /> to be authenticated.</param>
        <summary>
            Executed in the event a 401 response with a WWW-Authenticate authentication challenge header is received after the initial request.
            </summary>
        <returns>A boolean indicating whether the request was successfully authenticated and should be sent to the transport.</returns>
        <remarks>Service client libraries may override this to handle service specific authentication challenges.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizeRequestOnChallengeAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.ValueTask&lt;bool&gt; AuthorizeRequestOnChallengeAsync (Azure.Core.HttpMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;bool&gt; AuthorizeRequestOnChallengeAsync(class Azure.Core.HttpMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Pipeline.PopTokenAuthenticationPolicy.AuthorizeRequestOnChallengeAsync(Azure.Core.HttpMessage)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AuthorizeRequestOnChallengeAsync (message As HttpMessage) As ValueTask(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member AuthorizeRequestOnChallengeAsync : Azure.Core.HttpMessage -&gt; System.Threading.Tasks.ValueTask&lt;bool&gt;&#xA;override this.AuthorizeRequestOnChallengeAsync : Azure.Core.HttpMessage -&gt; System.Threading.Tasks.ValueTask&lt;bool&gt;" Usage="popTokenAuthenticationPolicy.AuthorizeRequestOnChallengeAsync message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core.Experimental</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Core.HttpMessage" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Core.HttpMessage" /> to be authenticated.</param>
        <summary>
            Executed in the event a 401 response with a WWW-Authenticate authentication challenge header is received after the initial request.
            </summary>
        <returns>A boolean indicating whether the request was successfully authenticated and should be sent to the transport.</returns>
        <remarks>Service client libraries may override this to handle service specific authentication challenges.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public override void Process (Azure.Core.HttpMessage message, ReadOnlyMemory&lt;Azure.Core.Pipeline.HttpPipelinePolicy&gt; pipeline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Process(class Azure.Core.HttpMessage message, valuetype System.ReadOnlyMemory`1&lt;class Azure.Core.Pipeline.HttpPipelinePolicy&gt; pipeline) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Pipeline.PopTokenAuthenticationPolicy.Process(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Process (message As HttpMessage, pipeline As ReadOnlyMemory(Of HttpPipelinePolicy))" />
      <MemberSignature Language="F#" Value="override this.Process : Azure.Core.HttpMessage * ReadOnlyMemory&lt;Azure.Core.Pipeline.HttpPipelinePolicy&gt; -&gt; unit" Usage="popTokenAuthenticationPolicy.Process (message, pipeline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core.Experimental</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Core.HttpMessage" />
        <Parameter Name="pipeline" Type="System.ReadOnlyMemory&lt;Azure.Core.Pipeline.HttpPipelinePolicy&gt;" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Core.HttpMessage" /> this policy would be applied to.</param>
        <param name="pipeline">The set of <see cref="T:Azure.Core.Pipeline.HttpPipelinePolicy" /> to execute after current one.</param>
        <summary>
            Applies the policy to the <paramref name="message" />. Implementers are expected to mutate <see cref="P:Azure.Core.HttpMessage.Request" /> before calling <see cref="M:Azure.Core.Pipeline.HttpPipelinePolicy.ProcessNextAsync(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" /> and observe the <see cref="P:Azure.Core.HttpMessage.Response" /> changes after.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask ProcessAsync (Azure.Core.HttpMessage message, ReadOnlyMemory&lt;Azure.Core.Pipeline.HttpPipelinePolicy&gt; pipeline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask ProcessAsync(class Azure.Core.HttpMessage message, valuetype System.ReadOnlyMemory`1&lt;class Azure.Core.Pipeline.HttpPipelinePolicy&gt; pipeline) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Pipeline.PopTokenAuthenticationPolicy.ProcessAsync(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ProcessAsync (message As HttpMessage, pipeline As ReadOnlyMemory(Of HttpPipelinePolicy)) As ValueTask" />
      <MemberSignature Language="F#" Value="override this.ProcessAsync : Azure.Core.HttpMessage * ReadOnlyMemory&lt;Azure.Core.Pipeline.HttpPipelinePolicy&gt; -&gt; System.Threading.Tasks.ValueTask" Usage="popTokenAuthenticationPolicy.ProcessAsync (message, pipeline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core.Experimental</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Azure.Core.HttpMessage" />
        <Parameter Name="pipeline" Type="System.ReadOnlyMemory&lt;Azure.Core.Pipeline.HttpPipelinePolicy&gt;" />
      </Parameters>
      <Docs>
        <param name="message">The <see cref="T:Azure.Core.HttpMessage" /> this policy would be applied to.</param>
        <param name="pipeline">The set of <see cref="T:Azure.Core.Pipeline.HttpPipelinePolicy" /> to execute after current one.</param>
        <summary>
            Applies the policy to the <paramref name="message" />. Implementers are expected to mutate <see cref="P:Azure.Core.HttpMessage.Request" /> before calling <see cref="M:Azure.Core.Pipeline.HttpPipelinePolicy.ProcessNextAsync(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" /> and observe the <see cref="P:Azure.Core.HttpMessage.Response" /> changes after.
            </summary>
        <returns>The <see cref="T:System.Threading.Tasks.ValueTask" /> representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
