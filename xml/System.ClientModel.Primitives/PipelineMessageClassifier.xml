<Type Name="PipelineMessageClassifier" FullName="System.ClientModel.Primitives.PipelineMessageClassifier">
  <TypeSignature Language="C#" Value="public abstract class PipelineMessageClassifier" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PipelineMessageClassifier extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ClientModel.Primitives.PipelineMessageClassifier" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PipelineMessageClassifier" />
  <TypeSignature Language="F#" Value="type PipelineMessageClassifier = class" />
  <AssemblyInfo>
    <AssemblyName>System.ClientModel</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PipelineMessageClassifier ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.PipelineMessageClassifier.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ClientModel.Primitives.PipelineMessageClassifier Create (ReadOnlySpan&lt;ushort&gt; successStatusCodes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ClientModel.Primitives.PipelineMessageClassifier Create(valuetype System.ReadOnlySpan`1&lt;unsigned int16&gt; successStatusCodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.PipelineMessageClassifier.Create(System.ReadOnlySpan{System.UInt16})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (successStatusCodes As ReadOnlySpan(Of UShort)) As PipelineMessageClassifier" />
      <MemberSignature Language="F#" Value="static member Create : ReadOnlySpan&lt;uint16&gt; -&gt; System.ClientModel.Primitives.PipelineMessageClassifier" Usage="System.ClientModel.Primitives.PipelineMessageClassifier.Create successStatusCodes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.Primitives.PipelineMessageClassifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successStatusCodes" Type="System.ReadOnlySpan&lt;System.UInt16&gt;" />
      </Parameters>
      <Docs>
        <param name="successStatusCodes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.ClientModel.Primitives.PipelineMessageClassifier Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ClientModel.Primitives.PipelineMessageClassifier Default" />
      <MemberSignature Language="DocId" Value="P:System.ClientModel.Primitives.PipelineMessageClassifier.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As PipelineMessageClassifier" />
      <MemberSignature Language="F#" Value="static member Default : System.ClientModel.Primitives.PipelineMessageClassifier" Usage="System.ClientModel.Primitives.PipelineMessageClassifier.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.Primitives.PipelineMessageClassifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryClassify">
      <MemberSignature Language="C#" Value="public abstract bool TryClassify (System.ClientModel.Primitives.PipelineMessage message, out bool isError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryClassify(class System.ClientModel.Primitives.PipelineMessage message, [out] bool&amp; isError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.PipelineMessageClassifier.TryClassify(System.ClientModel.Primitives.PipelineMessage,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryClassify (message As PipelineMessage, ByRef isError As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryClassify : System.ClientModel.Primitives.PipelineMessage * bool -&gt; bool" Usage="pipelineMessageClassifier.TryClassify (message, isError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ClientModel.Primitives.PipelineMessage" />
        <Parameter Name="isError" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="isError">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryClassify">
      <MemberSignature Language="C#" Value="public abstract bool TryClassify (System.ClientModel.Primitives.PipelineMessage message, Exception? exception, out bool isRetriable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryClassify(class System.ClientModel.Primitives.PipelineMessage message, class System.Exception exception, [out] bool&amp; isRetriable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.PipelineMessageClassifier.TryClassify(System.ClientModel.Primitives.PipelineMessage,System.Exception,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryClassify (message As PipelineMessage, exception As Exception, ByRef isRetriable As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryClassify : System.ClientModel.Primitives.PipelineMessage * Exception * bool -&gt; bool" Usage="pipelineMessageClassifier.TryClassify (message, exception, isRetriable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ClientModel.Primitives.PipelineMessage" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="isRetriable" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="exception">To be added.</param>
        <param name="isRetriable">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
