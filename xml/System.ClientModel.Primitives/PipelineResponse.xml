<Type Name="PipelineResponse" FullName="System.ClientModel.Primitives.PipelineResponse">
  <TypeSignature Language="C#" Value="public abstract class PipelineResponse : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PipelineResponse extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ClientModel.Primitives.PipelineResponse" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PipelineResponse&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type PipelineResponse = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ClientModel</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PipelineResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.PipelineResponse.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public virtual BinaryData Content { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.BinaryData Content" />
      <MemberSignature Language="DocId" Value="P:System.ClientModel.Primitives.PipelineResponse.Content" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Content As BinaryData" />
      <MemberSignature Language="F#" Value="member this.Content : BinaryData" Usage="System.ClientModel.Primitives.PipelineResponse.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the contents of HTTP response, if it is available.
            </summary>
        <value>To be added.</value>
        <remarks>
            Throws <see cref="T:System.InvalidOperationException" /> when <see cref="P:System.ClientModel.Primitives.PipelineResponse.ContentStream" /> is not a <see cref="T:System.IO.MemoryStream" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentStream">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream? ContentStream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream ContentStream" />
      <MemberSignature Language="DocId" Value="P:System.ClientModel.Primitives.PipelineResponse.ContentStream" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ContentStream As Stream" />
      <MemberSignature Language="F#" Value="member this.ContentStream : System.IO.Stream with get, set" Usage="System.ClientModel.Primitives.PipelineResponse.ContentStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            TBD.  Needed for inheritdoc.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public abstract void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.PipelineResponse.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit" Usage="pipelineResponse.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsError">
      <MemberSignature Language="C#" Value="public virtual bool IsError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsError" />
      <MemberSignature Language="DocId" Value="P:System.ClientModel.Primitives.PipelineResponse.IsError" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsError As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsError : bool with get, set" Usage="System.ClientModel.Primitives.PipelineResponse.IsError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicates whether the status code of the returned response is considered
            an error code.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public abstract int Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Status" />
      <MemberSignature Language="DocId" Value="P:System.ClientModel.Primitives.PipelineResponse.Status" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Status As Integer" />
      <MemberSignature Language="F#" Value="member this.Status : int" Usage="System.ClientModel.Primitives.PipelineResponse.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            TBD.  Needed for inheritdoc.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetHeaders">
      <MemberSignature Language="C#" Value="public abstract bool TryGetHeaders (out System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetHeaders([out] class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt;&amp; headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.PipelineResponse.TryGetHeaders(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryGetHeaders (ByRef headers As IEnumerable(Of KeyValuePair(Of String, String))) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryGetHeaders : seq -&gt; bool" Usage="pipelineResponse.TryGetHeaders headers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headers" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="headers">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetHeaderValue">
      <MemberSignature Language="C#" Value="public abstract bool TryGetHeaderValue (string name, out System.Collections.Generic.IEnumerable&lt;string&gt;? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetHeaderValue(string name, [out] class System.Collections.Generic.IEnumerable`1&lt;string&gt;&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.PipelineResponse.TryGetHeaderValue(System.String,System.Collections.Generic.IEnumerable{System.String}@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryGetHeaderValue (name As String, ByRef value As IEnumerable(Of String)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryGetHeaderValue : string * seq -&gt; bool" Usage="pipelineResponse.TryGetHeaderValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetHeaderValue">
      <MemberSignature Language="C#" Value="public abstract bool TryGetHeaderValue (string name, out string? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetHeaderValue(string name, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.PipelineResponse.TryGetHeaderValue(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryGetHeaderValue (name As String, ByRef value As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryGetHeaderValue : string * string -&gt; bool" Usage="pipelineResponse.TryGetHeaderValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetReasonPhrase">
      <MemberSignature Language="C#" Value="public abstract bool TryGetReasonPhrase (out string reasonPhrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetReasonPhrase([out] string&amp; reasonPhrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.PipelineResponse.TryGetReasonPhrase(System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryGetReasonPhrase (ByRef reasonPhrase As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryGetReasonPhrase : string -&gt; bool" Usage="pipelineResponse.TryGetReasonPhrase reasonPhrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reasonPhrase" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reasonPhrase">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
