<Type Name="CallMedia" FullName="Azure.Communication.CallAutomation.CallMedia">
  <TypeSignature Language="C#" Value="public class CallMedia" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallMedia extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.CallAutomation.CallMedia" />
  <TypeSignature Language="VB.NET" Value="Public Class CallMedia" />
  <TypeSignature Language="F#" Value="type CallMedia = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The Azure Communication Services Call Media Client.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CallMedia ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallMedia" /> for mocking.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallConnectionId">
      <MemberSignature Language="C#" Value="public virtual string CallConnectionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CallConnectionId" />
      <MemberSignature Language="DocId" Value="P:Azure.Communication.CallAutomation.CallMedia.CallConnectionId" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CallConnectionId As String" />
      <MemberSignature Language="F#" Value="member this.CallConnectionId : string" Usage="Azure.Communication.CallAutomation.CallMedia.CallConnectionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The call connection id.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAllMediaOperations">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallAutomation.CancelAllMediaOperationsResult&gt; CancelAllMediaOperations (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallAutomation.CancelAllMediaOperationsResult&gt; CancelAllMediaOperations(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.CancelAllMediaOperations(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelAllMediaOperations (Optional cancellationToken As CancellationToken = Nothing) As Response(Of CancelAllMediaOperationsResult)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member CancelAllMediaOperations : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.CancelAllMediaOperationsResult&gt;&#xA;override this.CancelAllMediaOperations : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.CancelAllMediaOperationsResult&gt;" Usage="callMedia.CancelAllMediaOperations cancellationToken" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.Response CancelAllMediaOperations (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CancelAllMediaOperations(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelAllMediaOperations (Optional cancellationToken As CancellationToken = Nothing) As Response" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member CancelAllMediaOperations : System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.CancelAllMediaOperations : System.Threading.CancellationToken -&gt; Azure.Response" Usage="callMedia.CancelAllMediaOperations cancellationToken" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.Response&lt;Azure.Communication.CallAutomation.CancelAllMediaOperationsResult&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Cancel any media operation to all participants.
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.CancelAllMediaOperationsResult" />, which can be used to wait for CancelAllMediaOperations' related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAllMediaOperationsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.CancelAllMediaOperationsResult&gt;&gt; CancelAllMediaOperationsAsync (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallAutomation.CancelAllMediaOperationsResult&gt;&gt; CancelAllMediaOperationsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.CancelAllMediaOperationsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelAllMediaOperationsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CancelAllMediaOperationsResult))" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member CancelAllMediaOperationsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.CancelAllMediaOperationsResult&gt;&gt;&#xA;override this.CancelAllMediaOperationsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.CancelAllMediaOperationsResult&gt;&gt;" Usage="callMedia.CancelAllMediaOperationsAsync cancellationToken" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CancelAllMediaOperationsAsync (System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CancelAllMediaOperationsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelAllMediaOperationsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member CancelAllMediaOperationsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CancelAllMediaOperationsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callMedia.CancelAllMediaOperationsAsync cancellationToken" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.CancelAllMediaOperationsResult&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Cancel any media operation to all participants.
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.CancelAllMediaOperationsResult" />, which can be used to wait for CancelAllMediaOperations' related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt; Play (Azure.Communication.CallAutomation.PlayOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallAutomation.PlayResult&gt; Play(class Azure.Communication.CallAutomation.PlayOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.Play(Azure.Communication.CallAutomation.PlayOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Play (options As PlayOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PlayResult)" />
      <MemberSignature Language="F#" Value="abstract member Play : Azure.Communication.CallAutomation.PlayOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&#xA;override this.Play : Azure.Communication.CallAutomation.PlayOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;" Usage="callMedia.Play (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.CallAutomation.PlayOptions" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <param name="options">An optional object containing play options and configurations.</param>
        <summary>
            Plays audio to specified participant(s).
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.PlayResult" />, which can be used to wait for Play's related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt; Play (Azure.Communication.CallAutomation.PlaySource playSource, System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt; playTo, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallAutomation.PlayResult&gt; Play(class Azure.Communication.CallAutomation.PlaySource playSource, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.CommunicationIdentifier&gt; playTo, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.Play(Azure.Communication.CallAutomation.PlaySource,System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifier},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Play (playSource As PlaySource, playTo As IEnumerable(Of CommunicationIdentifier), Optional cancellationToken As CancellationToken = Nothing) As Response(Of PlayResult)" />
      <MemberSignature Language="F#" Value="abstract member Play : Azure.Communication.CallAutomation.PlaySource * seq&lt;Azure.Communication.CommunicationIdentifier&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&#xA;override this.Play : Azure.Communication.CallAutomation.PlaySource * seq&lt;Azure.Communication.CommunicationIdentifier&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;" Usage="callMedia.Play (playSource, playTo, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playSource" Type="Azure.Communication.CallAutomation.PlaySource" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="playTo" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt;" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="playSource" />
        <param name="cancellationToken" />
        <param name="playTo" />
        <summary>
            Plays a file.
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.PlayResult" />, which can be used to wait for Play's related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Play (Azure.Communication.CallAutomation.PlaySource playSource, System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt; playTo, Azure.Communication.CallAutomation.PlayOptions playOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Play(class Azure.Communication.CallAutomation.PlaySource playSource, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.CommunicationIdentifier&gt; playTo, class Azure.Communication.CallAutomation.PlayOptions playOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.Play(Azure.Communication.CallAutomation.PlaySource,System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifier},Azure.Communication.CallAutomation.PlayOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Play (playSource As PlaySource, playTo As IEnumerable(Of CommunicationIdentifier), Optional playOptions As PlayOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Play : Azure.Communication.CallAutomation.PlaySource * seq&lt;Azure.Communication.CommunicationIdentifier&gt; * Azure.Communication.CallAutomation.PlayOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Play : Azure.Communication.CallAutomation.PlaySource * seq&lt;Azure.Communication.CommunicationIdentifier&gt; * Azure.Communication.CallAutomation.PlayOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="callMedia.Play (playSource, playTo, playOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playSource" Type="Azure.Communication.CallAutomation.PlaySource" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="playTo" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt;" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="playOptions" Type="Azure.Communication.CallAutomation.PlayOptions" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="playSource" />
        <param name="playTo" />
        <param name="playOptions" />
        <param name="cancellationToken" />
        <summary>
            Plays a file.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt; PlayAsync (Azure.Communication.CallAutomation.PlayOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallAutomation.PlayResult&gt;&gt; PlayAsync(class Azure.Communication.CallAutomation.PlayOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.PlayAsync(Azure.Communication.CallAutomation.PlayOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PlayAsync (options As PlayOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PlayResult))" />
      <MemberSignature Language="F#" Value="abstract member PlayAsync : Azure.Communication.CallAutomation.PlayOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;&#xA;override this.PlayAsync : Azure.Communication.CallAutomation.PlayOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;" Usage="callMedia.PlayAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.CallAutomation.PlayOptions" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <param name="options">An optional object containing play options and configurations.</param>
        <summary>
            Plays audio to specified participant(s) async.
            </summary>
        <returns>Returns a <see cref="T:Azure.Communication.CallAutomation.PlayResult" /> object, which can be used to wait for Play's related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt; PlayAsync (Azure.Communication.CallAutomation.PlaySource playSource, System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt; playTo, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallAutomation.PlayResult&gt;&gt; PlayAsync(class Azure.Communication.CallAutomation.PlaySource playSource, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.CommunicationIdentifier&gt; playTo, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.PlayAsync(Azure.Communication.CallAutomation.PlaySource,System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifier},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PlayAsync (playSource As PlaySource, playTo As IEnumerable(Of CommunicationIdentifier), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PlayResult))" />
      <MemberSignature Language="F#" Value="abstract member PlayAsync : Azure.Communication.CallAutomation.PlaySource * seq&lt;Azure.Communication.CommunicationIdentifier&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;&#xA;override this.PlayAsync : Azure.Communication.CallAutomation.PlaySource * seq&lt;Azure.Communication.CommunicationIdentifier&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;" Usage="callMedia.PlayAsync (playSource, playTo, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playSource" Type="Azure.Communication.CallAutomation.PlaySource" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="playTo" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt;" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="playSource" />
        <param name="cancellationToken" />
        <param name="playTo" />
        <summary>
            Plays audio to specified participant(s) async.
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.PlayResult" />, which can be used to wait for Play's related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; PlayAsync (Azure.Communication.CallAutomation.PlaySource playSource, System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt; playTo, Azure.Communication.CallAutomation.PlayOptions playOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; PlayAsync(class Azure.Communication.CallAutomation.PlaySource playSource, class System.Collections.Generic.IEnumerable`1&lt;class Azure.Communication.CommunicationIdentifier&gt; playTo, class Azure.Communication.CallAutomation.PlayOptions playOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.PlayAsync(Azure.Communication.CallAutomation.PlaySource,System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifier},Azure.Communication.CallAutomation.PlayOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PlayAsync (playSource As PlaySource, playTo As IEnumerable(Of CommunicationIdentifier), Optional playOptions As PlayOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member PlayAsync : Azure.Communication.CallAutomation.PlaySource * seq&lt;Azure.Communication.CommunicationIdentifier&gt; * Azure.Communication.CallAutomation.PlayOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.PlayAsync : Azure.Communication.CallAutomation.PlaySource * seq&lt;Azure.Communication.CommunicationIdentifier&gt; * Azure.Communication.CallAutomation.PlayOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callMedia.PlayAsync (playSource, playTo, playOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playSource" Type="Azure.Communication.CallAutomation.PlaySource" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="playTo" Type="System.Collections.Generic.IEnumerable&lt;Azure.Communication.CommunicationIdentifier&gt;" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="playOptions" Type="Azure.Communication.CallAutomation.PlayOptions" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="playSource" />
        <param name="playTo" />
        <param name="playOptions" />
        <param name="cancellationToken" />
        <summary>
            Plays a file async.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayToAll">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt; PlayToAll (Azure.Communication.CallAutomation.PlaySource playSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallAutomation.PlayResult&gt; PlayToAll(class Azure.Communication.CallAutomation.PlaySource playSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.PlayToAll(Azure.Communication.CallAutomation.PlaySource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PlayToAll (playSource As PlaySource, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PlayResult)" />
      <MemberSignature Language="F#" Value="abstract member PlayToAll : Azure.Communication.CallAutomation.PlaySource * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&#xA;override this.PlayToAll : Azure.Communication.CallAutomation.PlaySource * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;" Usage="callMedia.PlayToAll (playSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playSource" Type="Azure.Communication.CallAutomation.PlaySource" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="playSource" />
        <param name="cancellationToken" />
        <summary>
            Play to all participants.
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.PlayResult" />, which can be used to wait for Play's related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayToAll">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt; PlayToAll (Azure.Communication.CallAutomation.PlayToAllOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallAutomation.PlayResult&gt; PlayToAll(class Azure.Communication.CallAutomation.PlayToAllOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.PlayToAll(Azure.Communication.CallAutomation.PlayToAllOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PlayToAll (options As PlayToAllOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PlayResult)" />
      <MemberSignature Language="F#" Value="abstract member PlayToAll : Azure.Communication.CallAutomation.PlayToAllOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&#xA;override this.PlayToAll : Azure.Communication.CallAutomation.PlayToAllOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;" Usage="callMedia.PlayToAll (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.CallAutomation.PlayToAllOptions" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">An optional object containing play options and configurations.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Play audio to all participants.
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.PlayResult" />, which can be used to wait for Play's related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayToAll">
      <MemberSignature Language="C#" Value="public virtual Azure.Response PlayToAll (Azure.Communication.CallAutomation.PlaySource playSource, Azure.Communication.CallAutomation.PlayOptions playOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response PlayToAll(class Azure.Communication.CallAutomation.PlaySource playSource, class Azure.Communication.CallAutomation.PlayOptions playOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.PlayToAll(Azure.Communication.CallAutomation.PlaySource,Azure.Communication.CallAutomation.PlayOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PlayToAll (playSource As PlaySource, Optional playOptions As PlayOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member PlayToAll : Azure.Communication.CallAutomation.PlaySource * Azure.Communication.CallAutomation.PlayOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.PlayToAll : Azure.Communication.CallAutomation.PlaySource * Azure.Communication.CallAutomation.PlayOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="callMedia.PlayToAll (playSource, playOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playSource" Type="Azure.Communication.CallAutomation.PlaySource" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="playOptions" Type="Azure.Communication.CallAutomation.PlayOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="playSource" />
        <param name="playOptions" />
        <param name="cancellationToken" />
        <summary>
            Play to all participants.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayToAllAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt; PlayToAllAsync (Azure.Communication.CallAutomation.PlaySource playSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallAutomation.PlayResult&gt;&gt; PlayToAllAsync(class Azure.Communication.CallAutomation.PlaySource playSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.PlayToAllAsync(Azure.Communication.CallAutomation.PlaySource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PlayToAllAsync (playSource As PlaySource, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PlayResult))" />
      <MemberSignature Language="F#" Value="abstract member PlayToAllAsync : Azure.Communication.CallAutomation.PlaySource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;&#xA;override this.PlayToAllAsync : Azure.Communication.CallAutomation.PlaySource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;" Usage="callMedia.PlayToAllAsync (playSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playSource" Type="Azure.Communication.CallAutomation.PlaySource" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="playSource" />
        <param name="cancellationToken" />
        <summary>
            Play to all participants async.
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.PlayResult" />, which can be used to wait for Play's related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayToAllAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt; PlayToAllAsync (Azure.Communication.CallAutomation.PlayToAllOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallAutomation.PlayResult&gt;&gt; PlayToAllAsync(class Azure.Communication.CallAutomation.PlayToAllOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.PlayToAllAsync(Azure.Communication.CallAutomation.PlayToAllOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PlayToAllAsync (options As PlayToAllOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PlayResult))" />
      <MemberSignature Language="F#" Value="abstract member PlayToAllAsync : Azure.Communication.CallAutomation.PlayToAllOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;&#xA;override this.PlayToAllAsync : Azure.Communication.CallAutomation.PlayToAllOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;" Usage="callMedia.PlayToAllAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.PlayResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.CallAutomation.PlayToAllOptions" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="options">An optional object containing play options and configurations.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Play audio to all participants async.
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.PlayResult" />, which can be used to wait for Play's related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayToAllAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; PlayToAllAsync (Azure.Communication.CallAutomation.PlaySource playSource, Azure.Communication.CallAutomation.PlayOptions playOptions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; PlayToAllAsync(class Azure.Communication.CallAutomation.PlaySource playSource, class Azure.Communication.CallAutomation.PlayOptions playOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.PlayToAllAsync(Azure.Communication.CallAutomation.PlaySource,Azure.Communication.CallAutomation.PlayOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PlayToAllAsync (playSource As PlaySource, Optional playOptions As PlayOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member PlayToAllAsync : Azure.Communication.CallAutomation.PlaySource * Azure.Communication.CallAutomation.PlayOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.PlayToAllAsync : Azure.Communication.CallAutomation.PlaySource * Azure.Communication.CallAutomation.PlayOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callMedia.PlayToAllAsync (playSource, playOptions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="playSource" Type="Azure.Communication.CallAutomation.PlaySource" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="playOptions" Type="Azure.Communication.CallAutomation.PlayOptions" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="playSource" />
        <param name="playOptions" />
        <param name="cancellationToken" />
        <summary>
            Play to all participants async.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecognizing">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.CallAutomation.StartRecognizingCallMediaResult&gt; StartRecognizing (Azure.Communication.CallAutomation.CallMediaRecognizeOptions options, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.CallAutomation.StartRecognizingCallMediaResult&gt; StartRecognizing(class Azure.Communication.CallAutomation.CallMediaRecognizeOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.StartRecognizing(Azure.Communication.CallAutomation.CallMediaRecognizeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecognizing (options As CallMediaRecognizeOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of StartRecognizingCallMediaResult)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member StartRecognizing : Azure.Communication.CallAutomation.CallMediaRecognizeOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.StartRecognizingCallMediaResult&gt;&#xA;override this.StartRecognizing : Azure.Communication.CallAutomation.CallMediaRecognizeOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.CallAutomation.StartRecognizingCallMediaResult&gt;" Usage="callMedia.StartRecognizing (options, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual Azure.Response StartRecognizing (Azure.Communication.CallAutomation.CallMediaRecognizeOptions recognizeOptions, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response StartRecognizing(class Azure.Communication.CallAutomation.CallMediaRecognizeOptions recognizeOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecognizing (recognizeOptions As CallMediaRecognizeOptions, Optional cancellationToken As CancellationToken = Nothing) As Response" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member StartRecognizing : Azure.Communication.CallAutomation.CallMediaRecognizeOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.StartRecognizing : Azure.Communication.CallAutomation.CallMediaRecognizeOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="callMedia.StartRecognizing (recognizeOptions, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">Azure.Response&lt;Azure.Communication.CallAutomation.StartRecognizingCallMediaResult&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.CallAutomation.CallMediaRecognizeOptions" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="recognizeOptions" Type="Azure.Communication.CallAutomation.CallMediaRecognizeOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" />
      </Parameters>
      <Docs>
        <param name="options">Configuration attributes for recognize.</param>
        <param name="recognizeOptions">Configuration attributes for recognize.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Recognize tones.
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.StartRecognizingCallMediaResult" />, which can be used to wait for StartRecognizing's related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecognizingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.StartRecognizingCallMediaResult&gt;&gt; StartRecognizingAsync (Azure.Communication.CallAutomation.CallMediaRecognizeOptions options, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.CallAutomation.StartRecognizingCallMediaResult&gt;&gt; StartRecognizingAsync(class Azure.Communication.CallAutomation.CallMediaRecognizeOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.CallMedia.StartRecognizingAsync(Azure.Communication.CallAutomation.CallMediaRecognizeOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecognizingAsync (options As CallMediaRecognizeOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of StartRecognizingCallMediaResult))" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="abstract member StartRecognizingAsync : Azure.Communication.CallAutomation.CallMediaRecognizeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.StartRecognizingCallMediaResult&gt;&gt;&#xA;override this.StartRecognizingAsync : Azure.Communication.CallAutomation.CallMediaRecognizeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.StartRecognizingCallMediaResult&gt;&gt;" Usage="callMedia.StartRecognizingAsync (options, cancellationToken)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; StartRecognizingAsync (Azure.Communication.CallAutomation.CallMediaRecognizeOptions recognizeOptions, System.Threading.CancellationToken cancellationToken = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; StartRecognizingAsync(class Azure.Communication.CallAutomation.CallMediaRecognizeOptions recognizeOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartRecognizingAsync (recognizeOptions As CallMediaRecognizeOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="abstract member StartRecognizingAsync : Azure.Communication.CallAutomation.CallMediaRecognizeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.StartRecognizingAsync : Azure.Communication.CallAutomation.CallMediaRecognizeOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="callMedia.StartRecognizingAsync (recognizeOptions, cancellationToken)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="azure-dotnet">System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.CallAutomation.StartRecognizingCallMediaResult&gt;&gt;</ReturnType>
        <ReturnType FrameworkAlternate="azure-dotnet-preview">System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.CallAutomation.CallMediaRecognizeOptions" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="recognizeOptions" Type="Azure.Communication.CallAutomation.CallMediaRecognizeOptions" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" />
      </Parameters>
      <Docs>
        <param name="options">Configuration attributes for recognize.</param>
        <param name="recognizeOptions">Configuration attributes for recognize.</param>
        <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
        <summary>
            Recognize tones.
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.StartRecognizingCallMediaResult" />, which can be used to wait for StartRecognizing's related events.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
