<Type Name="AnalyzeTextOptions" FullName="Azure.AI.ContentSafety.AnalyzeTextOptions">
  <TypeSignature Language="C#" Value="public class AnalyzeTextOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AnalyzeTextOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.ContentSafety.AnalyzeTextOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class AnalyzeTextOptions" />
  <TypeSignature Language="F#" Value="type AnalyzeTextOptions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The text analysis request. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnalyzeTextOptions (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.AnalyzeTextOptions.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="F#" Value="new Azure.AI.ContentSafety.AnalyzeTextOptions : string -&gt; Azure.AI.ContentSafety.AnalyzeTextOptions" Usage="new Azure.AI.ContentSafety.AnalyzeTextOptions text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"> The text needs to be analyzed. We support a maximum of 10k Unicode characters (Unicode code points) in the text of one request. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.ContentSafety.AnalyzeTextOptions" />. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="BlocklistNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; BlocklistNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; BlocklistNames" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.ContentSafety.AnalyzeTextOptions.BlocklistNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlocklistNames As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.BlocklistNames : System.Collections.Generic.IList&lt;string&gt;" Usage="Azure.AI.ContentSafety.AnalyzeTextOptions.BlocklistNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The names of blocklists. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakByBlocklists">
      <MemberSignature Language="C#" Value="public bool? BreakByBlocklists { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; BreakByBlocklists" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.ContentSafety.AnalyzeTextOptions.BreakByBlocklists" />
      <MemberSignature Language="VB.NET" Value="Public Property BreakByBlocklists As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.BreakByBlocklists : Nullable&lt;bool&gt; with get, set" Usage="Azure.AI.ContentSafety.AnalyzeTextOptions.BreakByBlocklists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> When set to true, further analyses of harmful content will not be performed in cases where blocklists are hit. When set to false, all analyses of harmful content will be performed, whether or not blocklists are hit. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Categories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.AI.ContentSafety.TextCategory&gt; Categories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Azure.AI.ContentSafety.TextCategory&gt; Categories" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.ContentSafety.AnalyzeTextOptions.Categories" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Categories As IList(Of TextCategory)" />
      <MemberSignature Language="F#" Value="member this.Categories : System.Collections.Generic.IList&lt;Azure.AI.ContentSafety.TextCategory&gt;" Usage="Azure.AI.ContentSafety.AnalyzeTextOptions.Categories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.AI.ContentSafety.TextCategory&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The categories will be analyzed. If they are not assigned, a default set of analysis results for the categories will be returned. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HaltOnBlocklistHit">
      <MemberSignature Language="C#" Value="public bool? HaltOnBlocklistHit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; HaltOnBlocklistHit" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.ContentSafety.AnalyzeTextOptions.HaltOnBlocklistHit" />
      <MemberSignature Language="VB.NET" Value="Public Property HaltOnBlocklistHit As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.HaltOnBlocklistHit : Nullable&lt;bool&gt; with get, set" Usage="Azure.AI.ContentSafety.AnalyzeTextOptions.HaltOnBlocklistHit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> When set to true, further analyses of harmful content will not be performed in cases where blocklists are hit. When set to false, all analyses of harmful content will be performed, whether or not blocklists are hit. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputType">
      <MemberSignature Language="C#" Value="public Azure.AI.ContentSafety.AnalyzeTextOutputType? OutputType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.AI.ContentSafety.AnalyzeTextOutputType&gt; OutputType" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.ContentSafety.AnalyzeTextOptions.OutputType" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputType As Nullable(Of AnalyzeTextOutputType)" />
      <MemberSignature Language="F#" Value="member this.OutputType : Nullable&lt;Azure.AI.ContentSafety.AnalyzeTextOutputType&gt; with get, set" Usage="Azure.AI.ContentSafety.AnalyzeTextOptions.OutputType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.AI.ContentSafety.AnalyzeTextOutputType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> This refers to the type of text analysis output. If no value is assigned, the default value will be "FourSeverityLevels". </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.ContentSafety.AnalyzeTextOptions.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="Azure.AI.ContentSafety.AnalyzeTextOptions.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The text needs to be analyzed. We support a maximum of 10k Unicode characters (Unicode code points) in the text of one request. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
