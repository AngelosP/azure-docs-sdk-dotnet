<Type Name="ContentSafetyModelFactory" FullName="Azure.AI.ContentSafety.ContentSafetyModelFactory">
  <TypeSignature Language="C#" Value="public static class ContentSafetyModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ContentSafetyModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.ContentSafety.ContentSafetyModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentSafetyModelFactory" />
  <TypeSignature Language="F#" Value="type ContentSafetyModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> ContentSafety model factory. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBlockItemsResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.AddBlockItemsResult AddBlockItemsResult (System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.TextBlockItem&gt; value = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.AddBlockItemsResult AddBlockItemsResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.ContentSafety.TextBlockItem&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.AddBlockItemsResult(System.Collections.Generic.IEnumerable{Azure.AI.ContentSafety.TextBlockItem})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddBlockItemsResult (Optional value As IEnumerable(Of TextBlockItem) = Nothing) As AddBlockItemsResult" />
      <MemberSignature Language="F#" Value="static member AddBlockItemsResult : seq&lt;Azure.AI.ContentSafety.TextBlockItem&gt; -&gt; Azure.AI.ContentSafety.AddBlockItemsResult" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.AddBlockItemsResult value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.AddBlockItemsResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.TextBlockItem&gt;" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="value"> Array of blockItems added. </param>
        <summary> Initializes a new instance of AddBlockItemsResult. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.AddBlockItemsResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdateTextBlocklistItemsResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.AddOrUpdateTextBlocklistItemsResult AddOrUpdateTextBlocklistItemsResult (System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.TextBlocklistItem&gt; blocklistItems = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.AddOrUpdateTextBlocklistItemsResult AddOrUpdateTextBlocklistItemsResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.ContentSafety.TextBlocklistItem&gt; blocklistItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.AddOrUpdateTextBlocklistItemsResult(System.Collections.Generic.IEnumerable{Azure.AI.ContentSafety.TextBlocklistItem})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddOrUpdateTextBlocklistItemsResult (Optional blocklistItems As IEnumerable(Of TextBlocklistItem) = Nothing) As AddOrUpdateTextBlocklistItemsResult" />
      <MemberSignature Language="F#" Value="static member AddOrUpdateTextBlocklistItemsResult : seq&lt;Azure.AI.ContentSafety.TextBlocklistItem&gt; -&gt; Azure.AI.ContentSafety.AddOrUpdateTextBlocklistItemsResult" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.AddOrUpdateTextBlocklistItemsResult blocklistItems" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.AddOrUpdateTextBlocklistItemsResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blocklistItems" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.TextBlocklistItem&gt;" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="blocklistItems"> Array of blocklistItems have been added. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.ContentSafety.AddOrUpdateTextBlocklistItemsResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.AddOrUpdateTextBlocklistItemsResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnalyzeImageResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.AnalyzeImageResult AnalyzeImageResult (System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.ImageCategoriesAnalysis&gt; categoriesAnalysis = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.AnalyzeImageResult AnalyzeImageResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.ContentSafety.ImageCategoriesAnalysis&gt; categoriesAnalysis) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.AnalyzeImageResult(System.Collections.Generic.IEnumerable{Azure.AI.ContentSafety.ImageCategoriesAnalysis})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnalyzeImageResult (Optional categoriesAnalysis As IEnumerable(Of ImageCategoriesAnalysis) = Nothing) As AnalyzeImageResult" />
      <MemberSignature Language="F#" Value="static member AnalyzeImageResult : seq&lt;Azure.AI.ContentSafety.ImageCategoriesAnalysis&gt; -&gt; Azure.AI.ContentSafety.AnalyzeImageResult" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.AnalyzeImageResult categoriesAnalysis" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.AnalyzeImageResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoriesAnalysis" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.ImageCategoriesAnalysis&gt;" Index="0" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="categoriesAnalysis"> Analysis result for categories. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.ContentSafety.AnalyzeImageResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.AnalyzeImageResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnalyzeImageResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.AnalyzeImageResult AnalyzeImageResult (Azure.AI.ContentSafety.ImageAnalyzeSeverityResult hateResult = default, Azure.AI.ContentSafety.ImageAnalyzeSeverityResult selfHarmResult = default, Azure.AI.ContentSafety.ImageAnalyzeSeverityResult sexualResult = default, Azure.AI.ContentSafety.ImageAnalyzeSeverityResult violenceResult = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.AnalyzeImageResult AnalyzeImageResult(class Azure.AI.ContentSafety.ImageAnalyzeSeverityResult hateResult, class Azure.AI.ContentSafety.ImageAnalyzeSeverityResult selfHarmResult, class Azure.AI.ContentSafety.ImageAnalyzeSeverityResult sexualResult, class Azure.AI.ContentSafety.ImageAnalyzeSeverityResult violenceResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.AnalyzeImageResult(Azure.AI.ContentSafety.ImageAnalyzeSeverityResult,Azure.AI.ContentSafety.ImageAnalyzeSeverityResult,Azure.AI.ContentSafety.ImageAnalyzeSeverityResult,Azure.AI.ContentSafety.ImageAnalyzeSeverityResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnalyzeImageResult (Optional hateResult As ImageAnalyzeSeverityResult = Nothing, Optional selfHarmResult As ImageAnalyzeSeverityResult = Nothing, Optional sexualResult As ImageAnalyzeSeverityResult = Nothing, Optional violenceResult As ImageAnalyzeSeverityResult = Nothing) As AnalyzeImageResult" />
      <MemberSignature Language="F#" Value="static member AnalyzeImageResult : Azure.AI.ContentSafety.ImageAnalyzeSeverityResult * Azure.AI.ContentSafety.ImageAnalyzeSeverityResult * Azure.AI.ContentSafety.ImageAnalyzeSeverityResult * Azure.AI.ContentSafety.ImageAnalyzeSeverityResult -&gt; Azure.AI.ContentSafety.AnalyzeImageResult" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.AnalyzeImageResult (hateResult, selfHarmResult, sexualResult, violenceResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.AnalyzeImageResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hateResult" Type="Azure.AI.ContentSafety.ImageAnalyzeSeverityResult" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="selfHarmResult" Type="Azure.AI.ContentSafety.ImageAnalyzeSeverityResult" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="sexualResult" Type="Azure.AI.ContentSafety.ImageAnalyzeSeverityResult" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="violenceResult" Type="Azure.AI.ContentSafety.ImageAnalyzeSeverityResult" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="hateResult"> Analysis result for Hate category. </param>
        <param name="selfHarmResult"> Analysis result for SelfHarm category. </param>
        <param name="sexualResult"> Analysis result for Sexual category. </param>
        <param name="violenceResult"> Analysis result for Violence category. </param>
        <summary> Initializes a new instance of AnalyzeImageResult. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.AnalyzeImageResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnalyzeTextResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.AnalyzeTextResult AnalyzeTextResult (System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.TextBlocklistMatch&gt; blocklistsMatch = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.TextCategoriesAnalysis&gt; categoriesAnalysis = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.AnalyzeTextResult AnalyzeTextResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.ContentSafety.TextBlocklistMatch&gt; blocklistsMatch, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.ContentSafety.TextCategoriesAnalysis&gt; categoriesAnalysis) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.AnalyzeTextResult(System.Collections.Generic.IEnumerable{Azure.AI.ContentSafety.TextBlocklistMatch},System.Collections.Generic.IEnumerable{Azure.AI.ContentSafety.TextCategoriesAnalysis})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnalyzeTextResult (Optional blocklistsMatch As IEnumerable(Of TextBlocklistMatch) = Nothing, Optional categoriesAnalysis As IEnumerable(Of TextCategoriesAnalysis) = Nothing) As AnalyzeTextResult" />
      <MemberSignature Language="F#" Value="static member AnalyzeTextResult : seq&lt;Azure.AI.ContentSafety.TextBlocklistMatch&gt; * seq&lt;Azure.AI.ContentSafety.TextCategoriesAnalysis&gt; -&gt; Azure.AI.ContentSafety.AnalyzeTextResult" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.AnalyzeTextResult (blocklistsMatch, categoriesAnalysis)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.AnalyzeTextResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blocklistsMatch" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.TextBlocklistMatch&gt;" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="categoriesAnalysis" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.TextCategoriesAnalysis&gt;" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="blocklistsMatch"> The blocklist match details. </param>
        <param name="categoriesAnalysis"> Analysis result for categories. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.ContentSafety.AnalyzeTextResult" />. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.AnalyzeTextResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnalyzeTextResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.AnalyzeTextResult AnalyzeTextResult (System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.TextBlocklistMatchResult&gt; blocklistsMatchResults = default, Azure.AI.ContentSafety.TextAnalyzeSeverityResult hateResult = default, Azure.AI.ContentSafety.TextAnalyzeSeverityResult selfHarmResult = default, Azure.AI.ContentSafety.TextAnalyzeSeverityResult sexualResult = default, Azure.AI.ContentSafety.TextAnalyzeSeverityResult violenceResult = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.AnalyzeTextResult AnalyzeTextResult(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.ContentSafety.TextBlocklistMatchResult&gt; blocklistsMatchResults, class Azure.AI.ContentSafety.TextAnalyzeSeverityResult hateResult, class Azure.AI.ContentSafety.TextAnalyzeSeverityResult selfHarmResult, class Azure.AI.ContentSafety.TextAnalyzeSeverityResult sexualResult, class Azure.AI.ContentSafety.TextAnalyzeSeverityResult violenceResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.AnalyzeTextResult(System.Collections.Generic.IEnumerable{Azure.AI.ContentSafety.TextBlocklistMatchResult},Azure.AI.ContentSafety.TextAnalyzeSeverityResult,Azure.AI.ContentSafety.TextAnalyzeSeverityResult,Azure.AI.ContentSafety.TextAnalyzeSeverityResult,Azure.AI.ContentSafety.TextAnalyzeSeverityResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnalyzeTextResult (Optional blocklistsMatchResults As IEnumerable(Of TextBlocklistMatchResult) = Nothing, Optional hateResult As TextAnalyzeSeverityResult = Nothing, Optional selfHarmResult As TextAnalyzeSeverityResult = Nothing, Optional sexualResult As TextAnalyzeSeverityResult = Nothing, Optional violenceResult As TextAnalyzeSeverityResult = Nothing) As AnalyzeTextResult" />
      <MemberSignature Language="F#" Value="static member AnalyzeTextResult : seq&lt;Azure.AI.ContentSafety.TextBlocklistMatchResult&gt; * Azure.AI.ContentSafety.TextAnalyzeSeverityResult * Azure.AI.ContentSafety.TextAnalyzeSeverityResult * Azure.AI.ContentSafety.TextAnalyzeSeverityResult * Azure.AI.ContentSafety.TextAnalyzeSeverityResult -&gt; Azure.AI.ContentSafety.AnalyzeTextResult" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.AnalyzeTextResult (blocklistsMatchResults, hateResult, selfHarmResult, sexualResult, violenceResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.AnalyzeTextResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blocklistsMatchResults" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.ContentSafety.TextBlocklistMatchResult&gt;" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="hateResult" Type="Azure.AI.ContentSafety.TextAnalyzeSeverityResult" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="selfHarmResult" Type="Azure.AI.ContentSafety.TextAnalyzeSeverityResult" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="sexualResult" Type="Azure.AI.ContentSafety.TextAnalyzeSeverityResult" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="violenceResult" Type="Azure.AI.ContentSafety.TextAnalyzeSeverityResult" Index="4" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="blocklistsMatchResults"> The details of blocklist match. </param>
        <param name="hateResult"> Analysis result for Hate category. </param>
        <param name="selfHarmResult"> Analysis result for SelfHarm category. </param>
        <param name="sexualResult"> Analysis result for Sexual category. </param>
        <param name="violenceResult"> Analysis result for Violence category. </param>
        <summary> Initializes a new instance of AnalyzeTextResult. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.AnalyzeTextResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageAnalyzeSeverityResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.ImageAnalyzeSeverityResult ImageAnalyzeSeverityResult (Azure.AI.ContentSafety.ImageCategory category = default, int severity = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.ImageAnalyzeSeverityResult ImageAnalyzeSeverityResult(valuetype Azure.AI.ContentSafety.ImageCategory category, int32 severity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.ImageAnalyzeSeverityResult(Azure.AI.ContentSafety.ImageCategory,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ImageAnalyzeSeverityResult (Optional category As ImageCategory = Nothing, Optional severity As Integer = 0) As ImageAnalyzeSeverityResult" />
      <MemberSignature Language="F#" Value="static member ImageAnalyzeSeverityResult : Azure.AI.ContentSafety.ImageCategory * int -&gt; Azure.AI.ContentSafety.ImageAnalyzeSeverityResult" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.ImageAnalyzeSeverityResult (category, severity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.ImageAnalyzeSeverityResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="Azure.AI.ContentSafety.ImageCategory" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="severity" Type="System.Int32" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="category"> The image category. </param>
        <param name="severity"> The higher the severity of input content, the larger this value, currently its value could be: 0,2,4,6. </param>
        <summary> Initializes a new instance of ImageAnalyzeSeverityResult. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.ImageAnalyzeSeverityResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageCategoriesAnalysis">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.ImageCategoriesAnalysis ImageCategoriesAnalysis (Azure.AI.ContentSafety.ImageCategory category = default, int? severity = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.ImageCategoriesAnalysis ImageCategoriesAnalysis(valuetype Azure.AI.ContentSafety.ImageCategory category, valuetype System.Nullable`1&lt;int32&gt; severity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.ImageCategoriesAnalysis(Azure.AI.ContentSafety.ImageCategory,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ImageCategoriesAnalysis (Optional category As ImageCategory = Nothing, Optional severity As Nullable(Of Integer) = Nothing) As ImageCategoriesAnalysis" />
      <MemberSignature Language="F#" Value="static member ImageCategoriesAnalysis : Azure.AI.ContentSafety.ImageCategory * Nullable&lt;int&gt; -&gt; Azure.AI.ContentSafety.ImageCategoriesAnalysis" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.ImageCategoriesAnalysis (category, severity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.ImageCategoriesAnalysis</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="Azure.AI.ContentSafety.ImageCategory" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="severity" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="category"> The image analysis category. </param>
        <param name="severity"> The value increases with the severity of the input content. The value of this field is determined by the output type specified in the request. The output type could be ‘FourSeverityLevels’, and the output value can be 0, 2, 4, 6. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.ContentSafety.ImageCategoriesAnalysis" />. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.ImageCategoriesAnalysis" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAnalyzeSeverityResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.TextAnalyzeSeverityResult TextAnalyzeSeverityResult (Azure.AI.ContentSafety.TextCategory category = default, int severity = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.TextAnalyzeSeverityResult TextAnalyzeSeverityResult(valuetype Azure.AI.ContentSafety.TextCategory category, int32 severity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.TextAnalyzeSeverityResult(Azure.AI.ContentSafety.TextCategory,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TextAnalyzeSeverityResult (Optional category As TextCategory = Nothing, Optional severity As Integer = 0) As TextAnalyzeSeverityResult" />
      <MemberSignature Language="F#" Value="static member TextAnalyzeSeverityResult : Azure.AI.ContentSafety.TextCategory * int -&gt; Azure.AI.ContentSafety.TextAnalyzeSeverityResult" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.TextAnalyzeSeverityResult (category, severity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.TextAnalyzeSeverityResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="Azure.AI.ContentSafety.TextCategory" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="severity" Type="System.Int32" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="category"> The text category. </param>
        <param name="severity"> The higher the severity of input content, the larger this value is. The values could be: 0,2,4,6. </param>
        <summary> Initializes a new instance of TextAnalyzeSeverityResult. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.TextAnalyzeSeverityResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBlockItem">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.TextBlockItem TextBlockItem (string blockItemId = default, string description = default, string text = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.TextBlockItem TextBlockItem(string blockItemId, string description, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.TextBlockItem(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TextBlockItem (Optional blockItemId As String = Nothing, Optional description As String = Nothing, Optional text As String = Nothing) As TextBlockItem" />
      <MemberSignature Language="F#" Value="static member TextBlockItem : string * string * string -&gt; Azure.AI.ContentSafety.TextBlockItem" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.TextBlockItem (blockItemId, description, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.TextBlockItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockItemId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="description" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="text" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="blockItemId"> Block Item Id. It will be uuid. </param>
        <param name="description"> Block item description. </param>
        <param name="text"> Block item content. </param>
        <summary> Initializes a new instance of TextBlockItem. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.TextBlockItem" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBlocklist">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.TextBlocklist TextBlocklist (string name = default, string description = default);" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.TextBlocklist TextBlocklist(string name, string description) cil managed" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.TextBlocklist(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TextBlocklist (Optional name As String = Nothing, Optional description As String = Nothing) As TextBlocklist" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="F#" Value="static member TextBlocklist : string * string -&gt; Azure.AI.ContentSafety.TextBlocklist" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.TextBlocklist (name, description)" FrameworkAlternate="azure-dotnet" />
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.TextBlocklist TextBlocklist (string blocklistName = default, string description = default);" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.TextBlocklist TextBlocklist(string blocklistName, string description) cil managed" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TextBlocklist (Optional blocklistName As String = Nothing, Optional description As String = Nothing) As TextBlocklist" FrameworkAlternate="azure-dotnet-preview" />
      <MemberSignature Language="F#" Value="static member TextBlocklist : string * string -&gt; Azure.AI.ContentSafety.TextBlocklist" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.TextBlocklist (blocklistName, description)" FrameworkAlternate="azure-dotnet-preview" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.TextBlocklist</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="blocklistName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="description" Type="System.String" Index="1" />
      </Parameters>
      <Docs>
        <param name="name"> Text blocklist name. </param>
        <param name="blocklistName"> Text blocklist name. </param>
        <param name="description"> Text blocklist description. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.ContentSafety.TextBlocklist" />. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.TextBlocklist" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBlocklistItem">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.TextBlocklistItem TextBlocklistItem (string blocklistItemId = default, string description = default, string text = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.TextBlocklistItem TextBlocklistItem(string blocklistItemId, string description, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.TextBlocklistItem(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TextBlocklistItem (Optional blocklistItemId As String = Nothing, Optional description As String = Nothing, Optional text As String = Nothing) As TextBlocklistItem" />
      <MemberSignature Language="F#" Value="static member TextBlocklistItem : string * string * string -&gt; Azure.AI.ContentSafety.TextBlocklistItem" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.TextBlocklistItem (blocklistItemId, description, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.TextBlocklistItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blocklistItemId" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="description" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="text" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="blocklistItemId"> The service will generate a BlocklistItemId, which will be a UUID. </param>
        <param name="description"> BlocklistItem description. </param>
        <param name="text"> BlocklistItem content. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.ContentSafety.TextBlocklistItem" />. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.TextBlocklistItem" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBlocklistMatch">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.TextBlocklistMatch TextBlocklistMatch (string blocklistName = default, string blocklistItemId = default, string blocklistItemText = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.TextBlocklistMatch TextBlocklistMatch(string blocklistName, string blocklistItemId, string blocklistItemText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.TextBlocklistMatch(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TextBlocklistMatch (Optional blocklistName As String = Nothing, Optional blocklistItemId As String = Nothing, Optional blocklistItemText As String = Nothing) As TextBlocklistMatch" />
      <MemberSignature Language="F#" Value="static member TextBlocklistMatch : string * string * string -&gt; Azure.AI.ContentSafety.TextBlocklistMatch" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.TextBlocklistMatch (blocklistName, blocklistItemId, blocklistItemText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.TextBlocklistMatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blocklistName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="blocklistItemId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="blocklistItemText" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="blocklistName"> The name of the matched blocklist. </param>
        <param name="blocklistItemId"> The ID of the matched item. </param>
        <param name="blocklistItemText"> The content of the matched item. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.ContentSafety.TextBlocklistMatch" />. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.TextBlocklistMatch" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="blocklistName" />, <paramref name="blocklistItemId" /> or <paramref name="blocklistItemText" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TextBlocklistMatchResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.TextBlocklistMatchResult TextBlocklistMatchResult (string blocklistName = default, string blockItemId = default, string blockItemText = default, int offset = 0, int length = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.TextBlocklistMatchResult TextBlocklistMatchResult(string blocklistName, string blockItemId, string blockItemText, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.TextBlocklistMatchResult(System.String,System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TextBlocklistMatchResult (Optional blocklistName As String = Nothing, Optional blockItemId As String = Nothing, Optional blockItemText As String = Nothing, Optional offset As Integer = 0, Optional length As Integer = 0) As TextBlocklistMatchResult" />
      <MemberSignature Language="F#" Value="static member TextBlocklistMatchResult : string * string * string * int * int -&gt; Azure.AI.ContentSafety.TextBlocklistMatchResult" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.TextBlocklistMatchResult (blocklistName, blockItemId, blockItemText, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.TextBlocklistMatchResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blocklistName" Type="System.String" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="blockItemId" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="blockItemText" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="offset" Type="System.Int32" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="length" Type="System.Int32" Index="4" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="blocklistName"> The name of matched blocklist. </param>
        <param name="blockItemId"> The id of matched item. </param>
        <param name="blockItemText"> The content of matched item. </param>
        <param name="offset"> The character offset of matched text in original input. </param>
        <param name="length"> The length of matched text in original input. </param>
        <summary> Initializes a new instance of TextBlocklistMatchResult. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.TextBlocklistMatchResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="blocklistName" />, <paramref name="blockItemId" /> or <paramref name="blockItemText" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="TextCategoriesAnalysis">
      <MemberSignature Language="C#" Value="public static Azure.AI.ContentSafety.TextCategoriesAnalysis TextCategoriesAnalysis (Azure.AI.ContentSafety.TextCategory category = default, int? severity = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.ContentSafety.TextCategoriesAnalysis TextCategoriesAnalysis(valuetype Azure.AI.ContentSafety.TextCategory category, valuetype System.Nullable`1&lt;int32&gt; severity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.ContentSafety.ContentSafetyModelFactory.TextCategoriesAnalysis(Azure.AI.ContentSafety.TextCategory,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TextCategoriesAnalysis (Optional category As TextCategory = Nothing, Optional severity As Nullable(Of Integer) = Nothing) As TextCategoriesAnalysis" />
      <MemberSignature Language="F#" Value="static member TextCategoriesAnalysis : Azure.AI.ContentSafety.TextCategory * Nullable&lt;int&gt; -&gt; Azure.AI.ContentSafety.TextCategoriesAnalysis" Usage="Azure.AI.ContentSafety.ContentSafetyModelFactory.TextCategoriesAnalysis (category, severity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.ContentSafety</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.ContentSafety.TextCategoriesAnalysis</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="Azure.AI.ContentSafety.TextCategory" Index="0" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="severity" Type="System.Nullable&lt;System.Int32&gt;" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="category"> The text analysis category. </param>
        <param name="severity"> The value increases with the severity of the input content. The value of this field is determined by the output type specified in the request. The output type could be ‘FourSeverityLevels’ or ‘EightSeverity Levels’, and the output value can be 0, 2, 4, 6 or 0, 1, 2, 3, 4, 5, 6, or 7. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.ContentSafety.TextCategoriesAnalysis" />. </summary>
        <returns> A new <see cref="T:Azure.AI.ContentSafety.TextCategoriesAnalysis" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
