<Type Name="EventGridFilter" FullName="Azure.ResourceManager.EventGrid.Models.EventGridFilter">
  <TypeSignature Language="C#" Value="public abstract class EventGridFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EventGridFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.EventGrid.Models.EventGridFilter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EventGridFilter" />
  <TypeSignature Language="F#" Value="type EventGridFilter = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate
            an object of a derived class such as BoolEqualsFilter, NumberInFilter, StringEqualsFilter etc depending on the type of the key based on
            which you want to filter.
            Please note <see cref="T:Azure.ResourceManager.EventGrid.Models.EventGridFilter" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.EventGrid.Models.BoolEqualsFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.IsNotNullFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.IsNullOrUndefinedFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberGreaterThanFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberGreaterThanOrEqualsFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberInFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberInRangeFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberLessThanFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberLessThanOrEqualsFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberNotInFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberNotInRangeFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.StringBeginsWithFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.StringContainsFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.StringEndsWithFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.StringInFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.StringNotBeginsWithFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.StringNotContainsFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.StringNotEndsWithFilter" /> and <see cref="T:Azure.ResourceManager.EventGrid.Models.StringNotInFilter" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventGridFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.Models.EventGridFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of EventGridFilter. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public string Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Key" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.EventGridFilter.Key" />
      <MemberSignature Language="VB.NET" Value="Public Property Key As String" />
      <MemberSignature Language="F#" Value="member this.Key : string with get, set" Usage="Azure.ResourceManager.EventGrid.Models.EventGridFilter.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The field/property in the event based on which you want to filter. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
