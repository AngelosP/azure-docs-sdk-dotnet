<Type Name="FiltersConfiguration" FullName="Azure.ResourceManager.EventGrid.Models.FiltersConfiguration">
  <TypeSignature Language="C#" Value="public class FiltersConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FiltersConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.EventGrid.Models.FiltersConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class FiltersConfiguration" />
  <TypeSignature Language="F#" Value="type FiltersConfiguration = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Filters configuration for the Event Subscription. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FiltersConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventGrid.Models.FiltersConfiguration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.EventGrid.Models.FiltersConfiguration" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.ResourceManager.EventGrid.Models.EventGridFilter&gt; Filters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.ResourceManager.EventGrid.Models.EventGridFilter&gt; Filters" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.FiltersConfiguration.Filters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Filters As IList(Of EventGridFilter)" />
      <MemberSignature Language="F#" Value="member this.Filters : System.Collections.Generic.IList&lt;Azure.ResourceManager.EventGrid.Models.EventGridFilter&gt;" Usage="Azure.ResourceManager.EventGrid.Models.FiltersConfiguration.Filters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.ResourceManager.EventGrid.Models.EventGridFilter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An array of filters that are used for filtering event subscriptions.
            Please note <see cref="T:Azure.ResourceManager.EventGrid.Models.EventGridFilter" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.EventGrid.Models.BoolEqualsFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.IsNotNullFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.IsNullOrUndefinedFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberGreaterThanFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberGreaterThanOrEqualsFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberInFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberInRangeFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberLessThanFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberLessThanOrEqualsFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberNotInFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.NumberNotInRangeFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.StringBeginsWithFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.StringContainsFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.StringEndsWithFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.StringInFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.StringNotBeginsWithFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.StringNotContainsFilter" />, <see cref="T:Azure.ResourceManager.EventGrid.Models.StringNotEndsWithFilter" /> and <see cref="T:Azure.ResourceManager.EventGrid.Models.StringNotInFilter" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludedEventTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; IncludedEventTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; IncludedEventTypes" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.EventGrid.Models.FiltersConfiguration.IncludedEventTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludedEventTypes As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.IncludedEventTypes : System.Collections.Generic.IList&lt;string&gt;" Usage="Azure.ResourceManager.EventGrid.Models.FiltersConfiguration.IncludedEventTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventGrid</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
