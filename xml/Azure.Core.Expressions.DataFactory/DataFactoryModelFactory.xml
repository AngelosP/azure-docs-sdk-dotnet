<Type Name="DataFactoryModelFactory" FullName="Azure.Core.Expressions.DataFactory.DataFactoryModelFactory">
  <TypeSignature Language="C#" Value="public static class DataFactoryModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataFactoryModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Core.Expressions.DataFactory.DataFactoryModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class DataFactoryModelFactory" />
  <TypeSignature Language="F#" Value="type DataFactoryModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Core.Expressions.DataFactory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Model factory to construct types for mocking.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DataFactoryKeyVaultSecretReference">
      <MemberSignature Language="C#" Value="public static Azure.Core.Expressions.DataFactory.DataFactoryKeyVaultSecretReference DataFactoryKeyVaultSecretReference (Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReference store, Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; secretName, Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; secretVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.Expressions.DataFactory.DataFactoryKeyVaultSecretReference DataFactoryKeyVaultSecretReference(class Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReference store, class Azure.Core.Expressions.DataFactory.DataFactoryElement`1&lt;string&gt; secretName, class Azure.Core.Expressions.DataFactory.DataFactoryElement`1&lt;string&gt; secretVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Expressions.DataFactory.DataFactoryModelFactory.DataFactoryKeyVaultSecretReference(Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReference,Azure.Core.Expressions.DataFactory.DataFactoryElement{System.String},Azure.Core.Expressions.DataFactory.DataFactoryElement{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DataFactoryKeyVaultSecretReference (store As DataFactoryLinkedServiceReference, secretName As DataFactoryElement(Of String), secretVersion As DataFactoryElement(Of String)) As DataFactoryKeyVaultSecretReference" />
      <MemberSignature Language="F#" Value="static member DataFactoryKeyVaultSecretReference : Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReference * Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; * Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;string&gt; -&gt; Azure.Core.Expressions.DataFactory.DataFactoryKeyVaultSecretReference" Usage="Azure.Core.Expressions.DataFactory.DataFactoryModelFactory.DataFactoryKeyVaultSecretReference (store, secretName, secretVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core.Expressions.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Expressions.DataFactory.DataFactoryKeyVaultSecretReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReference" />
        <Parameter Name="secretName" Type="Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;System.String&gt;" />
        <Parameter Name="secretVersion" Type="Azure.Core.Expressions.DataFactory.DataFactoryElement&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="store">The linked store.</param>
        <param name="secretName">The secret name.</param>
        <param name="secretVersion">The secret version.</param>
        <summary>
            Constructs a <see cref="M:Azure.Core.Expressions.DataFactory.DataFactoryModelFactory.DataFactoryKeyVaultSecretReference(Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReference,Azure.Core.Expressions.DataFactory.DataFactoryElement{System.String},Azure.Core.Expressions.DataFactory.DataFactoryElement{System.String})" /> for mocking.
            </summary>
        <returns>The constructed <see cref="M:Azure.Core.Expressions.DataFactory.DataFactoryModelFactory.DataFactoryKeyVaultSecretReference(Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReference,Azure.Core.Expressions.DataFactory.DataFactoryElement{System.String},Azure.Core.Expressions.DataFactory.DataFactoryElement{System.String})" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataFactoryLinkedServiceReference">
      <MemberSignature Language="C#" Value="public static Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReference DataFactoryLinkedServiceReference (Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReferenceType referenceType, string? referenceName, System.Collections.Generic.IDictionary&lt;string,BinaryData?&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReference DataFactoryLinkedServiceReference(valuetype Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReferenceType referenceType, string referenceName, class System.Collections.Generic.IDictionary`2&lt;string, class System.BinaryData&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Expressions.DataFactory.DataFactoryModelFactory.DataFactoryLinkedServiceReference(Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReferenceType,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DataFactoryLinkedServiceReference (referenceType As DataFactoryLinkedServiceReferenceType, referenceName As String, parameters As IDictionary(Of String, BinaryData)) As DataFactoryLinkedServiceReference" />
      <MemberSignature Language="F#" Value="static member DataFactoryLinkedServiceReference : Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReferenceType * string * System.Collections.Generic.IDictionary&lt;string, BinaryData&gt; -&gt; Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReference" Usage="Azure.Core.Expressions.DataFactory.DataFactoryModelFactory.DataFactoryLinkedServiceReference (referenceType, referenceName, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core.Expressions.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="referenceType" Type="Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReferenceType" />
        <Parameter Name="referenceName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.BinaryData&gt;" />
      </Parameters>
      <Docs>
        <param name="referenceType">The reference type.</param>
        <param name="referenceName">The reference name.</param>
        <param name="parameters">The reference parameters.</param>
        <summary>
            Constructs a <see cref="M:Azure.Core.Expressions.DataFactory.DataFactoryModelFactory.DataFactoryLinkedServiceReference(Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReferenceType,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})" /> for mocking.
            </summary>
        <returns>The constructed <see cref="M:Azure.Core.Expressions.DataFactory.DataFactoryModelFactory.DataFactoryLinkedServiceReference(Azure.Core.Expressions.DataFactory.DataFactoryLinkedServiceReferenceType,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataFactorySecretBaseDefinition">
      <MemberSignature Language="C#" Value="public static Azure.Core.Expressions.DataFactory.DataFactorySecretBaseDefinition DataFactorySecretBaseDefinition (string secretBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.Expressions.DataFactory.DataFactorySecretBaseDefinition DataFactorySecretBaseDefinition(string secretBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Expressions.DataFactory.DataFactoryModelFactory.DataFactorySecretBaseDefinition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DataFactorySecretBaseDefinition (secretBaseType As String) As DataFactorySecretBaseDefinition" />
      <MemberSignature Language="F#" Value="static member DataFactorySecretBaseDefinition : string -&gt; Azure.Core.Expressions.DataFactory.DataFactorySecretBaseDefinition" Usage="Azure.Core.Expressions.DataFactory.DataFactoryModelFactory.DataFactorySecretBaseDefinition secretBaseType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core.Expressions.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Expressions.DataFactory.DataFactorySecretBaseDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secretBaseType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="secretBaseType">The secret base type.</param>
        <summary>
            Constructs a <see cref="M:Azure.Core.Expressions.DataFactory.DataFactoryModelFactory.DataFactorySecretBaseDefinition(System.String)" /> for mocking.
            </summary>
        <returns>The constructed <see cref="M:Azure.Core.Expressions.DataFactory.DataFactoryModelFactory.DataFactorySecretBaseDefinition(System.String)" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataFactorySecretString">
      <MemberSignature Language="C#" Value="public static Azure.Core.Expressions.DataFactory.DataFactorySecretString DataFactorySecretString (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.Expressions.DataFactory.DataFactorySecretString DataFactorySecretString(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Expressions.DataFactory.DataFactoryModelFactory.DataFactorySecretString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DataFactorySecretString (value As String) As DataFactorySecretString" />
      <MemberSignature Language="F#" Value="static member DataFactorySecretString : string -&gt; Azure.Core.Expressions.DataFactory.DataFactorySecretString" Usage="Azure.Core.Expressions.DataFactory.DataFactoryModelFactory.DataFactorySecretString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core.Expressions.DataFactory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Expressions.DataFactory.DataFactorySecretString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">The secret string value.</param>
        <summary>
            Constructs a <see cref="M:Azure.Core.Expressions.DataFactory.DataFactoryModelFactory.DataFactorySecretString(System.String)" /> for mocking.
            </summary>
        <returns>The constructed <see cref="M:Azure.Core.Expressions.DataFactory.DataFactoryModelFactory.DataFactorySecretString(System.String)" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
