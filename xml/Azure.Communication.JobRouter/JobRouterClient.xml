<Type Name="JobRouterClient" FullName="Azure.Communication.JobRouter.JobRouterClient">
  <TypeSignature Language="C#" Value="public class JobRouterClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JobRouterClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.JobRouter.JobRouterClient" />
  <TypeSignature Language="VB.NET" Value="Public Class JobRouterClient" />
  <TypeSignature Language="F#" Value="type JobRouterClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The Azure Communication Services Router client.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JobRouterClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of <see cref="T:Azure.Communication.JobRouter.JobRouterClient" /> for mocking.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JobRouterClient (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.JobRouter.JobRouterClient : string -&gt; Azure.Communication.JobRouter.JobRouterClient" Usage="new Azure.Communication.JobRouter.JobRouterClient connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connection string acquired from the Azure Communication Services resource.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.Communication.JobRouter.JobRouterClient" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JobRouterClient (string connectionString, Azure.Communication.JobRouter.JobRouterClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class Azure.Communication.JobRouter.JobRouterClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.#ctor(System.String,Azure.Communication.JobRouter.JobRouterClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, options As JobRouterClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.JobRouter.JobRouterClient : string * Azure.Communication.JobRouter.JobRouterClientOptions -&gt; Azure.Communication.JobRouter.JobRouterClient" Usage="new Azure.Communication.JobRouter.JobRouterClient (connectionString, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="options" Type="Azure.Communication.JobRouter.JobRouterClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connection string acquired from the Azure Communication Services resource.</param>
        <param name="options">Client option exposing <see cref="P:Azure.Core.ClientOptions.Diagnostics" />, <see cref="P:Azure.Core.ClientOptions.Retry" />, <see cref="P:Azure.Core.ClientOptions.Transport" />, etc.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.Communication.JobRouter.JobRouterClient" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JobRouterClient (Uri endpoint, Azure.AzureKeyCredential credential, Azure.Communication.JobRouter.JobRouterClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential, class Azure.Communication.JobRouter.JobRouterClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.Communication.JobRouter.JobRouterClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential, Optional options As JobRouterClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.JobRouter.JobRouterClient : Uri * Azure.AzureKeyCredential * Azure.Communication.JobRouter.JobRouterClientOptions -&gt; Azure.Communication.JobRouter.JobRouterClient" Usage="new Azure.Communication.JobRouter.JobRouterClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
        <Parameter Name="options" Type="Azure.Communication.JobRouter.JobRouterClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The URI of the Azure Communication Services resource.</param>
        <param name="credential">The <see cref="T:Azure.AzureKeyCredential" /> used to authenticate requests.</param>
        <param name="options">Client option exposing <see cref="P:Azure.Core.ClientOptions.Diagnostics" />, <see cref="P:Azure.Core.ClientOptions.Retry" />, <see cref="P:Azure.Core.ClientOptions.Transport" />, etc.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.Communication.JobRouter.JobRouterClient" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JobRouterClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Communication.JobRouter.JobRouterClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Communication.JobRouter.JobRouterClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Communication.JobRouter.JobRouterClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, Optional options As JobRouterClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.JobRouter.JobRouterClient : Uri * Azure.Core.TokenCredential * Azure.Communication.JobRouter.JobRouterClientOptions -&gt; Azure.Communication.JobRouter.JobRouterClient" Usage="new Azure.Communication.JobRouter.JobRouterClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Communication.JobRouter.JobRouterClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The URI of the Azure Communication Services resource.</param>
        <param name="credential">The TokenCredential used to authenticate requests, such as DefaultAzureCredential.</param>
        <param name="options">Client option exposing <see cref="P:Azure.Core.ClientOptions.Diagnostics" />, <see cref="P:Azure.Core.ClientOptions.Retry" />, <see cref="P:Azure.Core.ClientOptions.Transport" />, etc.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.Communication.JobRouter.JobRouterClient" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptJobOffer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.JobRouter.Models.AcceptJobOfferResult&gt; AcceptJobOffer (string workerId, string offerId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.AcceptJobOfferResult&gt; AcceptJobOffer(string workerId, string offerId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.AcceptJobOffer(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AcceptJobOffer (workerId As String, offerId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AcceptJobOfferResult)" />
      <MemberSignature Language="F#" Value="abstract member AcceptJobOffer : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.AcceptJobOfferResult&gt;&#xA;override this.AcceptJobOffer : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.AcceptJobOfferResult&gt;" Usage="jobRouterClient.AcceptJobOffer (workerId, offerId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.JobRouter.Models.AcceptJobOfferResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workerId" Type="System.String" />
        <Parameter Name="offerId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workerId"> The Id of the Worker. </param>
        <param name="offerId"> The Id of the Job offer. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Accepts an offer to work on a job and returns a 409/Conflict if another agent accepted the job already. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="offerId" /> or <paramref name="workerId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="AcceptJobOfferAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.AcceptJobOfferResult&gt;&gt; AcceptJobOfferAsync (string workerId, string offerId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.AcceptJobOfferResult&gt;&gt; AcceptJobOfferAsync(string workerId, string offerId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.AcceptJobOfferAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AcceptJobOfferAsync (workerId As String, offerId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AcceptJobOfferResult))" />
      <MemberSignature Language="F#" Value="abstract member AcceptJobOfferAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.AcceptJobOfferResult&gt;&gt;&#xA;override this.AcceptJobOfferAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.AcceptJobOfferResult&gt;&gt;" Usage="jobRouterClient.AcceptJobOfferAsync (workerId, offerId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.AcceptJobOfferResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workerId" Type="System.String" />
        <Parameter Name="offerId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workerId"> The Id of the Worker. </param>
        <param name="offerId"> The Id of the Job offer. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Accepts an offer to work on a job and returns a 409/Conflict if another agent accepted the job already. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="offerId" /> or <paramref name="workerId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CancelJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CancelJob (Azure.Communication.JobRouter.CancelJobOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CancelJob(class Azure.Communication.JobRouter.CancelJobOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.CancelJob(Azure.Communication.JobRouter.CancelJobOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelJob (options As CancelJobOptions, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CancelJob : Azure.Communication.JobRouter.CancelJobOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.CancelJob : Azure.Communication.JobRouter.CancelJobOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="jobRouterClient.CancelJob (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.CancelJobOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for cancelling a job. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Submits request to cancel an existing job by Id while supplying free-form cancellation reason. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CancelJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CancelJobAsync (Azure.Communication.JobRouter.CancelJobOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CancelJobAsync(class Azure.Communication.JobRouter.CancelJobOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.CancelJobAsync(Azure.Communication.JobRouter.CancelJobOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CancelJobAsync (options As CancelJobOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CancelJobAsync : Azure.Communication.JobRouter.CancelJobOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CancelJobAsync : Azure.Communication.JobRouter.CancelJobOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="jobRouterClient.CancelJobAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.CancelJobOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for cancelling a job. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Submits request to cancel an existing job by Id while supplying free-form cancellation reason. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CloseJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CloseJob (Azure.Communication.JobRouter.CloseJobOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CloseJob(class Azure.Communication.JobRouter.CloseJobOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.CloseJob(Azure.Communication.JobRouter.CloseJobOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloseJob (options As CloseJobOptions, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CloseJob : Azure.Communication.JobRouter.CloseJobOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.CloseJob : Azure.Communication.JobRouter.CloseJobOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="jobRouterClient.CloseJob (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.CloseJobOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for closing a job. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Closes a completed job. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CloseJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CloseJobAsync (Azure.Communication.JobRouter.CloseJobOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CloseJobAsync(class Azure.Communication.JobRouter.CloseJobOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.CloseJobAsync(Azure.Communication.JobRouter.CloseJobOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloseJobAsync (options As CloseJobOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CloseJobAsync : Azure.Communication.JobRouter.CloseJobOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CloseJobAsync : Azure.Communication.JobRouter.CloseJobOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="jobRouterClient.CloseJobAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.CloseJobOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for closing a job. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Closes a completed job. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CompleteJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CompleteJob (Azure.Communication.JobRouter.CompleteJobOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CompleteJob(class Azure.Communication.JobRouter.CompleteJobOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.CompleteJob(Azure.Communication.JobRouter.CompleteJobOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompleteJob (options As CompleteJobOptions, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CompleteJob : Azure.Communication.JobRouter.CompleteJobOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.CompleteJob : Azure.Communication.JobRouter.CompleteJobOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="jobRouterClient.CompleteJob (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.CompleteJobOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for completing a job. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Completes an assigned job. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CompleteJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CompleteJobAsync (Azure.Communication.JobRouter.CompleteJobOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CompleteJobAsync(class Azure.Communication.JobRouter.CompleteJobOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.CompleteJobAsync(Azure.Communication.JobRouter.CompleteJobOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompleteJobAsync (options As CompleteJobOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CompleteJobAsync : Azure.Communication.JobRouter.CompleteJobOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CompleteJobAsync : Azure.Communication.JobRouter.CompleteJobOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="jobRouterClient.CompleteJobAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.CompleteJobOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for completing a job. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Completes an assigned job. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt; CreateJob (Azure.Communication.JobRouter.CreateJobOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.RouterJob&gt; CreateJob(class Azure.Communication.JobRouter.CreateJobOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.CreateJob(Azure.Communication.JobRouter.CreateJobOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateJob (options As CreateJobOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RouterJob)" />
      <MemberSignature Language="F#" Value="abstract member CreateJob : Azure.Communication.JobRouter.CreateJobOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;&#xA;override this.CreateJob : Azure.Communication.JobRouter.CreateJobOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;" Usage="jobRouterClient.CreateJob (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.CreateJobOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for creating job with direct queue assignment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates a new job to be routed. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;&gt; CreateJobAsync (Azure.Communication.JobRouter.CreateJobOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.RouterJob&gt;&gt; CreateJobAsync(class Azure.Communication.JobRouter.CreateJobOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.CreateJobAsync(Azure.Communication.JobRouter.CreateJobOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateJobAsync (options As CreateJobOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RouterJob))" />
      <MemberSignature Language="F#" Value="abstract member CreateJobAsync : Azure.Communication.JobRouter.CreateJobOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;&gt;&#xA;override this.CreateJobAsync : Azure.Communication.JobRouter.CreateJobOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;&gt;" Usage="jobRouterClient.CreateJobAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.CreateJobOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for creating job with direct queue assignment. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates a new job to be routed. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateJobWithClassificationPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt; CreateJobWithClassificationPolicy (Azure.Communication.JobRouter.CreateJobWithClassificationPolicyOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.RouterJob&gt; CreateJobWithClassificationPolicy(class Azure.Communication.JobRouter.CreateJobWithClassificationPolicyOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.CreateJobWithClassificationPolicy(Azure.Communication.JobRouter.CreateJobWithClassificationPolicyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateJobWithClassificationPolicy (options As CreateJobWithClassificationPolicyOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RouterJob)" />
      <MemberSignature Language="F#" Value="abstract member CreateJobWithClassificationPolicy : Azure.Communication.JobRouter.CreateJobWithClassificationPolicyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;&#xA;override this.CreateJobWithClassificationPolicy : Azure.Communication.JobRouter.CreateJobWithClassificationPolicyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;" Usage="jobRouterClient.CreateJobWithClassificationPolicy (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.CreateJobWithClassificationPolicyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for creating job with classification properties. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates a new job to be routed with classification property. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateJobWithClassificationPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;&gt; CreateJobWithClassificationPolicyAsync (Azure.Communication.JobRouter.CreateJobWithClassificationPolicyOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.RouterJob&gt;&gt; CreateJobWithClassificationPolicyAsync(class Azure.Communication.JobRouter.CreateJobWithClassificationPolicyOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.CreateJobWithClassificationPolicyAsync(Azure.Communication.JobRouter.CreateJobWithClassificationPolicyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateJobWithClassificationPolicyAsync (options As CreateJobWithClassificationPolicyOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RouterJob))" />
      <MemberSignature Language="F#" Value="abstract member CreateJobWithClassificationPolicyAsync : Azure.Communication.JobRouter.CreateJobWithClassificationPolicyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;&gt;&#xA;override this.CreateJobWithClassificationPolicyAsync : Azure.Communication.JobRouter.CreateJobWithClassificationPolicyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;&gt;" Usage="jobRouterClient.CreateJobWithClassificationPolicyAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.CreateJobWithClassificationPolicyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for creating job with classification properties. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates a new job to be routed with classification property. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorker">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt; CreateWorker (Azure.Communication.JobRouter.CreateWorkerOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.RouterWorker&gt; CreateWorker(class Azure.Communication.JobRouter.CreateWorkerOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.CreateWorker(Azure.Communication.JobRouter.CreateWorkerOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateWorker (options As CreateWorkerOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RouterWorker)" />
      <MemberSignature Language="F#" Value="abstract member CreateWorker : Azure.Communication.JobRouter.CreateWorkerOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt;&#xA;override this.CreateWorker : Azure.Communication.JobRouter.CreateWorkerOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt;" Usage="jobRouterClient.CreateWorker (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.CreateWorkerOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for creating a router worker. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Create or update a worker to process jobs. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt;&gt; CreateWorkerAsync (Azure.Communication.JobRouter.CreateWorkerOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.RouterWorker&gt;&gt; CreateWorkerAsync(class Azure.Communication.JobRouter.CreateWorkerOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.CreateWorkerAsync(Azure.Communication.JobRouter.CreateWorkerOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateWorkerAsync (options As CreateWorkerOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RouterWorker))" />
      <MemberSignature Language="F#" Value="abstract member CreateWorkerAsync : Azure.Communication.JobRouter.CreateWorkerOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt;&gt;&#xA;override this.CreateWorkerAsync : Azure.Communication.JobRouter.CreateWorkerOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt;&gt;" Usage="jobRouterClient.CreateWorkerAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.CreateWorkerOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for creating a router worker. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Create or update a worker to process jobs. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeclineJobOffer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeclineJobOffer (Azure.Communication.JobRouter.DeclineJobOfferOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeclineJobOffer(class Azure.Communication.JobRouter.DeclineJobOfferOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.DeclineJobOffer(Azure.Communication.JobRouter.DeclineJobOfferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeclineJobOffer (options As DeclineJobOfferOptions, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeclineJobOffer : Azure.Communication.JobRouter.DeclineJobOfferOptions * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeclineJobOffer : Azure.Communication.JobRouter.DeclineJobOfferOptions * System.Threading.CancellationToken -&gt; Azure.Response" Usage="jobRouterClient.DeclineJobOffer (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.DeclineJobOfferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> The options for declining a job offer. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Declines an offer to work on a job. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeclineJobOfferAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeclineJobOfferAsync (Azure.Communication.JobRouter.DeclineJobOfferOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeclineJobOfferAsync(class Azure.Communication.JobRouter.DeclineJobOfferOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.DeclineJobOfferAsync(Azure.Communication.JobRouter.DeclineJobOfferOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeclineJobOfferAsync (options As DeclineJobOfferOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeclineJobOfferAsync : Azure.Communication.JobRouter.DeclineJobOfferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeclineJobOfferAsync : Azure.Communication.JobRouter.DeclineJobOfferOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="jobRouterClient.DeclineJobOfferAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.DeclineJobOfferOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> The options for declining a job offer. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Declines an offer to work on a job. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteJob (string jobId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteJob(string jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.DeleteJob(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteJob (jobId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteJob : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteJob : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="jobRouterClient.DeleteJob (jobId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobId"> The String to use. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Deletes a job and all of its traces. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteJobAsync (string jobId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteJobAsync(string jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.DeleteJobAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteJobAsync (jobId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="jobRouterClient.DeleteJobAsync (jobId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobId"> The String to use. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Deletes a job and all of its traces. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteWorker">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteWorker (string workerId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteWorker(string workerId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.DeleteWorker(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteWorker (workerId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteWorker : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteWorker : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="jobRouterClient.DeleteWorker (workerId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workerId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workerId"> The Id of the Worker. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Deletes an existing worker by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="workerId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteWorkerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteWorkerAsync (string workerId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteWorkerAsync(string workerId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.DeleteWorkerAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteWorkerAsync (workerId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteWorkerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteWorkerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="jobRouterClient.DeleteWorkerAsync (workerId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workerId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workerId"> The Id of the Worker. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Deletes an existing worker by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="workerId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt; GetJob (string jobId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.RouterJob&gt; GetJob(string jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.GetJob(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJob (jobId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RouterJob)" />
      <MemberSignature Language="F#" Value="abstract member GetJob : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;&#xA;override this.GetJob : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;" Usage="jobRouterClient.GetJob (jobId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobId"> The Id of the job. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Retrieves an existing job by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;&gt; GetJobAsync (string jobId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.RouterJob&gt;&gt; GetJobAsync(string jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.GetJobAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJobAsync (jobId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RouterJob))" />
      <MemberSignature Language="F#" Value="abstract member GetJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;&gt;&#xA;override this.GetJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;&gt;" Usage="jobRouterClient.GetJobAsync (jobId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobId"> The id of the job. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Retrieves an existing job by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetJobs">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Communication.JobRouter.Models.RouterJobItem&gt; GetJobs (Azure.Communication.JobRouter.GetJobsOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Communication.JobRouter.Models.RouterJobItem&gt; GetJobs(class Azure.Communication.JobRouter.GetJobsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.GetJobs(Azure.Communication.JobRouter.GetJobsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJobs (Optional options As GetJobsOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of RouterJobItem)" />
      <MemberSignature Language="F#" Value="abstract member GetJobs : Azure.Communication.JobRouter.GetJobsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Communication.JobRouter.Models.RouterJobItem&gt;&#xA;override this.GetJobs : Azure.Communication.JobRouter.GetJobsOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Communication.JobRouter.Models.RouterJobItem&gt;" Usage="jobRouterClient.GetJobs (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Communication.JobRouter.Models.RouterJobItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.GetJobsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for filter while retrieving jobs. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetJobsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.RouterJobItem&gt; GetJobsAsync (Azure.Communication.JobRouter.GetJobsOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Communication.JobRouter.Models.RouterJobItem&gt; GetJobsAsync(class Azure.Communication.JobRouter.GetJobsOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.GetJobsAsync(Azure.Communication.JobRouter.GetJobsOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJobsAsync (Optional options As GetJobsOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of RouterJobItem)" />
      <MemberSignature Language="F#" Value="abstract member GetJobsAsync : Azure.Communication.JobRouter.GetJobsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.RouterJobItem&gt;&#xA;override this.GetJobsAsync : Azure.Communication.JobRouter.GetJobsOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.RouterJobItem&gt;" Usage="jobRouterClient.GetJobsAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.RouterJobItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.GetJobsOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for filter while retrieving jobs. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetQueuePosition">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJobPositionDetails&gt; GetQueuePosition (string jobId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.RouterJobPositionDetails&gt; GetQueuePosition(string jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.GetQueuePosition(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQueuePosition (jobId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RouterJobPositionDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetQueuePosition : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJobPositionDetails&gt;&#xA;override this.GetQueuePosition : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJobPositionDetails&gt;" Usage="jobRouterClient.GetQueuePosition (jobId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJobPositionDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobId"> The String to use. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Gets a jobs position details. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetQueuePositionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJobPositionDetails&gt;&gt; GetQueuePositionAsync (string jobId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.RouterJobPositionDetails&gt;&gt; GetQueuePositionAsync(string jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.GetQueuePositionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQueuePositionAsync (jobId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RouterJobPositionDetails))" />
      <MemberSignature Language="F#" Value="abstract member GetQueuePositionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJobPositionDetails&gt;&gt;&#xA;override this.GetQueuePositionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJobPositionDetails&gt;&gt;" Usage="jobRouterClient.GetQueuePositionAsync (jobId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJobPositionDetails&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobId"> The String to use. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Gets a jobs position details. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetQueueStatistics">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterQueueStatistics&gt; GetQueueStatistics (string queueId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.RouterQueueStatistics&gt; GetQueueStatistics(string queueId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.GetQueueStatistics(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQueueStatistics (queueId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RouterQueueStatistics)" />
      <MemberSignature Language="F#" Value="abstract member GetQueueStatistics : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterQueueStatistics&gt;&#xA;override this.GetQueueStatistics : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterQueueStatistics&gt;" Usage="jobRouterClient.GetQueueStatistics (queueId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterQueueStatistics&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queueId"> Id of the queue. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Retrieves queue statistics by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queueId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQueueStatisticsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterQueueStatistics&gt;&gt; GetQueueStatisticsAsync (string queueId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.RouterQueueStatistics&gt;&gt; GetQueueStatisticsAsync(string queueId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.GetQueueStatisticsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQueueStatisticsAsync (queueId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RouterQueueStatistics))" />
      <MemberSignature Language="F#" Value="abstract member GetQueueStatisticsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterQueueStatistics&gt;&gt;&#xA;override this.GetQueueStatisticsAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterQueueStatistics&gt;&gt;" Usage="jobRouterClient.GetQueueStatisticsAsync (queueId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterQueueStatistics&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queueId"> Id of the queue. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Retrieves queue statistics by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queueId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorker">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt; GetWorker (string workerId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.RouterWorker&gt; GetWorker(string workerId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.GetWorker(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorker (workerId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RouterWorker)" />
      <MemberSignature Language="F#" Value="abstract member GetWorker : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt;&#xA;override this.GetWorker : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt;" Usage="jobRouterClient.GetWorker (workerId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workerId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workerId"> The Id of the Worker. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Retrieves an existing worker by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="workerId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt;&gt; GetWorkerAsync (string workerId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.RouterWorker&gt;&gt; GetWorkerAsync(string workerId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.GetWorkerAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkerAsync (workerId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RouterWorker))" />
      <MemberSignature Language="F#" Value="abstract member GetWorkerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt;&gt;&#xA;override this.GetWorkerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt;&gt;" Usage="jobRouterClient.GetWorkerAsync (workerId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workerId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workerId"> The Id of the Worker. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Retrieves an existing worker by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="workerId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkers">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Communication.JobRouter.Models.RouterWorkerItem&gt; GetWorkers (Azure.Communication.JobRouter.GetWorkersOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Communication.JobRouter.Models.RouterWorkerItem&gt; GetWorkers(class Azure.Communication.JobRouter.GetWorkersOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.GetWorkers(Azure.Communication.JobRouter.GetWorkersOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkers (Optional options As GetWorkersOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of RouterWorkerItem)" />
      <MemberSignature Language="F#" Value="abstract member GetWorkers : Azure.Communication.JobRouter.GetWorkersOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Communication.JobRouter.Models.RouterWorkerItem&gt;&#xA;override this.GetWorkers : Azure.Communication.JobRouter.GetWorkersOptions * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Communication.JobRouter.Models.RouterWorkerItem&gt;" Usage="jobRouterClient.GetWorkers (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Communication.JobRouter.Models.RouterWorkerItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.GetWorkersOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for filtering while retrieving router workers. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Retrieves existing workers. Pass status and Channel Id to filter workers further. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.RouterWorkerItem&gt; GetWorkersAsync (Azure.Communication.JobRouter.GetWorkersOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Communication.JobRouter.Models.RouterWorkerItem&gt; GetWorkersAsync(class Azure.Communication.JobRouter.GetWorkersOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.GetWorkersAsync(Azure.Communication.JobRouter.GetWorkersOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWorkersAsync (Optional options As GetWorkersOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of RouterWorkerItem)" />
      <MemberSignature Language="F#" Value="abstract member GetWorkersAsync : Azure.Communication.JobRouter.GetWorkersOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.RouterWorkerItem&gt;&#xA;override this.GetWorkersAsync : Azure.Communication.JobRouter.GetWorkersOptions * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.RouterWorkerItem&gt;" Usage="jobRouterClient.GetWorkersAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.RouterWorkerItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.GetWorkersOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for filtering while retrieving router workers. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Retrieves existing workers. Pass status and Channel Id to filter workers further. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReclassifyJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response ReclassifyJob (string jobId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response ReclassifyJob(string jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.ReclassifyJob(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReclassifyJob (jobId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member ReclassifyJob : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.ReclassifyJob : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="jobRouterClient.ReclassifyJob (jobId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobId"> The id of the job. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Reclassify a job. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" />
        </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReclassifyJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; ReclassifyJobAsync (string jobId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ReclassifyJobAsync(string jobId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.ReclassifyJobAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReclassifyJobAsync (jobId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member ReclassifyJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.ReclassifyJobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="jobRouterClient.ReclassifyJobAsync (jobId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="jobId"> The id of the job. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Reclassify a job. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" />
        </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnassignJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.JobRouter.Models.UnassignJobResult&gt; UnassignJob (Azure.Communication.JobRouter.UnassignJobOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.UnassignJobResult&gt; UnassignJob(class Azure.Communication.JobRouter.UnassignJobOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.UnassignJob(Azure.Communication.JobRouter.UnassignJobOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UnassignJob (options As UnassignJobOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of UnassignJobResult)" />
      <MemberSignature Language="F#" Value="abstract member UnassignJob : Azure.Communication.JobRouter.UnassignJobOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.UnassignJobResult&gt;&#xA;override this.UnassignJob : Azure.Communication.JobRouter.UnassignJobOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.UnassignJobResult&gt;" Usage="jobRouterClient.UnassignJob (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.JobRouter.Models.UnassignJobResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.UnassignJobOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for unassigning a job from a worker. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Unassign a job from a worker. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnassignJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.UnassignJobResult&gt;&gt; UnassignJobAsync (Azure.Communication.JobRouter.UnassignJobOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.UnassignJobResult&gt;&gt; UnassignJobAsync(class Azure.Communication.JobRouter.UnassignJobOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.UnassignJobAsync(Azure.Communication.JobRouter.UnassignJobOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UnassignJobAsync (options As UnassignJobOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of UnassignJobResult))" />
      <MemberSignature Language="F#" Value="abstract member UnassignJobAsync : Azure.Communication.JobRouter.UnassignJobOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.UnassignJobResult&gt;&gt;&#xA;override this.UnassignJobAsync : Azure.Communication.JobRouter.UnassignJobOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.UnassignJobResult&gt;&gt;" Usage="jobRouterClient.UnassignJobAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.UnassignJobResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.UnassignJobOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for unassigning a job from a worker. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Unassign a job from a worker. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt; UpdateJob (Azure.Communication.JobRouter.UpdateJobOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.RouterJob&gt; UpdateJob(class Azure.Communication.JobRouter.UpdateJobOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.UpdateJob(Azure.Communication.JobRouter.UpdateJobOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateJob (options As UpdateJobOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RouterJob)" />
      <MemberSignature Language="F#" Value="abstract member UpdateJob : Azure.Communication.JobRouter.UpdateJobOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;&#xA;override this.UpdateJob : Azure.Communication.JobRouter.UpdateJobOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;" Usage="jobRouterClient.UpdateJob (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.UpdateJobOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for updating a job. Uses merge-patch semantics: https://datatracker.ietf.org/doc/html/rfc7386. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Update an existing job. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response UpdateJob (string jobId, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response UpdateJob(string jobId, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.UpdateJob(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateJob (jobId As String, content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member UpdateJob : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.UpdateJob : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="jobRouterClient.UpdateJob (jobId, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="jobId"> Id of the job. </param>
        <param name="content"> Request content payload. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Protocol method to use to remove properties from job. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;&gt; UpdateJobAsync (Azure.Communication.JobRouter.UpdateJobOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.RouterJob&gt;&gt; UpdateJobAsync(class Azure.Communication.JobRouter.UpdateJobOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.UpdateJobAsync(Azure.Communication.JobRouter.UpdateJobOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateJobAsync (options As UpdateJobOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RouterJob))" />
      <MemberSignature Language="F#" Value="abstract member UpdateJobAsync : Azure.Communication.JobRouter.UpdateJobOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;&gt;&#xA;override this.UpdateJobAsync : Azure.Communication.JobRouter.UpdateJobOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;&gt;" Usage="jobRouterClient.UpdateJobAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterJob&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.UpdateJobOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for updating a job. Uses merge-patch semantics: https://datatracker.ietf.org/doc/html/rfc7386. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Update an existing job. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; UpdateJobAsync (string jobId, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; UpdateJobAsync(string jobId, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.UpdateJobAsync(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateJobAsync (jobId As String, content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member UpdateJobAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.UpdateJobAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="jobRouterClient.UpdateJobAsync (jobId, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="jobId"> Id of the job. </param>
        <param name="content"> Request content payload. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Protocol method to use to remove properties from job. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateWorker">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt; UpdateWorker (Azure.Communication.JobRouter.UpdateWorkerOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.RouterWorker&gt; UpdateWorker(class Azure.Communication.JobRouter.UpdateWorkerOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.UpdateWorker(Azure.Communication.JobRouter.UpdateWorkerOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateWorker (options As UpdateWorkerOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RouterWorker)" />
      <MemberSignature Language="F#" Value="abstract member UpdateWorker : Azure.Communication.JobRouter.UpdateWorkerOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt;&#xA;override this.UpdateWorker : Azure.Communication.JobRouter.UpdateWorkerOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt;" Usage="jobRouterClient.UpdateWorker (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.UpdateWorkerOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for updating a router worker. Uses merge-patch semantics: https://datatracker.ietf.org/doc/html/rfc7386. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Create or update a worker to process jobs. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateWorker">
      <MemberSignature Language="C#" Value="public virtual Azure.Response UpdateWorker (string workerId, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response UpdateWorker(string workerId, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.UpdateWorker(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateWorker (workerId As String, content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member UpdateWorker : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.UpdateWorker : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="jobRouterClient.UpdateWorker (workerId, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workerId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="workerId"> Id of the worker. </param>
        <param name="content"> Request content payload. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Protocol method to use to remove properties from worker. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateWorkerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt;&gt; UpdateWorkerAsync (Azure.Communication.JobRouter.UpdateWorkerOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.RouterWorker&gt;&gt; UpdateWorkerAsync(class Azure.Communication.JobRouter.UpdateWorkerOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.UpdateWorkerAsync(Azure.Communication.JobRouter.UpdateWorkerOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateWorkerAsync (options As UpdateWorkerOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RouterWorker))" />
      <MemberSignature Language="F#" Value="abstract member UpdateWorkerAsync : Azure.Communication.JobRouter.UpdateWorkerOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt;&gt;&#xA;override this.UpdateWorkerAsync : Azure.Communication.JobRouter.UpdateWorkerOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt;&gt;" Usage="jobRouterClient.UpdateWorkerAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.RouterWorker&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.UpdateWorkerOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for updating a router worker. Uses merge-patch semantics: https://datatracker.ietf.org/doc/html/rfc7386. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Create or update a worker to process jobs. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateWorkerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; UpdateWorkerAsync (string workerId, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; UpdateWorkerAsync(string workerId, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.JobRouterClient.UpdateWorkerAsync(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateWorkerAsync (workerId As String, content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member UpdateWorkerAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.UpdateWorkerAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="jobRouterClient.UpdateWorkerAsync (workerId, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workerId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="workerId"> Id of the worker. </param>
        <param name="content"> Request content payload. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Protocol method to use to remove properties from worker. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
