<Type Name="ResultPage&lt;T&gt;" FullName="System.ClientModel.ResultPage&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class ResultPage&lt;T&gt; : System.ClientModel.ResultCollection&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResultPage`1&lt;T&gt; extends System.ClientModel.ResultCollection`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ClientModel.ResultPage`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ResultPage(Of T)&#xA;Inherits ResultCollection(Of T)" />
  <TypeSignature Language="F#" Value="type ResultPage&lt;'T&gt; = class&#xA;    inherit ResultCollection&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ClientModel</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ClientModel.ResultCollection&lt;T&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">T</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>
            Represents the subset (or page) of results contained in a single response
            from a cloud service returning a collection of results sequentially over
            one or more calls to the service (i.e. a paged collection).
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ContinuationToken">
      <MemberSignature Language="C#" Value="public string? ContinuationToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContinuationToken" />
      <MemberSignature Language="DocId" Value="P:System.ClientModel.ResultPage`1.ContinuationToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContinuationToken As String" />
      <MemberSignature Language="F#" Value="member this.ContinuationToken : string" Usage="System.ClientModel.ResultPage&lt;'T&gt;.ContinuationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the continuation token used to request the next
            <see cref="T:System.ClientModel.ResultPage`1" />.  May be <c>null</c> or empty when no values
            remain to be returned from the collection.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ClientModel.ResultPage&lt;T&gt; Create (System.Collections.Generic.IEnumerable&lt;T&gt; values, string? continuationToken, System.ClientModel.Primitives.PipelineResponse response);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ClientModel.ResultPage`1&lt;!T&gt; Create(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; values, string continuationToken, class System.ClientModel.Primitives.PipelineResponse response) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.ResultPage`1.Create(System.Collections.Generic.IEnumerable{`0},System.String,System.ClientModel.Primitives.PipelineResponse)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (values As IEnumerable(Of T), continuationToken As String, response As PipelineResponse) As ResultPage(Of T)" />
      <MemberSignature Language="F#" Value="static member Create : seq&lt;'T&gt; * string * System.ClientModel.Primitives.PipelineResponse -&gt; System.ClientModel.ResultPage&lt;'T&gt;" Usage="System.ClientModel.ResultPage&lt;'T&gt;.Create (values, continuationToken, response)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.ResultPage&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="response" Type="System.ClientModel.Primitives.PipelineResponse" />
      </Parameters>
      <Docs>
        <param name="values">The values contained in <paramref name="response" />.
            </param>
        <param name="continuationToken">The token that can be used to request
            the next page of results from the service, or <c>null</c> if this page
            holds the final subset of values.</param>
        <param name="response">The <see cref="T:System.ClientModel.Primitives.PipelineResponse" /> holding the
            collection values returned by the service.</param>
        <summary>
            Creates a new <see cref="T:System.ClientModel.ResultPage`1" />.
            </summary>
        <returns>An instance of <see cref="T:System.ClientModel.ResultPage`1" /> holding the provided
            values.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.ResultPage`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator(Of T)" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="resultPage.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that iterates through the collection.</summary>
        <returns>An enumerator that can be used to iterate through the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
