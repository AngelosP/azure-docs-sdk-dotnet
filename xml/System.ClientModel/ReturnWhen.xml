<Type Name="ReturnWhen" FullName="System.ClientModel.ReturnWhen">
  <TypeSignature Language="C#" Value="public enum ReturnWhen" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ReturnWhen extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ClientModel.ReturnWhen" />
  <TypeSignature Language="VB.NET" Value="Public Enum ReturnWhen" />
  <TypeSignature Language="F#" Value="type ReturnWhen = " />
  <AssemblyInfo>
    <AssemblyName>System.ClientModel</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
            Indicates whether a client method that starts a long-running operation
            should return after the operation has started or after the service has
            completed processing of the operation.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="Completed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ClientModel.ReturnWhen Completed = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ClientModel.ReturnWhen.Completed" />
      <MemberSignature Language="VB.NET" Value="Completed" />
      <MemberSignature Language="F#" Value="Completed = 0" Usage="System.ClientModel.ReturnWhen.Completed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.ReturnWhen</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
            Indicates the client method should wait to return until the service has
            completed processing of the operation.
            </summary>
        <remarks>When <see cref="F:System.ClientModel.ReturnWhen.Completed" /> is passed to a client method that
            creates an <see cref="T:System.ClientModel.Primitives.OperationResult" />, the returned operation type's
            <see cref="P:System.ClientModel.Primitives.OperationResult.IsCompleted" /> property is <c>true</c>.  If
            the operation computed a value and completed successfully, its
            <c>Value</c> property will contain the result.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Started">
      <MemberSignature Language="C#" Value="Started" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ClientModel.ReturnWhen Started = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ClientModel.ReturnWhen.Started" />
      <MemberSignature Language="VB.NET" Value="Started" />
      <MemberSignature Language="F#" Value="Started = 1" Usage="System.ClientModel.ReturnWhen.Started" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.ReturnWhen</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
            Indicates the client method should return after the service has responded
            to the request to start the operation.
            </summary>
        <remarks>When <see cref="F:System.ClientModel.ReturnWhen.Started" /> is passed to a client method that
            creates an <see cref="T:System.ClientModel.Primitives.OperationResult" />, the caller must use
            <see cref="M:System.ClientModel.Primitives.OperationResult.WaitForCompletion(System.Threading.CancellationToken)" /> or other method to wait
            for the operation to complete before being able to obtain the result of
            the service operation.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
