<Type Name="PageCollection&lt;T&gt;" FullName="System.ClientModel.PageCollection&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class PageCollection&lt;T&gt; : System.Collections.Generic.IEnumerable&lt;System.ClientModel.PageResult&lt;T&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageCollection`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;class System.ClientModel.PageResult`1&lt;!T&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.ClientModel.PageCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageCollection(Of T)&#xA;Implements IEnumerable(Of PageResult(Of T))" />
  <TypeSignature Language="F#" Value="type PageCollection&lt;'T&gt; = class&#xA;    interface seq&lt;PageResult&lt;'T&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.ClientModel</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.ClientModel.PageResult&lt;T&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>
            A collection of page results returned by a cloud service.  Cloud services
            use pagination to return a collection of items over multiple responses.
            Each response from the service returns a page of items in the collection,
            as well as the information needed to obtain the next page of items, until
            all the items in the requested collection have been returned.  To enumerate
            the items in the collection, instead of the pages in the collection, call
            <see cref="M:System.ClientModel.PageCollection`1.GetAllValues" />.  To get the current collection page, call
            <see cref="M:System.ClientModel.PageCollection`1.GetCurrentPage" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.PageCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Create a new instance of <see cref="T:System.ClientModel.PageCollection`1" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;T&gt; GetAllValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!T&gt; GetAllValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.PageCollection`1.GetAllValues" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetAllValues () As IEnumerable(Of T)" />
      <MemberSignature Language="F#" Value="member this.GetAllValues : unit -&gt; seq&lt;'T&gt;" Usage="pageCollection.GetAllValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.ClientModel.PageCollection&lt;&gt;+&lt;GetAllValues&gt;d__2))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.ClientModel.PageCollection&lt;&gt;+&lt;GetAllValues&gt;d__2))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get a collection of all the values in the collection requested from the
            cloud service, rather than the pages of values.
            </summary>
        <returns>The values requested from the cloud service.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentPage">
      <MemberSignature Language="C#" Value="public System.ClientModel.PageResult&lt;T&gt; GetCurrentPage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ClientModel.PageResult`1&lt;!T&gt; GetCurrentPage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.PageCollection`1.GetCurrentPage" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentPage () As PageResult(Of T)" />
      <MemberSignature Language="F#" Value="member this.GetCurrentPage : unit -&gt; System.ClientModel.PageResult&lt;'T&gt;" Usage="pageCollection.GetCurrentPage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.PageResult&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get the current page of the collection.
            </summary>
        <returns>The current page in the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentPageCore">
      <MemberSignature Language="C#" Value="protected abstract System.ClientModel.PageResult&lt;T&gt; GetCurrentPageCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ClientModel.PageResult`1&lt;!T&gt; GetCurrentPageCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.PageCollection`1.GetCurrentPageCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetCurrentPageCore () As PageResult(Of T)" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentPageCore : unit -&gt; System.ClientModel.PageResult&lt;'T&gt;" Usage="pageCollection.GetCurrentPageCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.PageResult&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get the current page of the collection.
            </summary>
        <returns>The current page in the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorCore">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IEnumerator&lt;System.ClientModel.PageResult&lt;T&gt;&gt; GetEnumeratorCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.ClientModel.PageResult`1&lt;!T&gt;&gt; GetEnumeratorCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.PageCollection`1.GetEnumeratorCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetEnumeratorCore () As IEnumerator(Of PageResult(Of T))" />
      <MemberSignature Language="F#" Value="abstract member GetEnumeratorCore : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.ClientModel.PageResult&lt;'T&gt;&gt;" Usage="pageCollection.GetEnumeratorCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.ClientModel.PageResult&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get an enumerator that can enumerate the pages of values returned by
            the cloud service.
            </summary>
        <returns>An enumerator of pages holding the items in the value
            collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.ClientModel.PageResult&lt;T&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.ClientModel.PageResult&lt;T&gt;&gt; IEnumerable&lt;PageResult&lt;T&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.ClientModel.PageResult`1&lt;!T&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.ClientModel.PageResult&lt;T&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.PageCollection`1.System#Collections#Generic#IEnumerable&lt;System#ClientModel#PageResult&lt;T&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of PageResult(Of T)) Implements IEnumerable(Of PageResult(Of T)).GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IEnumerable&lt;System.ClientModel.PageResult&lt;T&gt;&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.ClientModel.PageResult&lt;'T&gt;&gt;&#xA;override this.System.Collections.Generic.IEnumerable&lt;System.ClientModel.PageResult&lt;T&gt;&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.ClientModel.PageResult&lt;'T&gt;&gt;" Usage="pageCollection.System.Collections.Generic.IEnumerable&lt;System.ClientModel.PageResult&lt;T&gt;&gt;.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.ClientModel.PageResult&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that iterates through the collection.</summary>
        <returns>An enumerator that can be used to iterate through the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.PageCollection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="pageCollection.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that iterates through a collection.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
