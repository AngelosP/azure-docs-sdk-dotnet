<Type Name="AsyncResultCollection&lt;T&gt;" FullName="System.ClientModel.AsyncResultCollection&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class AsyncResultCollection&lt;T&gt; : System.ClientModel.ClientResult, System.Collections.Generic.IAsyncEnumerable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsyncResultCollection`1&lt;T&gt; extends System.ClientModel.ClientResult implements class System.Collections.Generic.IAsyncEnumerable`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ClientModel.AsyncResultCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsyncResultCollection(Of T)&#xA;Inherits ClientResult&#xA;Implements IAsyncEnumerable(Of T)" />
  <TypeSignature Language="F#" Value="type AsyncResultCollection&lt;'T&gt; = class&#xA;    inherit ClientResult&#xA;    interface IAsyncEnumerable&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ClientModel</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ClientModel.ClientResult</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IAsyncEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>
            Represents a collection of results returned from a cloud service operation.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal AsyncResultCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.AsyncResultCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Create a new instance of <see cref="T:System.ClientModel.AsyncResultCollection`1" />.
            </summary>
        <remarks>If no <see cref="T:System.ClientModel.Primitives.PipelineResponse" /> is provided when the
            <see cref="T:System.ClientModel.ClientResult" /> instance is created, it is expected that
            a derived type will call <see cref="M:System.ClientModel.ClientResult.SetRawResponse(System.ClientModel.Primitives.PipelineResponse)" />
            prior to a user calling <see cref="M:System.ClientModel.ClientResult.GetRawResponse" />.
            This constructor is indended for use by collection implementations that
            postpone sending a request until <see cref="M:System.ClientModel.AsyncResultCollection`1.GetAsyncEnumerator(System.Threading.CancellationToken)" />
            is called. Such implementations will typically be returned from client
            convenience methods so that callers of the methods don't need to
            dispose the return value. </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal AsyncResultCollection (System.ClientModel.Primitives.PipelineResponse response);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.ClientModel.Primitives.PipelineResponse response) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.AsyncResultCollection`1.#ctor(System.ClientModel.Primitives.PipelineResponse)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (response As PipelineResponse)" />
      <MemberSignature Language="F#" Value="new System.ClientModel.AsyncResultCollection&lt;'T&gt; : System.ClientModel.Primitives.PipelineResponse -&gt; System.ClientModel.AsyncResultCollection&lt;'T&gt;" Usage="new System.ClientModel.AsyncResultCollection&lt;'T&gt; response" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="response" Type="System.ClientModel.Primitives.PipelineResponse" />
      </Parameters>
      <Docs>
        <param name="response">The <see cref="T:System.ClientModel.Primitives.PipelineResponse" /> holding the
            items in the collection, or the first set of the items in the collection.
            </param>
        <summary>
            Create a new instance of <see cref="T:System.ClientModel.AsyncResultCollection`1" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsyncEnumerator">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IAsyncEnumerator&lt;T&gt; GetAsyncEnumerator (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerator`1&lt;!T&gt; GetAsyncEnumerator(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.AsyncResultCollection`1.GetAsyncEnumerator(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAsyncEnumerator (Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerator(Of T)" />
      <MemberSignature Language="F#" Value="abstract member GetAsyncEnumerator : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerator&lt;'T&gt;" Usage="asyncResultCollection.GetAsyncEnumerator cancellationToken" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param>
        <summary>Returns an enumerator that iterates asynchronously through the collection.</summary>
        <returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
