<Type Name="AsyncPageCollection&lt;T&gt;" FullName="System.ClientModel.AsyncPageCollection&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class AsyncPageCollection&lt;T&gt; : System.Collections.Generic.IAsyncEnumerable&lt;System.ClientModel.PageResult&lt;T&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsyncPageCollection`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IAsyncEnumerable`1&lt;class System.ClientModel.PageResult`1&lt;!T&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ClientModel.AsyncPageCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsyncPageCollection(Of T)&#xA;Implements IAsyncEnumerable(Of PageResult(Of T))" />
  <TypeSignature Language="F#" Value="type AsyncPageCollection&lt;'T&gt; = class&#xA;    interface IAsyncEnumerable&lt;PageResult&lt;'T&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ClientModel</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IAsyncEnumerable&lt;System.ClientModel.PageResult&lt;T&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>
            An asynchronous collection of page results returned by a cloud service.
            Cloud services use pagination to return a collection of items over multiple
            responses.  Each response from the service returns a page of items in the
            collection, as well as the information needed to obtain the next page of
            items, until all the items in the requested collection have been returned.
            To enumerate the items in the collection, instead of the pages in the
            collection, call <see cref="M:System.ClientModel.AsyncPageCollection`1.GetAllValuesAsync(System.Threading.CancellationToken)" />.  To get the current
            collection page, call <see cref="M:System.ClientModel.AsyncPageCollection`1.GetCurrentPageAsync" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsyncPageCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.AsyncPageCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Create a new instance of <see cref="T:System.ClientModel.AsyncPageCollection`1" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllValuesAsync">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IAsyncEnumerable&lt;T&gt; GetAllValuesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IAsyncEnumerable`1&lt;!T&gt; GetAllValuesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.AsyncPageCollection`1.GetAllValuesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllValuesAsync (Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of T)" />
      <MemberSignature Language="F#" Value="member this.GetAllValuesAsync : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerable&lt;'T&gt;" Usage="asyncPageCollection.GetAllValuesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(System.ClientModel.AsyncPageCollection&lt;&gt;+&lt;GetAllValuesAsync&gt;d__2))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.AsyncIteratorStateMachine(typeof(System.ClientModel.AsyncPageCollection&lt;&gt;+&lt;GetAllValuesAsync&gt;d__2))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.EnumeratorCancellation]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.EnumeratorCancellation&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Get a collection of all the values in the collection requested from the
            cloud service, rather than the pages of values.
            </summary>
        <returns>The values requested from the cloud service.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsyncEnumeratorCore">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IAsyncEnumerator&lt;System.ClientModel.PageResult&lt;T&gt;&gt; GetAsyncEnumeratorCore (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerator`1&lt;class System.ClientModel.PageResult`1&lt;!T&gt;&gt; GetAsyncEnumeratorCore(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.AsyncPageCollection`1.GetAsyncEnumeratorCore(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetAsyncEnumeratorCore (Optional cancellationToken As CancellationToken = Nothing) As IAsyncEnumerator(Of PageResult(Of T))" />
      <MemberSignature Language="F#" Value="abstract member GetAsyncEnumeratorCore : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerator&lt;System.ClientModel.PageResult&lt;'T&gt;&gt;" Usage="asyncPageCollection.GetAsyncEnumeratorCore cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerator&lt;System.ClientModel.PageResult&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Get an async enumerator that can enumerate the pages of values returned
            by the cloud service.
            </summary>
        <returns>An async enumerator of pages holding the items in the value
            collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentPageAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.ClientModel.PageResult&lt;T&gt;&gt; GetCurrentPageAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.ClientModel.PageResult`1&lt;!T&gt;&gt; GetCurrentPageAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.AsyncPageCollection`1.GetCurrentPageAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentPageAsync () As Task(Of PageResult(Of T))" />
      <MemberSignature Language="F#" Value="member this.GetCurrentPageAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.ClientModel.PageResult&lt;'T&gt;&gt;" Usage="asyncPageCollection.GetCurrentPageAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.ClientModel.PageResult&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get the current page of the collection.
            </summary>
        <returns>The current page in the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentPageAsyncCore">
      <MemberSignature Language="C#" Value="protected abstract System.Threading.Tasks.Task&lt;System.ClientModel.PageResult&lt;T&gt;&gt; GetCurrentPageAsyncCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.ClientModel.PageResult`1&lt;!T&gt;&gt; GetCurrentPageAsyncCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.AsyncPageCollection`1.GetCurrentPageAsyncCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetCurrentPageAsyncCore () As Task(Of PageResult(Of T))" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentPageAsyncCore : unit -&gt; System.Threading.Tasks.Task&lt;System.ClientModel.PageResult&lt;'T&gt;&gt;" Usage="asyncPageCollection.GetCurrentPageAsyncCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.ClientModel.PageResult&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get the current page of the collection.
            </summary>
        <returns>The current page in the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IAsyncEnumerable&lt;System.ClientModel.PageResult&lt;T&gt;&gt;.GetAsyncEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IAsyncEnumerator&lt;System.ClientModel.PageResult&lt;T&gt;&gt; IAsyncEnumerable&lt;PageResult&lt;T&gt;&gt;.GetAsyncEnumerator (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IAsyncEnumerator`1&lt;class System.ClientModel.PageResult`1&lt;!T&gt;&gt; System.Collections.Generic.IAsyncEnumerable&lt;System.ClientModel.PageResult&lt;T&gt;&gt;.GetAsyncEnumerator(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.AsyncPageCollection`1.System#Collections#Generic#IAsyncEnumerable&lt;System#ClientModel#PageResult&lt;T&gt;&gt;#GetAsyncEnumerator(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function GetAsyncEnumerator (cancellationToken As CancellationToken) As IAsyncEnumerator(Of PageResult(Of T)) Implements IAsyncEnumerable(Of PageResult(Of T)).GetAsyncEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IAsyncEnumerable&lt;System.ClientModel.PageResult&lt;T&gt;&gt;.GetAsyncEnumerator : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerator&lt;System.ClientModel.PageResult&lt;'T&gt;&gt;&#xA;override this.System.Collections.Generic.IAsyncEnumerable&lt;System.ClientModel.PageResult&lt;T&gt;&gt;.GetAsyncEnumerator : System.Threading.CancellationToken -&gt; System.Collections.Generic.IAsyncEnumerator&lt;System.ClientModel.PageResult&lt;'T&gt;&gt;" Usage="asyncPageCollection.System.Collections.Generic.IAsyncEnumerable&lt;System.ClientModel.PageResult&lt;T&gt;&gt;.GetAsyncEnumerator cancellationToken" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IAsyncEnumerator&lt;System.ClientModel.PageResult&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param>
        <summary>Returns an enumerator that iterates asynchronously through the collection.</summary>
        <returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
