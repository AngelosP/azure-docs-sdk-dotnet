<Type Name="MockableSecurityCenterArmClient" FullName="Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient">
  <TypeSignature Language="C#" Value="public class MockableSecurityCenterArmClient : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableSecurityCenterArmClient extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableSecurityCenterArmClient&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableSecurityCenterArmClient = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ArmClient. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableSecurityCenterArmClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateInformationProtectionPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy&gt; CreateOrUpdateInformationProtectionPolicy (Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicyName informationProtectionPolicyName, Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy informationProtectionPolicy, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy&gt; CreateOrUpdateInformationProtectionPolicy(class Azure.Core.ResourceIdentifier scope, valuetype Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicyName informationProtectionPolicyName, class Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy informationProtectionPolicy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.CreateOrUpdateInformationProtectionPolicy(Azure.Core.ResourceIdentifier,Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicyName,Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateInformationProtectionPolicy (scope As ResourceIdentifier, informationProtectionPolicyName As InformationProtectionPolicyName, informationProtectionPolicy As InformationProtectionPolicy, Optional cancellationToken As CancellationToken = Nothing) As Response(Of InformationProtectionPolicy)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateInformationProtectionPolicy : Azure.Core.ResourceIdentifier * Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicyName * Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy&gt;&#xA;override this.CreateOrUpdateInformationProtectionPolicy : Azure.Core.ResourceIdentifier * Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicyName * Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy&gt;" Usage="mockableSecurityCenterArmClient.CreateOrUpdateInformationProtectionPolicy (scope, informationProtectionPolicyName, informationProtectionPolicy, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="informationProtectionPolicyName" Type="Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicyName" />
        <Parameter Name="informationProtectionPolicy" Type="Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="informationProtectionPolicyName"> Name of the information protection policy. </param>
        <param name="informationProtectionPolicy"> Information protection policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Details of the information protection policy.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Security/informationProtectionPolicies/{informationProtectionPolicyName}</description></item><item><term>Operation Id</term><description>InformationProtectionPolicies_CreateOrUpdate</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> or <paramref name="informationProtectionPolicy" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateInformationProtectionPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy&gt;&gt; CreateOrUpdateInformationProtectionPolicyAsync (Azure.Core.ResourceIdentifier scope, Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicyName informationProtectionPolicyName, Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy informationProtectionPolicy, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy&gt;&gt; CreateOrUpdateInformationProtectionPolicyAsync(class Azure.Core.ResourceIdentifier scope, valuetype Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicyName informationProtectionPolicyName, class Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy informationProtectionPolicy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.CreateOrUpdateInformationProtectionPolicyAsync(Azure.Core.ResourceIdentifier,Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicyName,Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateInformationProtectionPolicyAsync (scope As ResourceIdentifier, informationProtectionPolicyName As InformationProtectionPolicyName, informationProtectionPolicy As InformationProtectionPolicy, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of InformationProtectionPolicy))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateInformationProtectionPolicyAsync : Azure.Core.ResourceIdentifier * Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicyName * Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy&gt;&gt;&#xA;override this.CreateOrUpdateInformationProtectionPolicyAsync : Azure.Core.ResourceIdentifier * Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicyName * Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy&gt;&gt;" Usage="mockableSecurityCenterArmClient.CreateOrUpdateInformationProtectionPolicyAsync (scope, informationProtectionPolicyName, informationProtectionPolicy, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="informationProtectionPolicyName" Type="Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicyName" />
        <Parameter Name="informationProtectionPolicy" Type="Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="informationProtectionPolicyName"> Name of the information protection policy. </param>
        <param name="informationProtectionPolicy"> Information protection policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Details of the information protection policy.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Security/informationProtectionPolicies/{informationProtectionPolicyName}</description></item><item><term>Operation Id</term><description>InformationProtectionPolicies_CreateOrUpdate</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> or <paramref name="informationProtectionPolicy" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAdaptiveApplicationControlGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource GetAdaptiveApplicationControlGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource GetAdaptiveApplicationControlGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetAdaptiveApplicationControlGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAdaptiveApplicationControlGroupResource (id As ResourceIdentifier) As AdaptiveApplicationControlGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetAdaptiveApplicationControlGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource&#xA;override this.GetAdaptiveApplicationControlGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource" Usage="mockableSecurityCenterArmClient.GetAdaptiveApplicationControlGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create an <see cref="T:Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdaptiveNetworkHardeningResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningResource GetAdaptiveNetworkHardeningResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningResource GetAdaptiveNetworkHardeningResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetAdaptiveNetworkHardeningResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAdaptiveNetworkHardeningResource (id As ResourceIdentifier) As AdaptiveNetworkHardeningResource" />
      <MemberSignature Language="F#" Value="abstract member GetAdaptiveNetworkHardeningResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningResource&#xA;override this.GetAdaptiveNetworkHardeningResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningResource" Usage="mockableSecurityCenterArmClient.GetAdaptiveNetworkHardeningResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdvancedThreatProtectionSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.AdvancedThreatProtectionSettingResource GetAdvancedThreatProtectionSetting (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.AdvancedThreatProtectionSettingResource GetAdvancedThreatProtectionSetting(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetAdvancedThreatProtectionSetting(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAdvancedThreatProtectionSetting (scope As ResourceIdentifier) As AdvancedThreatProtectionSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetAdvancedThreatProtectionSetting : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.AdvancedThreatProtectionSettingResource&#xA;override this.GetAdvancedThreatProtectionSetting : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.AdvancedThreatProtectionSettingResource" Usage="mockableSecurityCenterArmClient.GetAdvancedThreatProtectionSetting scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.AdvancedThreatProtectionSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets an object representing a AdvancedThreatProtectionSettingResource along with the instance operations that can be performed on it in the ArmClient. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.AdvancedThreatProtectionSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdvancedThreatProtectionSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.AdvancedThreatProtectionSettingResource GetAdvancedThreatProtectionSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.AdvancedThreatProtectionSettingResource GetAdvancedThreatProtectionSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetAdvancedThreatProtectionSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAdvancedThreatProtectionSettingResource (id As ResourceIdentifier) As AdvancedThreatProtectionSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetAdvancedThreatProtectionSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.AdvancedThreatProtectionSettingResource&#xA;override this.GetAdvancedThreatProtectionSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.AdvancedThreatProtectionSettingResource" Usage="mockableSecurityCenterArmClient.GetAdvancedThreatProtectionSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.AdvancedThreatProtectionSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.SecurityCenter.AdvancedThreatProtectionSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.AdvancedThreatProtectionSettingResource.CreateResourceIdentifier(System.String)" /> to create an <see cref="T:Azure.ResourceManager.SecurityCenter.AdvancedThreatProtectionSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.AdvancedThreatProtectionSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutoProvisioningSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingResource GetAutoProvisioningSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingResource GetAutoProvisioningSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetAutoProvisioningSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutoProvisioningSettingResource (id As ResourceIdentifier) As AutoProvisioningSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetAutoProvisioningSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingResource&#xA;override this.GetAutoProvisioningSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingResource" Usage="mockableSecurityCenterArmClient.GetAutoProvisioningSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingResource.CreateResourceIdentifier(System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComplianceResult">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ComplianceResultResource&gt; GetComplianceResult (Azure.Core.ResourceIdentifier scope, string complianceResultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.ComplianceResultResource&gt; GetComplianceResult(class Azure.Core.ResourceIdentifier scope, string complianceResultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetComplianceResult(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetComplianceResult (scope As ResourceIdentifier, complianceResultName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ComplianceResultResource)" />
      <MemberSignature Language="F#" Value="abstract member GetComplianceResult : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ComplianceResultResource&gt;&#xA;override this.GetComplianceResult : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ComplianceResultResource&gt;" Usage="mockableSecurityCenterArmClient.GetComplianceResult (scope, complianceResultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ComplianceResultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="complianceResultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="complianceResultName"> name of the desired assessment compliance result. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Security Compliance Result
            <list type="bullet"><item><term>Request Path</term><description>/{resourceId}/providers/Microsoft.Security/complianceResults/{complianceResultName}</description></item><item><term>Operation Id</term><description>ComplianceResults_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="complianceResultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="complianceResultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetComplianceResultAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ComplianceResultResource&gt;&gt; GetComplianceResultAsync (Azure.Core.ResourceIdentifier scope, string complianceResultName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.ComplianceResultResource&gt;&gt; GetComplianceResultAsync(class Azure.Core.ResourceIdentifier scope, string complianceResultName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetComplianceResultAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetComplianceResultAsync (scope As ResourceIdentifier, complianceResultName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ComplianceResultResource))" />
      <MemberSignature Language="F#" Value="abstract member GetComplianceResultAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ComplianceResultResource&gt;&gt;&#xA;override this.GetComplianceResultAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ComplianceResultResource&gt;&gt;" Usage="mockableSecurityCenterArmClient.GetComplianceResultAsync (scope, complianceResultName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ComplianceResultResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="complianceResultName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="complianceResultName"> name of the desired assessment compliance result. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Security Compliance Result
            <list type="bullet"><item><term>Request Path</term><description>/{resourceId}/providers/Microsoft.Security/complianceResults/{complianceResultName}</description></item><item><term>Operation Id</term><description>ComplianceResults_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="complianceResultName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="complianceResultName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetComplianceResultResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.ComplianceResultResource GetComplianceResultResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.ComplianceResultResource GetComplianceResultResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetComplianceResultResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetComplianceResultResource (id As ResourceIdentifier) As ComplianceResultResource" />
      <MemberSignature Language="F#" Value="abstract member GetComplianceResultResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.ComplianceResultResource&#xA;override this.GetComplianceResultResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.ComplianceResultResource" Usage="mockableSecurityCenterArmClient.GetComplianceResultResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.ComplianceResultResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.ComplianceResultResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.ComplianceResultResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.ComplianceResultResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.ComplianceResultResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComplianceResults">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.ComplianceResultCollection GetComplianceResults (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.ComplianceResultCollection GetComplianceResults(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetComplianceResults(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetComplianceResults (scope As ResourceIdentifier) As ComplianceResultCollection" />
      <MemberSignature Language="F#" Value="abstract member GetComplianceResults : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.ComplianceResultCollection&#xA;override this.GetComplianceResults : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.ComplianceResultCollection" Usage="mockableSecurityCenterArmClient.GetComplianceResults scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.ComplianceResultCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of ComplianceResultResources in the ArmClient. </summary>
        <returns> An object representing collection of ComplianceResultResources and their operations over a ComplianceResultResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAssessmentAutomationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource GetCustomAssessmentAutomationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource GetCustomAssessmentAutomationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetCustomAssessmentAutomationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAssessmentAutomationResource (id As ResourceIdentifier) As CustomAssessmentAutomationResource" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAssessmentAutomationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource&#xA;override this.GetCustomAssessmentAutomationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource" Usage="mockableSecurityCenterArmClient.GetCustomAssessmentAutomationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomEntityStoreAssignmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource GetCustomEntityStoreAssignmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource GetCustomEntityStoreAssignmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetCustomEntityStoreAssignmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomEntityStoreAssignmentResource (id As ResourceIdentifier) As CustomEntityStoreAssignmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetCustomEntityStoreAssignmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource&#xA;override this.GetCustomEntityStoreAssignmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource" Usage="mockableSecurityCenterArmClient.GetCustomEntityStoreAssignmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeviceSecurityGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupResource&gt; GetDeviceSecurityGroup (Azure.Core.ResourceIdentifier scope, string deviceSecurityGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupResource&gt; GetDeviceSecurityGroup(class Azure.Core.ResourceIdentifier scope, string deviceSecurityGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetDeviceSecurityGroup(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeviceSecurityGroup (scope As ResourceIdentifier, deviceSecurityGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DeviceSecurityGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDeviceSecurityGroup : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupResource&gt;&#xA;override this.GetDeviceSecurityGroup : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupResource&gt;" Usage="mockableSecurityCenterArmClient.GetDeviceSecurityGroup (scope, deviceSecurityGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="deviceSecurityGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="deviceSecurityGroupName"> The name of the device security group. Note that the name of the device security group is case insensitive. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Use this method to get the device security group for the specified IoT Hub resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceId}/providers/Microsoft.Security/deviceSecurityGroups/{deviceSecurityGroupName}</description></item><item><term>Operation Id</term><description>DeviceSecurityGroups_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="deviceSecurityGroupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deviceSecurityGroupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeviceSecurityGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupResource&gt;&gt; GetDeviceSecurityGroupAsync (Azure.Core.ResourceIdentifier scope, string deviceSecurityGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupResource&gt;&gt; GetDeviceSecurityGroupAsync(class Azure.Core.ResourceIdentifier scope, string deviceSecurityGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetDeviceSecurityGroupAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeviceSecurityGroupAsync (scope As ResourceIdentifier, deviceSecurityGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DeviceSecurityGroupResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDeviceSecurityGroupAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupResource&gt;&gt;&#xA;override this.GetDeviceSecurityGroupAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupResource&gt;&gt;" Usage="mockableSecurityCenterArmClient.GetDeviceSecurityGroupAsync (scope, deviceSecurityGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="deviceSecurityGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="deviceSecurityGroupName"> The name of the device security group. Note that the name of the device security group is case insensitive. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Use this method to get the device security group for the specified IoT Hub resource.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceId}/providers/Microsoft.Security/deviceSecurityGroups/{deviceSecurityGroupName}</description></item><item><term>Operation Id</term><description>DeviceSecurityGroups_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="deviceSecurityGroupName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deviceSecurityGroupName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeviceSecurityGroupResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupResource GetDeviceSecurityGroupResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupResource GetDeviceSecurityGroupResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetDeviceSecurityGroupResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeviceSecurityGroupResource (id As ResourceIdentifier) As DeviceSecurityGroupResource" />
      <MemberSignature Language="F#" Value="abstract member GetDeviceSecurityGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupResource&#xA;override this.GetDeviceSecurityGroupResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupResource" Usage="mockableSecurityCenterArmClient.GetDeviceSecurityGroupResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeviceSecurityGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupCollection GetDeviceSecurityGroups (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupCollection GetDeviceSecurityGroups(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetDeviceSecurityGroups(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeviceSecurityGroups (scope As ResourceIdentifier) As DeviceSecurityGroupCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDeviceSecurityGroups : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupCollection&#xA;override this.GetDeviceSecurityGroups : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupCollection" Usage="mockableSecurityCenterArmClient.GetDeviceSecurityGroups scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.DeviceSecurityGroupCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of DeviceSecurityGroupResources in the ArmClient. </summary>
        <returns> An object representing collection of DeviceSecurityGroupResources and their operations over a DeviceSecurityGroupResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGovernanceAssignmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.GovernanceAssignmentResource GetGovernanceAssignmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.GovernanceAssignmentResource GetGovernanceAssignmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetGovernanceAssignmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGovernanceAssignmentResource (id As ResourceIdentifier) As GovernanceAssignmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetGovernanceAssignmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.GovernanceAssignmentResource&#xA;override this.GetGovernanceAssignmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.GovernanceAssignmentResource" Usage="mockableSecurityCenterArmClient.GetGovernanceAssignmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.GovernanceAssignmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.GovernanceAssignmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.GovernanceAssignmentResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.GovernanceAssignmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.GovernanceAssignmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGovernanceRule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.GovernanceRuleResource&gt; GetGovernanceRule (Azure.Core.ResourceIdentifier scope, string ruleId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.GovernanceRuleResource&gt; GetGovernanceRule(class Azure.Core.ResourceIdentifier scope, string ruleId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetGovernanceRule(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGovernanceRule (scope As ResourceIdentifier, ruleId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of GovernanceRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetGovernanceRule : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.GovernanceRuleResource&gt;&#xA;override this.GetGovernanceRule : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.GovernanceRuleResource&gt;" Usage="mockableSecurityCenterArmClient.GetGovernanceRule (scope, ruleId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.GovernanceRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="ruleId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="ruleId"> The governance rule key - unique key for the standard governance rule (GUID). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a specific governance rule for the requested scope by ruleId
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Security/governanceRules/{ruleId}</description></item><item><term>Operation Id</term><description>GovernanceRules_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGovernanceRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.GovernanceRuleResource&gt;&gt; GetGovernanceRuleAsync (Azure.Core.ResourceIdentifier scope, string ruleId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.GovernanceRuleResource&gt;&gt; GetGovernanceRuleAsync(class Azure.Core.ResourceIdentifier scope, string ruleId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetGovernanceRuleAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGovernanceRuleAsync (scope As ResourceIdentifier, ruleId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GovernanceRuleResource))" />
      <MemberSignature Language="F#" Value="abstract member GetGovernanceRuleAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.GovernanceRuleResource&gt;&gt;&#xA;override this.GetGovernanceRuleAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.GovernanceRuleResource&gt;&gt;" Usage="mockableSecurityCenterArmClient.GetGovernanceRuleAsync (scope, ruleId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.GovernanceRuleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="ruleId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="ruleId"> The governance rule key - unique key for the standard governance rule (GUID). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a specific governance rule for the requested scope by ruleId
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Security/governanceRules/{ruleId}</description></item><item><term>Operation Id</term><description>GovernanceRules_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGovernanceRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.GovernanceRuleResource GetGovernanceRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.GovernanceRuleResource GetGovernanceRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetGovernanceRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGovernanceRuleResource (id As ResourceIdentifier) As GovernanceRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetGovernanceRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.GovernanceRuleResource&#xA;override this.GetGovernanceRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.GovernanceRuleResource" Usage="mockableSecurityCenterArmClient.GetGovernanceRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.GovernanceRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.GovernanceRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.GovernanceRuleResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.GovernanceRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.GovernanceRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGovernanceRules">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.GovernanceRuleCollection GetGovernanceRules (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.GovernanceRuleCollection GetGovernanceRules(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetGovernanceRules(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGovernanceRules (scope As ResourceIdentifier) As GovernanceRuleCollection" />
      <MemberSignature Language="F#" Value="abstract member GetGovernanceRules : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.GovernanceRuleCollection&#xA;override this.GetGovernanceRules : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.GovernanceRuleCollection" Usage="mockableSecurityCenterArmClient.GetGovernanceRules scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.GovernanceRuleCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of GovernanceRuleResources in the ArmClient. </summary>
        <returns> An object representing collection of GovernanceRuleResources and their operations over a GovernanceRuleResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInformationProtectionPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy&gt; GetInformationProtectionPolicies (Azure.Core.ResourceIdentifier scope, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy&gt; GetInformationProtectionPolicies(class Azure.Core.ResourceIdentifier scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetInformationProtectionPolicies(Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInformationProtectionPolicies (scope As ResourceIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of InformationProtectionPolicy)" />
      <MemberSignature Language="F#" Value="abstract member GetInformationProtectionPolicies : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy&gt;&#xA;override this.GetInformationProtectionPolicies : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy&gt;" Usage="mockableSecurityCenterArmClient.GetInformationProtectionPolicies (scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Information protection policies of a specific management group.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Security/informationProtectionPolicies</description></item><item><term>Operation Id</term><description>InformationProtectionPolicies_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInformationProtectionPoliciesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy&gt; GetInformationProtectionPoliciesAsync (Azure.Core.ResourceIdentifier scope, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy&gt; GetInformationProtectionPoliciesAsync(class Azure.Core.ResourceIdentifier scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetInformationProtectionPoliciesAsync(Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInformationProtectionPoliciesAsync (scope As ResourceIdentifier, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of InformationProtectionPolicy)" />
      <MemberSignature Language="F#" Value="abstract member GetInformationProtectionPoliciesAsync : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy&gt;&#xA;override this.GetInformationProtectionPoliciesAsync : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy&gt;" Usage="mockableSecurityCenterArmClient.GetInformationProtectionPoliciesAsync (scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Information protection policies of a specific management group.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Security/informationProtectionPolicies</description></item><item><term>Operation Id</term><description>InformationProtectionPolicies_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.InformationProtectionPolicy" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIngestionSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.IngestionSettingResource GetIngestionSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.IngestionSettingResource GetIngestionSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetIngestionSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIngestionSettingResource (id As ResourceIdentifier) As IngestionSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetIngestionSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.IngestionSettingResource&#xA;override this.GetIngestionSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.IngestionSettingResource" Usage="mockableSecurityCenterArmClient.GetIngestionSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.IngestionSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.SecurityCenter.IngestionSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.IngestionSettingResource.CreateResourceIdentifier(System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.SecurityCenter.IngestionSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.IngestionSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIotSecurityAggregatedAlertResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.IotSecurityAggregatedAlertResource GetIotSecurityAggregatedAlertResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.IotSecurityAggregatedAlertResource GetIotSecurityAggregatedAlertResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetIotSecurityAggregatedAlertResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotSecurityAggregatedAlertResource (id As ResourceIdentifier) As IotSecurityAggregatedAlertResource" />
      <MemberSignature Language="F#" Value="abstract member GetIotSecurityAggregatedAlertResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.IotSecurityAggregatedAlertResource&#xA;override this.GetIotSecurityAggregatedAlertResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.IotSecurityAggregatedAlertResource" Usage="mockableSecurityCenterArmClient.GetIotSecurityAggregatedAlertResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.IotSecurityAggregatedAlertResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.SecurityCenter.IotSecurityAggregatedAlertResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.IotSecurityAggregatedAlertResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.SecurityCenter.IotSecurityAggregatedAlertResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.IotSecurityAggregatedAlertResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIotSecurityAggregatedRecommendationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.IotSecurityAggregatedRecommendationResource GetIotSecurityAggregatedRecommendationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.IotSecurityAggregatedRecommendationResource GetIotSecurityAggregatedRecommendationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetIotSecurityAggregatedRecommendationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotSecurityAggregatedRecommendationResource (id As ResourceIdentifier) As IotSecurityAggregatedRecommendationResource" />
      <MemberSignature Language="F#" Value="abstract member GetIotSecurityAggregatedRecommendationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.IotSecurityAggregatedRecommendationResource&#xA;override this.GetIotSecurityAggregatedRecommendationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.IotSecurityAggregatedRecommendationResource" Usage="mockableSecurityCenterArmClient.GetIotSecurityAggregatedRecommendationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.IotSecurityAggregatedRecommendationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.SecurityCenter.IotSecurityAggregatedRecommendationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.IotSecurityAggregatedRecommendationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.SecurityCenter.IotSecurityAggregatedRecommendationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.IotSecurityAggregatedRecommendationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIotSecuritySolutionAnalyticsModelResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.IotSecuritySolutionAnalyticsModelResource GetIotSecuritySolutionAnalyticsModelResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.IotSecuritySolutionAnalyticsModelResource GetIotSecuritySolutionAnalyticsModelResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetIotSecuritySolutionAnalyticsModelResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotSecuritySolutionAnalyticsModelResource (id As ResourceIdentifier) As IotSecuritySolutionAnalyticsModelResource" />
      <MemberSignature Language="F#" Value="abstract member GetIotSecuritySolutionAnalyticsModelResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.IotSecuritySolutionAnalyticsModelResource&#xA;override this.GetIotSecuritySolutionAnalyticsModelResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.IotSecuritySolutionAnalyticsModelResource" Usage="mockableSecurityCenterArmClient.GetIotSecuritySolutionAnalyticsModelResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.IotSecuritySolutionAnalyticsModelResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.SecurityCenter.IotSecuritySolutionAnalyticsModelResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.IotSecuritySolutionAnalyticsModelResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.SecurityCenter.IotSecuritySolutionAnalyticsModelResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.IotSecuritySolutionAnalyticsModelResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIotSecuritySolutionResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource GetIotSecuritySolutionResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource GetIotSecuritySolutionResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetIotSecuritySolutionResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotSecuritySolutionResource (id As ResourceIdentifier) As IotSecuritySolutionResource" />
      <MemberSignature Language="F#" Value="abstract member GetIotSecuritySolutionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource&#xA;override this.GetIotSecuritySolutionResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource" Usage="mockableSecurityCenterArmClient.GetIotSecuritySolutionResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJitNetworkAccessPolicyResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource GetJitNetworkAccessPolicyResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource GetJitNetworkAccessPolicyResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetJitNetworkAccessPolicyResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJitNetworkAccessPolicyResource (id As ResourceIdentifier) As JitNetworkAccessPolicyResource" />
      <MemberSignature Language="F#" Value="abstract member GetJitNetworkAccessPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&#xA;override this.GetJitNetworkAccessPolicyResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource" Usage="mockableSecurityCenterArmClient.GetJitNetworkAccessPolicyResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource.CreateResourceIdentifier(System.String,System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegulatoryComplianceAssessmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.RegulatoryComplianceAssessmentResource GetRegulatoryComplianceAssessmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.RegulatoryComplianceAssessmentResource GetRegulatoryComplianceAssessmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetRegulatoryComplianceAssessmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRegulatoryComplianceAssessmentResource (id As ResourceIdentifier) As RegulatoryComplianceAssessmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetRegulatoryComplianceAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.RegulatoryComplianceAssessmentResource&#xA;override this.GetRegulatoryComplianceAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.RegulatoryComplianceAssessmentResource" Usage="mockableSecurityCenterArmClient.GetRegulatoryComplianceAssessmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.RegulatoryComplianceAssessmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.RegulatoryComplianceAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.RegulatoryComplianceAssessmentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.RegulatoryComplianceAssessmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.RegulatoryComplianceAssessmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegulatoryComplianceControlResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.RegulatoryComplianceControlResource GetRegulatoryComplianceControlResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.RegulatoryComplianceControlResource GetRegulatoryComplianceControlResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetRegulatoryComplianceControlResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRegulatoryComplianceControlResource (id As ResourceIdentifier) As RegulatoryComplianceControlResource" />
      <MemberSignature Language="F#" Value="abstract member GetRegulatoryComplianceControlResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.RegulatoryComplianceControlResource&#xA;override this.GetRegulatoryComplianceControlResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.RegulatoryComplianceControlResource" Usage="mockableSecurityCenterArmClient.GetRegulatoryComplianceControlResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.RegulatoryComplianceControlResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.RegulatoryComplianceControlResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.RegulatoryComplianceControlResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.RegulatoryComplianceControlResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.RegulatoryComplianceControlResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegulatoryComplianceStandardResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardResource GetRegulatoryComplianceStandardResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardResource GetRegulatoryComplianceStandardResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetRegulatoryComplianceStandardResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRegulatoryComplianceStandardResource (id As ResourceIdentifier) As RegulatoryComplianceStandardResource" />
      <MemberSignature Language="F#" Value="abstract member GetRegulatoryComplianceStandardResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardResource&#xA;override this.GetRegulatoryComplianceStandardResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardResource" Usage="mockableSecurityCenterArmClient.GetRegulatoryComplianceStandardResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGroupSecurityAlertResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertResource GetResourceGroupSecurityAlertResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertResource GetResourceGroupSecurityAlertResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetResourceGroupSecurityAlertResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceGroupSecurityAlertResource (id As ResourceIdentifier) As ResourceGroupSecurityAlertResource" />
      <MemberSignature Language="F#" Value="abstract member GetResourceGroupSecurityAlertResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertResource&#xA;override this.GetResourceGroupSecurityAlertResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertResource" Usage="mockableSecurityCenterArmClient.GetResourceGroupSecurityAlertResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertResource.CreateResourceIdentifier(System.String,System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGroupSecurityTaskResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskResource GetResourceGroupSecurityTaskResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskResource GetResourceGroupSecurityTaskResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetResourceGroupSecurityTaskResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceGroupSecurityTaskResource (id As ResourceIdentifier) As ResourceGroupSecurityTaskResource" />
      <MemberSignature Language="F#" Value="abstract member GetResourceGroupSecurityTaskResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskResource&#xA;override this.GetResourceGroupSecurityTaskResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskResource" Usage="mockableSecurityCenterArmClient.GetResourceGroupSecurityTaskResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskResource.CreateResourceIdentifier(System.String,System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecureScoreResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecureScoreResource GetSecureScoreResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecureScoreResource GetSecureScoreResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecureScoreResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecureScoreResource (id As ResourceIdentifier) As SecureScoreResource" />
      <MemberSignature Language="F#" Value="abstract member GetSecureScoreResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecureScoreResource&#xA;override this.GetSecureScoreResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecureScoreResource" Usage="mockableSecurityCenterArmClient.GetSecureScoreResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecureScoreResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.SecureScoreResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.SecureScoreResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.SecureScoreResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SecureScoreResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityAlertsSuppressionRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource GetSecurityAlertsSuppressionRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource GetSecurityAlertsSuppressionRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecurityAlertsSuppressionRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityAlertsSuppressionRuleResource (id As ResourceIdentifier) As SecurityAlertsSuppressionRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityAlertsSuppressionRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&#xA;override this.GetSecurityAlertsSuppressionRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource" Usage="mockableSecurityCenterArmClient.GetSecurityAlertsSuppressionRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityAssessment">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt; GetSecurityAssessment (Azure.Core.ResourceIdentifier scope, string assessmentName, Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand? expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt; GetSecurityAssessment(class Azure.Core.ResourceIdentifier scope, string assessmentName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecurityAssessment(Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityAssessment (scope As ResourceIdentifier, assessmentName As String, Optional expand As Nullable(Of SecurityAssessmentODataExpand) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SecurityAssessmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityAssessment : Azure.Core.ResourceIdentifier * string * Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&#xA;override this.GetSecurityAssessment : Azure.Core.ResourceIdentifier * string * Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;" Usage="mockableSecurityCenterArmClient.GetSecurityAssessment (scope, assessmentName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="assessmentName" Type="System.String" />
        <Parameter Name="expand" Type="System.Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="assessmentName"> The Assessment Key - Unique key for the assessment type. </param>
        <param name="expand"> OData expand. Optional. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a security assessment on your scanned resource
            <list type="bullet"><item><term>Request Path</term><description>/{resourceId}/providers/Microsoft.Security/assessments/{assessmentName}</description></item><item><term>Operation Id</term><description>Assessments_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assessmentName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assessmentName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityAssessmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt; GetSecurityAssessmentAsync (Azure.Core.ResourceIdentifier scope, string assessmentName, Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand? expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt; GetSecurityAssessmentAsync(class Azure.Core.ResourceIdentifier scope, string assessmentName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecurityAssessmentAsync(Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityAssessmentAsync (scope As ResourceIdentifier, assessmentName As String, Optional expand As Nullable(Of SecurityAssessmentODataExpand) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SecurityAssessmentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityAssessmentAsync : Azure.Core.ResourceIdentifier * string * Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt;&#xA;override this.GetSecurityAssessmentAsync : Azure.Core.ResourceIdentifier * string * Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt;" Usage="mockableSecurityCenterArmClient.GetSecurityAssessmentAsync (scope, assessmentName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="assessmentName" Type="System.String" />
        <Parameter Name="expand" Type="System.Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityAssessmentODataExpand&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="assessmentName"> The Assessment Key - Unique key for the assessment type. </param>
        <param name="expand"> OData expand. Optional. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a security assessment on your scanned resource
            <list type="bullet"><item><term>Request Path</term><description>/{resourceId}/providers/Microsoft.Security/assessments/{assessmentName}</description></item><item><term>Operation Id</term><description>Assessments_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assessmentName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assessmentName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityAssessmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource GetSecurityAssessmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource GetSecurityAssessmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecurityAssessmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityAssessmentResource (id As ResourceIdentifier) As SecurityAssessmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&#xA;override this.GetSecurityAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource" Usage="mockableSecurityCenterArmClient.GetSecurityAssessmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityAssessments">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecurityAssessmentCollection GetSecurityAssessments (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecurityAssessmentCollection GetSecurityAssessments(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecurityAssessments(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityAssessments (scope As ResourceIdentifier) As SecurityAssessmentCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityAssessments : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityAssessmentCollection&#xA;override this.GetSecurityAssessments : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityAssessmentCollection" Usage="mockableSecurityCenterArmClient.GetSecurityAssessments scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecurityAssessmentCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of SecurityAssessmentResources in the ArmClient. </summary>
        <returns> An object representing collection of SecurityAssessmentResources and their operations over a SecurityAssessmentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityAssessments">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt; GetSecurityAssessments (Azure.Core.ResourceIdentifier scope, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt; GetSecurityAssessments(class Azure.Core.ResourceIdentifier scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecurityAssessments(Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityAssessments (scope As ResourceIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SecurityAssessmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityAssessments : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&#xA;override this.GetSecurityAssessments : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;" Usage="mockableSecurityCenterArmClient.GetSecurityAssessments (scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get security assessments on all your scanned resources inside a scope
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Security/assessments</description></item><item><term>Operation Id</term><description>Assessments_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityAssessmentsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt; GetSecurityAssessmentsAsync (Azure.Core.ResourceIdentifier scope, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt; GetSecurityAssessmentsAsync(class Azure.Core.ResourceIdentifier scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecurityAssessmentsAsync(Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityAssessmentsAsync (scope As ResourceIdentifier, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SecurityAssessmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityAssessmentsAsync : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;&#xA;override this.GetSecurityAssessmentsAsync : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;" Usage="mockableSecurityCenterArmClient.GetSecurityAssessmentsAsync (scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get security assessments on all your scanned resources inside a scope
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Security/assessments</description></item><item><term>Operation Id</term><description>Assessments_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAssessmentResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityAutomationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecurityAutomationResource GetSecurityAutomationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecurityAutomationResource GetSecurityAutomationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecurityAutomationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityAutomationResource (id As ResourceIdentifier) As SecurityAutomationResource" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityAutomationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityAutomationResource&#xA;override this.GetSecurityAutomationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityAutomationResource" Usage="mockableSecurityCenterArmClient.GetSecurityAutomationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecurityAutomationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAutomationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.SecurityAutomationResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAutomationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAutomationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityCenterLocationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecurityCenterLocationResource GetSecurityCenterLocationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecurityCenterLocationResource GetSecurityCenterLocationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecurityCenterLocationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityCenterLocationResource (id As ResourceIdentifier) As SecurityCenterLocationResource" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityCenterLocationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityCenterLocationResource&#xA;override this.GetSecurityCenterLocationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityCenterLocationResource" Usage="mockableSecurityCenterArmClient.GetSecurityCenterLocationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecurityCenterLocationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityCenterLocationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.SecurityCenterLocationResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityCenterLocationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityCenterLocationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityCenterPricingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecurityCenterPricingResource GetSecurityCenterPricingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecurityCenterPricingResource GetSecurityCenterPricingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecurityCenterPricingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityCenterPricingResource (id As ResourceIdentifier) As SecurityCenterPricingResource" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityCenterPricingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityCenterPricingResource&#xA;override this.GetSecurityCenterPricingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityCenterPricingResource" Usage="mockableSecurityCenterArmClient.GetSecurityCenterPricingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecurityCenterPricingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityCenterPricingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.SecurityCenterPricingResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityCenterPricingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityCenterPricingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityCloudConnectorResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorResource GetSecurityCloudConnectorResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorResource GetSecurityCloudConnectorResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecurityCloudConnectorResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityCloudConnectorResource (id As ResourceIdentifier) As SecurityCloudConnectorResource" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityCloudConnectorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorResource&#xA;override this.GetSecurityCloudConnectorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorResource" Usage="mockableSecurityCenterArmClient.GetSecurityCloudConnectorResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityCompliance">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityComplianceResource&gt; GetSecurityCompliance (Azure.Core.ResourceIdentifier scope, string complianceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityComplianceResource&gt; GetSecurityCompliance(class Azure.Core.ResourceIdentifier scope, string complianceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecurityCompliance(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityCompliance (scope As ResourceIdentifier, complianceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SecurityComplianceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityCompliance : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityComplianceResource&gt;&#xA;override this.GetSecurityCompliance : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityComplianceResource&gt;" Usage="mockableSecurityCenterArmClient.GetSecurityCompliance (scope, complianceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityComplianceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="complianceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="complianceName"> name of the Compliance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Details of a specific Compliance.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Security/compliances/{complianceName}</description></item><item><term>Operation Id</term><description>Compliances_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="complianceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="complianceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityComplianceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityComplianceResource&gt;&gt; GetSecurityComplianceAsync (Azure.Core.ResourceIdentifier scope, string complianceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityComplianceResource&gt;&gt; GetSecurityComplianceAsync(class Azure.Core.ResourceIdentifier scope, string complianceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecurityComplianceAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityComplianceAsync (scope As ResourceIdentifier, complianceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SecurityComplianceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityComplianceAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityComplianceResource&gt;&gt;&#xA;override this.GetSecurityComplianceAsync : Azure.Core.ResourceIdentifier * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityComplianceResource&gt;&gt;" Usage="mockableSecurityCenterArmClient.GetSecurityComplianceAsync (scope, complianceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityComplianceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="complianceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="complianceName"> name of the Compliance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Details of a specific Compliance.
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Security/compliances/{complianceName}</description></item><item><term>Operation Id</term><description>Compliances_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="complianceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="complianceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityComplianceResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecurityComplianceResource GetSecurityComplianceResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecurityComplianceResource GetSecurityComplianceResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecurityComplianceResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityComplianceResource (id As ResourceIdentifier) As SecurityComplianceResource" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityComplianceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityComplianceResource&#xA;override this.GetSecurityComplianceResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityComplianceResource" Usage="mockableSecurityCenterArmClient.GetSecurityComplianceResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecurityComplianceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityComplianceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.SecurityComplianceResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityComplianceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityComplianceResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityCompliances">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecurityComplianceCollection GetSecurityCompliances (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecurityComplianceCollection GetSecurityCompliances(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecurityCompliances(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityCompliances (scope As ResourceIdentifier) As SecurityComplianceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityCompliances : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityComplianceCollection&#xA;override this.GetSecurityCompliances : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityComplianceCollection" Usage="mockableSecurityCenterArmClient.GetSecurityCompliances scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecurityComplianceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of SecurityComplianceResources in the ArmClient. </summary>
        <returns> An object representing collection of SecurityComplianceResources and their operations over a SecurityComplianceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityConnectorApplicationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecurityConnectorApplicationResource GetSecurityConnectorApplicationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecurityConnectorApplicationResource GetSecurityConnectorApplicationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecurityConnectorApplicationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityConnectorApplicationResource (id As ResourceIdentifier) As SecurityConnectorApplicationResource" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityConnectorApplicationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityConnectorApplicationResource&#xA;override this.GetSecurityConnectorApplicationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityConnectorApplicationResource" Usage="mockableSecurityCenterArmClient.GetSecurityConnectorApplicationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecurityConnectorApplicationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityConnectorApplicationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.SecurityConnectorApplicationResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityConnectorApplicationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityConnectorApplicationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityConnectorGovernanceRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecurityConnectorGovernanceRuleResource GetSecurityConnectorGovernanceRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecurityConnectorGovernanceRuleResource GetSecurityConnectorGovernanceRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecurityConnectorGovernanceRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityConnectorGovernanceRuleResource (id As ResourceIdentifier) As SecurityConnectorGovernanceRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityConnectorGovernanceRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityConnectorGovernanceRuleResource&#xA;override this.GetSecurityConnectorGovernanceRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityConnectorGovernanceRuleResource" Usage="mockableSecurityCenterArmClient.GetSecurityConnectorGovernanceRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This method is obsolete and will be removed in a future release.", false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is obsolete and will be removed in a future release.", false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecurityConnectorGovernanceRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityConnectorGovernanceRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.SecurityConnectorGovernanceRuleResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityConnectorGovernanceRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityConnectorGovernanceRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityConnectorResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecurityConnectorResource GetSecurityConnectorResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecurityConnectorResource GetSecurityConnectorResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecurityConnectorResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityConnectorResource (id As ResourceIdentifier) As SecurityConnectorResource" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityConnectorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityConnectorResource&#xA;override this.GetSecurityConnectorResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityConnectorResource" Usage="mockableSecurityCenterArmClient.GetSecurityConnectorResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecurityConnectorResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityConnectorResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.SecurityConnectorResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityConnectorResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityConnectorResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityContactResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecurityContactResource GetSecurityContactResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecurityContactResource GetSecurityContactResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecurityContactResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityContactResource (id As ResourceIdentifier) As SecurityContactResource" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityContactResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityContactResource&#xA;override this.GetSecurityContactResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityContactResource" Usage="mockableSecurityCenterArmClient.GetSecurityContactResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecurityContactResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityContactResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.SecurityContactResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityContactResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityContactResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecuritySettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecuritySettingResource GetSecuritySettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecuritySettingResource GetSecuritySettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecuritySettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecuritySettingResource (id As ResourceIdentifier) As SecuritySettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetSecuritySettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecuritySettingResource&#xA;override this.GetSecuritySettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecuritySettingResource" Usage="mockableSecurityCenterArmClient.GetSecuritySettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecuritySettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.SecuritySettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.SecuritySettingResource.CreateResourceIdentifier(System.String,Azure.ResourceManager.SecurityCenter.Models.SecuritySettingName)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.SecuritySettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SecuritySettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecuritySubAssessmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource GetSecuritySubAssessmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource GetSecuritySubAssessmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecuritySubAssessmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecuritySubAssessmentResource (id As ResourceIdentifier) As SecuritySubAssessmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetSecuritySubAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource&#xA;override this.GetSecuritySubAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource" Usage="mockableSecurityCenterArmClient.GetSecuritySubAssessmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecuritySubAssessments">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource&gt; GetSecuritySubAssessments (Azure.Core.ResourceIdentifier scope, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource&gt; GetSecuritySubAssessments(class Azure.Core.ResourceIdentifier scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecuritySubAssessments(Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecuritySubAssessments (scope As ResourceIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SecuritySubAssessmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecuritySubAssessments : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource&gt;&#xA;override this.GetSecuritySubAssessments : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource&gt;" Usage="mockableSecurityCenterArmClient.GetSecuritySubAssessments (scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get security sub-assessments on all your scanned resources inside a subscription scope
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Security/subAssessments</description></item><item><term>Operation Id</term><description>SubAssessments_ListAll</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecuritySubAssessmentsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource&gt; GetSecuritySubAssessmentsAsync (Azure.Core.ResourceIdentifier scope, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource&gt; GetSecuritySubAssessmentsAsync(class Azure.Core.ResourceIdentifier scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecuritySubAssessmentsAsync(Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecuritySubAssessmentsAsync (scope As ResourceIdentifier, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SecuritySubAssessmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecuritySubAssessmentsAsync : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource&gt;&#xA;override this.GetSecuritySubAssessmentsAsync : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource&gt;" Usage="mockableSecurityCenterArmClient.GetSecuritySubAssessmentsAsync (scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get security sub-assessments on all your scanned resources inside a subscription scope
            <list type="bullet"><item><term>Request Path</term><description>/{scope}/providers/Microsoft.Security/subAssessments</description></item><item><term>Operation Id</term><description>SubAssessments_ListAll</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SecuritySubAssessmentResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityWorkspaceSettingResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingResource GetSecurityWorkspaceSettingResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingResource GetSecurityWorkspaceSettingResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSecurityWorkspaceSettingResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityWorkspaceSettingResource (id As ResourceIdentifier) As SecurityWorkspaceSettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityWorkspaceSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingResource&#xA;override this.GetSecurityWorkspaceSettingResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingResource" Usage="mockableSecurityCenterArmClient.GetSecurityWorkspaceSettingResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerVulnerabilityAssessmentResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentResource GetServerVulnerabilityAssessmentResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentResource GetServerVulnerabilityAssessmentResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetServerVulnerabilityAssessmentResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerVulnerabilityAssessmentResource (id As ResourceIdentifier) As ServerVulnerabilityAssessmentResource" />
      <MemberSignature Language="F#" Value="abstract member GetServerVulnerabilityAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentResource&#xA;override this.GetServerVulnerabilityAssessmentResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentResource" Usage="mockableSecurityCenterArmClient.GetServerVulnerabilityAssessmentResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSoftwareInventoryResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource GetSoftwareInventoryResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource GetSoftwareInventoryResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSoftwareInventoryResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSoftwareInventoryResource (id As ResourceIdentifier) As SoftwareInventoryResource" />
      <MemberSignature Language="F#" Value="abstract member GetSoftwareInventoryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource&#xA;override this.GetSoftwareInventoryResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource" Usage="mockableSecurityCenterArmClient.GetSoftwareInventoryResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlVulnerabilityAssessmentBaselineRule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt; GetSqlVulnerabilityAssessmentBaselineRule (Azure.Core.ResourceIdentifier scope, string ruleId, Guid workspaceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt; GetSqlVulnerabilityAssessmentBaselineRule(class Azure.Core.ResourceIdentifier scope, string ruleId, valuetype System.Guid workspaceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSqlVulnerabilityAssessmentBaselineRule(Azure.Core.ResourceIdentifier,System.String,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlVulnerabilityAssessmentBaselineRule (scope As ResourceIdentifier, ruleId As String, workspaceId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SqlVulnerabilityAssessmentBaselineRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSqlVulnerabilityAssessmentBaselineRule : Azure.Core.ResourceIdentifier * string * Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;&#xA;override this.GetSqlVulnerabilityAssessmentBaselineRule : Azure.Core.ResourceIdentifier * string * Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;" Usage="mockableSecurityCenterArmClient.GetSqlVulnerabilityAssessmentBaselineRule (scope, ruleId, workspaceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="ruleId" Type="System.String" />
        <Parameter Name="workspaceId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="ruleId"> The rule Id. </param>
        <param name="workspaceId"> The workspace Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the results for a given rule in the Baseline.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceId}/providers/Microsoft.Security/sqlVulnerabilityAssessments/default/baselineRules/{ruleId}</description></item><item><term>Operation Id</term><description>SqlVulnerabilityAssessmentBaselineRules_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlVulnerabilityAssessmentBaselineRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;&gt; GetSqlVulnerabilityAssessmentBaselineRuleAsync (Azure.Core.ResourceIdentifier scope, string ruleId, Guid workspaceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;&gt; GetSqlVulnerabilityAssessmentBaselineRuleAsync(class Azure.Core.ResourceIdentifier scope, string ruleId, valuetype System.Guid workspaceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSqlVulnerabilityAssessmentBaselineRuleAsync(Azure.Core.ResourceIdentifier,System.String,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlVulnerabilityAssessmentBaselineRuleAsync (scope As ResourceIdentifier, ruleId As String, workspaceId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SqlVulnerabilityAssessmentBaselineRuleResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSqlVulnerabilityAssessmentBaselineRuleAsync : Azure.Core.ResourceIdentifier * string * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;&gt;&#xA;override this.GetSqlVulnerabilityAssessmentBaselineRuleAsync : Azure.Core.ResourceIdentifier * string * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;&gt;" Usage="mockableSecurityCenterArmClient.GetSqlVulnerabilityAssessmentBaselineRuleAsync (scope, ruleId, workspaceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="ruleId" Type="System.String" />
        <Parameter Name="workspaceId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="ruleId"> The rule Id. </param>
        <param name="workspaceId"> The workspace Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the results for a given rule in the Baseline.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceId}/providers/Microsoft.Security/sqlVulnerabilityAssessments/default/baselineRules/{ruleId}</description></item><item><term>Operation Id</term><description>SqlVulnerabilityAssessmentBaselineRules_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlVulnerabilityAssessmentBaselineRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource GetSqlVulnerabilityAssessmentBaselineRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource GetSqlVulnerabilityAssessmentBaselineRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSqlVulnerabilityAssessmentBaselineRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlVulnerabilityAssessmentBaselineRuleResource (id As ResourceIdentifier) As SqlVulnerabilityAssessmentBaselineRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlVulnerabilityAssessmentBaselineRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource&#xA;override this.GetSqlVulnerabilityAssessmentBaselineRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource" Usage="mockableSecurityCenterArmClient.GetSqlVulnerabilityAssessmentBaselineRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlVulnerabilityAssessmentBaselineRules">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleCollection GetSqlVulnerabilityAssessmentBaselineRules (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleCollection GetSqlVulnerabilityAssessmentBaselineRules(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSqlVulnerabilityAssessmentBaselineRules(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlVulnerabilityAssessmentBaselineRules (scope As ResourceIdentifier) As SqlVulnerabilityAssessmentBaselineRuleCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSqlVulnerabilityAssessmentBaselineRules : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleCollection&#xA;override this.GetSqlVulnerabilityAssessmentBaselineRules : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleCollection" Usage="mockableSecurityCenterArmClient.GetSqlVulnerabilityAssessmentBaselineRules scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentBaselineRuleCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of SqlVulnerabilityAssessmentBaselineRuleResources in the ArmClient. </summary>
        <returns> An object representing collection of SqlVulnerabilityAssessmentBaselineRuleResources and their operations over a SqlVulnerabilityAssessmentBaselineRuleResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlVulnerabilityAssessmentScan">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanResource&gt; GetSqlVulnerabilityAssessmentScan (Azure.Core.ResourceIdentifier scope, string scanId, Guid workspaceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanResource&gt; GetSqlVulnerabilityAssessmentScan(class Azure.Core.ResourceIdentifier scope, string scanId, valuetype System.Guid workspaceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSqlVulnerabilityAssessmentScan(Azure.Core.ResourceIdentifier,System.String,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlVulnerabilityAssessmentScan (scope As ResourceIdentifier, scanId As String, workspaceId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SqlVulnerabilityAssessmentScanResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSqlVulnerabilityAssessmentScan : Azure.Core.ResourceIdentifier * string * Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanResource&gt;&#xA;override this.GetSqlVulnerabilityAssessmentScan : Azure.Core.ResourceIdentifier * string * Guid * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanResource&gt;" Usage="mockableSecurityCenterArmClient.GetSqlVulnerabilityAssessmentScan (scope, scanId, workspaceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="scanId" Type="System.String" />
        <Parameter Name="workspaceId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="scanId"> The scan Id. Type 'latest' to get the scan record for the latest scan. </param>
        <param name="workspaceId"> The workspace Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the scan details of a single scan record.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceId}/providers/Microsoft.Security/sqlVulnerabilityAssessments/default/scans/{scanId}</description></item><item><term>Operation Id</term><description>SqlVulnerabilityAssessmentScans_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scanId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="scanId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlVulnerabilityAssessmentScanAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanResource&gt;&gt; GetSqlVulnerabilityAssessmentScanAsync (Azure.Core.ResourceIdentifier scope, string scanId, Guid workspaceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanResource&gt;&gt; GetSqlVulnerabilityAssessmentScanAsync(class Azure.Core.ResourceIdentifier scope, string scanId, valuetype System.Guid workspaceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSqlVulnerabilityAssessmentScanAsync(Azure.Core.ResourceIdentifier,System.String,System.Guid,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlVulnerabilityAssessmentScanAsync (scope As ResourceIdentifier, scanId As String, workspaceId As Guid, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SqlVulnerabilityAssessmentScanResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSqlVulnerabilityAssessmentScanAsync : Azure.Core.ResourceIdentifier * string * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanResource&gt;&gt;&#xA;override this.GetSqlVulnerabilityAssessmentScanAsync : Azure.Core.ResourceIdentifier * string * Guid * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanResource&gt;&gt;" Usage="mockableSecurityCenterArmClient.GetSqlVulnerabilityAssessmentScanAsync (scope, scanId, workspaceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="scanId" Type="System.String" />
        <Parameter Name="workspaceId" Type="System.Guid" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <param name="scanId"> The scan Id. Type 'latest' to get the scan record for the latest scan. </param>
        <param name="workspaceId"> The workspace Id. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the scan details of a single scan record.
            <list type="bullet"><item><term>Request Path</term><description>/{resourceId}/providers/Microsoft.Security/sqlVulnerabilityAssessments/default/scans/{scanId}</description></item><item><term>Operation Id</term><description>SqlVulnerabilityAssessmentScans_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scanId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="scanId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlVulnerabilityAssessmentScanResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanResource GetSqlVulnerabilityAssessmentScanResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanResource GetSqlVulnerabilityAssessmentScanResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSqlVulnerabilityAssessmentScanResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlVulnerabilityAssessmentScanResource (id As ResourceIdentifier) As SqlVulnerabilityAssessmentScanResource" />
      <MemberSignature Language="F#" Value="abstract member GetSqlVulnerabilityAssessmentScanResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanResource&#xA;override this.GetSqlVulnerabilityAssessmentScanResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanResource" Usage="mockableSecurityCenterArmClient.GetSqlVulnerabilityAssessmentScanResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlVulnerabilityAssessmentScans">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanCollection GetSqlVulnerabilityAssessmentScans (Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanCollection GetSqlVulnerabilityAssessmentScans(class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSqlVulnerabilityAssessmentScans(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlVulnerabilityAssessmentScans (scope As ResourceIdentifier) As SqlVulnerabilityAssessmentScanCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSqlVulnerabilityAssessmentScans : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanCollection&#xA;override this.GetSqlVulnerabilityAssessmentScans : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanCollection" Usage="mockableSecurityCenterArmClient.GetSqlVulnerabilityAssessmentScans scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SqlVulnerabilityAssessmentScanCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets a collection of SqlVulnerabilityAssessmentScanResources in the ArmClient. </summary>
        <returns> An object representing collection of SqlVulnerabilityAssessmentScanResources and their operations over a SqlVulnerabilityAssessmentScanResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionAssessmentMetadataResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataResource GetSubscriptionAssessmentMetadataResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataResource GetSubscriptionAssessmentMetadataResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSubscriptionAssessmentMetadataResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionAssessmentMetadataResource (id As ResourceIdentifier) As SubscriptionAssessmentMetadataResource" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionAssessmentMetadataResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataResource&#xA;override this.GetSubscriptionAssessmentMetadataResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataResource" Usage="mockableSecurityCenterArmClient.GetSubscriptionAssessmentMetadataResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionGovernanceRuleResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SubscriptionGovernanceRuleResource GetSubscriptionGovernanceRuleResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SubscriptionGovernanceRuleResource GetSubscriptionGovernanceRuleResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSubscriptionGovernanceRuleResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionGovernanceRuleResource (id As ResourceIdentifier) As SubscriptionGovernanceRuleResource" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionGovernanceRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SubscriptionGovernanceRuleResource&#xA;override this.GetSubscriptionGovernanceRuleResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SubscriptionGovernanceRuleResource" Usage="mockableSecurityCenterArmClient.GetSubscriptionGovernanceRuleResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This method is obsolete and will be removed in a future release. Please use GetGovernanceRuleResource.", false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is obsolete and will be removed in a future release. Please use GetGovernanceRuleResource.", false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SubscriptionGovernanceRuleResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.SubscriptionGovernanceRuleResource" /> along with the instance operations that can be performed on it but with no data.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SubscriptionGovernanceRuleResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionSecurityAlertResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SubscriptionSecurityAlertResource GetSubscriptionSecurityAlertResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SubscriptionSecurityAlertResource GetSubscriptionSecurityAlertResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSubscriptionSecurityAlertResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionSecurityAlertResource (id As ResourceIdentifier) As SubscriptionSecurityAlertResource" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionSecurityAlertResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SubscriptionSecurityAlertResource&#xA;override this.GetSubscriptionSecurityAlertResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SubscriptionSecurityAlertResource" Usage="mockableSecurityCenterArmClient.GetSubscriptionSecurityAlertResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SubscriptionSecurityAlertResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.SubscriptionSecurityAlertResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.SubscriptionSecurityAlertResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.SubscriptionSecurityAlertResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SubscriptionSecurityAlertResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionSecurityApplicationResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationResource GetSubscriptionSecurityApplicationResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationResource GetSubscriptionSecurityApplicationResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSubscriptionSecurityApplicationResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionSecurityApplicationResource (id As ResourceIdentifier) As SubscriptionSecurityApplicationResource" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionSecurityApplicationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationResource&#xA;override this.GetSubscriptionSecurityApplicationResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationResource" Usage="mockableSecurityCenterArmClient.GetSubscriptionSecurityApplicationResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionSecurityTaskResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SubscriptionSecurityTaskResource GetSubscriptionSecurityTaskResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SubscriptionSecurityTaskResource GetSubscriptionSecurityTaskResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetSubscriptionSecurityTaskResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionSecurityTaskResource (id As ResourceIdentifier) As SubscriptionSecurityTaskResource" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionSecurityTaskResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SubscriptionSecurityTaskResource&#xA;override this.GetSubscriptionSecurityTaskResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.SubscriptionSecurityTaskResource" Usage="mockableSecurityCenterArmClient.GetSubscriptionSecurityTaskResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SubscriptionSecurityTaskResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.SubscriptionSecurityTaskResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.SubscriptionSecurityTaskResource.CreateResourceIdentifier(System.String,Azure.Core.AzureLocation,System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.SubscriptionSecurityTaskResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SubscriptionSecurityTaskResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTenantAssessmentMetadataResource">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataResource GetTenantAssessmentMetadataResource (Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataResource GetTenantAssessmentMetadataResource(class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterArmClient.GetTenantAssessmentMetadataResource(Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantAssessmentMetadataResource (id As ResourceIdentifier) As TenantAssessmentMetadataResource" />
      <MemberSignature Language="F#" Value="abstract member GetTenantAssessmentMetadataResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataResource&#xA;override this.GetTenantAssessmentMetadataResource : Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataResource" Usage="mockableSecurityCenterArmClient.GetTenantAssessmentMetadataResource id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
