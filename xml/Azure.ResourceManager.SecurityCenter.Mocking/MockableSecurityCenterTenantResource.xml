<Type Name="MockableSecurityCenterTenantResource" FullName="Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterTenantResource">
  <TypeSignature Language="C#" Value="public class MockableSecurityCenterTenantResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableSecurityCenterTenantResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterTenantResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableSecurityCenterTenantResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableSecurityCenterTenantResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to TenantResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableSecurityCenterTenantResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterTenantResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterTenantResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllTenantAssessmentMetadata">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataCollection GetAllTenantAssessmentMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataCollection GetAllTenantAssessmentMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterTenantResource.GetAllTenantAssessmentMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllTenantAssessmentMetadata () As TenantAssessmentMetadataCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAllTenantAssessmentMetadata : unit -&gt; Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataCollection&#xA;override this.GetAllTenantAssessmentMetadata : unit -&gt; Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataCollection" Usage="mockableSecurityCenterTenantResource.GetAllTenantAssessmentMetadata " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of TenantAssessmentMetadataResources in the TenantResource. </summary>
        <returns> An object representing collection of TenantAssessmentMetadataResources and their operations over a TenantAssessmentMetadataResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecureScoreControlDefinitions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem&gt; GetSecureScoreControlDefinitions (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem&gt; GetSecureScoreControlDefinitions(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterTenantResource.GetSecureScoreControlDefinitions(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecureScoreControlDefinitions (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SecureScoreControlDefinitionItem)" />
      <MemberSignature Language="F#" Value="abstract member GetSecureScoreControlDefinitions : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem&gt;&#xA;override this.GetSecureScoreControlDefinitions : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem&gt;" Usage="mockableSecurityCenterTenantResource.GetSecureScoreControlDefinitions cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the available security controls, their assessments, and the max score
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Security/secureScoreControlDefinitions</description></item><item><term>Operation Id</term><description>SecureScoreControlDefinitions_List</description></item><item><term>Default Api Version</term><description>2020-01-01</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecureScoreControlDefinitionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem&gt; GetSecureScoreControlDefinitionsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem&gt; GetSecureScoreControlDefinitionsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterTenantResource.GetSecureScoreControlDefinitionsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecureScoreControlDefinitionsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SecureScoreControlDefinitionItem)" />
      <MemberSignature Language="F#" Value="abstract member GetSecureScoreControlDefinitionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem&gt;&#xA;override this.GetSecureScoreControlDefinitionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem&gt;" Usage="mockableSecurityCenterTenantResource.GetSecureScoreControlDefinitionsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the available security controls, their assessments, and the max score
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Security/secureScoreControlDefinitions</description></item><item><term>Operation Id</term><description>SecureScoreControlDefinitions_List</description></item><item><term>Default Api Version</term><description>2020-01-01</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSensitivitySetting">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SensitivitySettingResource GetSensitivitySetting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SensitivitySettingResource GetSensitivitySetting() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterTenantResource.GetSensitivitySetting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSensitivitySetting () As SensitivitySettingResource" />
      <MemberSignature Language="F#" Value="abstract member GetSensitivitySetting : unit -&gt; Azure.ResourceManager.SecurityCenter.SensitivitySettingResource&#xA;override this.GetSensitivitySetting : unit -&gt; Azure.ResourceManager.SecurityCenter.SensitivitySettingResource" Usage="mockableSecurityCenterTenantResource.GetSensitivitySetting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SensitivitySettingResource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets an object representing a SensitivitySettingResource along with the instance operations that can be performed on it in the TenantResource. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.SecurityCenter.SensitivitySettingResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTenantAssessmentMetadata">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataResource&gt; GetTenantAssessmentMetadata (string assessmentMetadataName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataResource&gt; GetTenantAssessmentMetadata(string assessmentMetadataName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterTenantResource.GetTenantAssessmentMetadata(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantAssessmentMetadata (assessmentMetadataName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TenantAssessmentMetadataResource)" />
      <MemberSignature Language="F#" Value="abstract member GetTenantAssessmentMetadata : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataResource&gt;&#xA;override this.GetTenantAssessmentMetadata : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataResource&gt;" Usage="mockableSecurityCenterTenantResource.GetTenantAssessmentMetadata (assessmentMetadataName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assessmentMetadataName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assessmentMetadataName"> The Assessment Key - Unique key for the assessment type. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get metadata information on an assessment type
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Security/assessmentMetadata/{assessmentMetadataName}</description></item><item><term>Operation Id</term><description>AssessmentsMetadata_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assessmentMetadataName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assessmentMetadataName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantAssessmentMetadataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataResource&gt;&gt; GetTenantAssessmentMetadataAsync (string assessmentMetadataName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataResource&gt;&gt; GetTenantAssessmentMetadataAsync(string assessmentMetadataName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterTenantResource.GetTenantAssessmentMetadataAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantAssessmentMetadataAsync (assessmentMetadataName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TenantAssessmentMetadataResource))" />
      <MemberSignature Language="F#" Value="abstract member GetTenantAssessmentMetadataAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataResource&gt;&gt;&#xA;override this.GetTenantAssessmentMetadataAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataResource&gt;&gt;" Usage="mockableSecurityCenterTenantResource.GetTenantAssessmentMetadataAsync (assessmentMetadataName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assessmentMetadataName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assessmentMetadataName"> The Assessment Key - Unique key for the assessment type. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get metadata information on an assessment type
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Security/assessmentMetadata/{assessmentMetadataName}</description></item><item><term>Operation Id</term><description>AssessmentsMetadata_Get</description></item><item><term>Default Api Version</term><description>2021-06-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.SecurityCenter.TenantAssessmentMetadataResource" /></description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assessmentMetadataName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assessmentMetadataName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
