<Type Name="MockableSecurityCenterResourceGroupResource" FullName="Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource">
  <TypeSignature Language="C#" Value="public class MockableSecurityCenterResourceGroupResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableSecurityCenterResourceGroupResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableSecurityCenterResourceGroupResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableSecurityCenterResourceGroupResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableSecurityCenterResourceGroupResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdaptiveNetworkHardening">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningResource&gt; GetAdaptiveNetworkHardening (string resourceNamespace, string resourceType, string resourceName, string adaptiveNetworkHardeningResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningResource&gt; GetAdaptiveNetworkHardening(string resourceNamespace, string resourceType, string resourceName, string adaptiveNetworkHardeningResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetAdaptiveNetworkHardening(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAdaptiveNetworkHardening (resourceNamespace As String, resourceType As String, resourceName As String, adaptiveNetworkHardeningResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AdaptiveNetworkHardeningResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAdaptiveNetworkHardening : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningResource&gt;&#xA;override this.GetAdaptiveNetworkHardening : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningResource&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetAdaptiveNetworkHardening (resourceNamespace, resourceType, resourceName, adaptiveNetworkHardeningResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceNamespace" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="adaptiveNetworkHardeningResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceNamespace"> The Namespace of the resource. </param>
        <param name="resourceType"> The type of the resource. </param>
        <param name="resourceName"> Name of the resource. </param>
        <param name="adaptiveNetworkHardeningResourceName"> The name of the Adaptive Network Hardening resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a single Adaptive Network Hardening resource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.Security/adaptiveNetworkHardenings/{adaptiveNetworkHardeningResourceName}</description></item><item><term>Operation Id</term><description>AdaptiveNetworkHardenings_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceNamespace" />, <paramref name="resourceType" />, <paramref name="resourceName" /> or <paramref name="adaptiveNetworkHardeningResourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceNamespace" />, <paramref name="resourceType" />, <paramref name="resourceName" /> or <paramref name="adaptiveNetworkHardeningResourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAdaptiveNetworkHardeningAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningResource&gt;&gt; GetAdaptiveNetworkHardeningAsync (string resourceNamespace, string resourceType, string resourceName, string adaptiveNetworkHardeningResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningResource&gt;&gt; GetAdaptiveNetworkHardeningAsync(string resourceNamespace, string resourceType, string resourceName, string adaptiveNetworkHardeningResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetAdaptiveNetworkHardeningAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAdaptiveNetworkHardeningAsync (resourceNamespace As String, resourceType As String, resourceName As String, adaptiveNetworkHardeningResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AdaptiveNetworkHardeningResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAdaptiveNetworkHardeningAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningResource&gt;&gt;&#xA;override this.GetAdaptiveNetworkHardeningAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningResource&gt;&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetAdaptiveNetworkHardeningAsync (resourceNamespace, resourceType, resourceName, adaptiveNetworkHardeningResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceNamespace" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="adaptiveNetworkHardeningResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceNamespace"> The Namespace of the resource. </param>
        <param name="resourceType"> The type of the resource. </param>
        <param name="resourceName"> Name of the resource. </param>
        <param name="adaptiveNetworkHardeningResourceName"> The name of the Adaptive Network Hardening resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a single Adaptive Network Hardening resource
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.Security/adaptiveNetworkHardenings/{adaptiveNetworkHardeningResourceName}</description></item><item><term>Operation Id</term><description>AdaptiveNetworkHardenings_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceNamespace" />, <paramref name="resourceType" />, <paramref name="resourceName" /> or <paramref name="adaptiveNetworkHardeningResourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceNamespace" />, <paramref name="resourceType" />, <paramref name="resourceName" /> or <paramref name="adaptiveNetworkHardeningResourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAdaptiveNetworkHardenings">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningCollection GetAdaptiveNetworkHardenings (string resourceNamespace, string resourceType, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningCollection GetAdaptiveNetworkHardenings(string resourceNamespace, string resourceType, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetAdaptiveNetworkHardenings(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAdaptiveNetworkHardenings (resourceNamespace As String, resourceType As String, resourceName As String) As AdaptiveNetworkHardeningCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAdaptiveNetworkHardenings : string * string * string -&gt; Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningCollection&#xA;override this.GetAdaptiveNetworkHardenings : string * string * string -&gt; Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningCollection" Usage="mockableSecurityCenterResourceGroupResource.GetAdaptiveNetworkHardenings (resourceNamespace, resourceType, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.AdaptiveNetworkHardeningCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceNamespace" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceNamespace"> The Namespace of the resource. </param>
        <param name="resourceType"> The type of the resource. </param>
        <param name="resourceName"> Name of the resource. </param>
        <summary> Gets a collection of AdaptiveNetworkHardeningResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of AdaptiveNetworkHardeningResources and their operations over a AdaptiveNetworkHardeningResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceNamespace" />, <paramref name="resourceType" /> or <paramref name="resourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceNamespace" />, <paramref name="resourceType" /> or <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAlertsByResourceGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertData&gt; GetAlertsByResourceGroup (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAlertData&gt; GetAlertsByResourceGroup(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetAlertsByResourceGroup(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAlertsByResourceGroup (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SecurityAlertData)" />
      <MemberSignature Language="F#" Value="abstract member GetAlertsByResourceGroup : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertData&gt;&#xA;override this.GetAlertsByResourceGroup : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertData&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetAlertsByResourceGroup cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the alerts that are associated with the resource group
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/alerts</description></item><item><term>Operation Id</term><description>Alerts_ListByResourceGroup</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAlertData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAlertsByResourceGroupAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertData&gt; GetAlertsByResourceGroupAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAlertData&gt; GetAlertsByResourceGroupAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetAlertsByResourceGroupAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAlertsByResourceGroupAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SecurityAlertData)" />
      <MemberSignature Language="F#" Value="abstract member GetAlertsByResourceGroupAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertData&gt;&#xA;override this.GetAlertsByResourceGroupAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertData&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetAlertsByResourceGroupAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the alerts that are associated with the resource group
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/alerts</description></item><item><term>Operation Id</term><description>Alerts_ListByResourceGroup</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAlertData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllowedConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityCenterAllowedConnection&gt; GetAllowedConnection (Azure.Core.AzureLocation ascLocation, Azure.ResourceManager.SecurityCenter.Models.SecurityCenterConnectionType connectionType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.Models.SecurityCenterAllowedConnection&gt; GetAllowedConnection(valuetype Azure.Core.AzureLocation ascLocation, valuetype Azure.ResourceManager.SecurityCenter.Models.SecurityCenterConnectionType connectionType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetAllowedConnection(Azure.Core.AzureLocation,Azure.ResourceManager.SecurityCenter.Models.SecurityCenterConnectionType,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllowedConnection (ascLocation As AzureLocation, connectionType As SecurityCenterConnectionType, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SecurityCenterAllowedConnection)" />
      <MemberSignature Language="F#" Value="abstract member GetAllowedConnection : Azure.Core.AzureLocation * Azure.ResourceManager.SecurityCenter.Models.SecurityCenterConnectionType * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityCenterAllowedConnection&gt;&#xA;override this.GetAllowedConnection : Azure.Core.AzureLocation * Azure.ResourceManager.SecurityCenter.Models.SecurityCenterConnectionType * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityCenterAllowedConnection&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetAllowedConnection (ascLocation, connectionType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityCenterAllowedConnection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="Azure.Core.AzureLocation" />
        <Parameter Name="connectionType" Type="Azure.ResourceManager.SecurityCenter.Models.SecurityCenterConnectionType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <param name="connectionType"> The type of allowed connections (Internal, External). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the list of all possible traffic between resources for the subscription and location, based on connection type.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/allowedConnections/{connectionType}</description></item><item><term>Operation Id</term><description>AllowedConnections_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllowedConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityCenterAllowedConnection&gt;&gt; GetAllowedConnectionAsync (Azure.Core.AzureLocation ascLocation, Azure.ResourceManager.SecurityCenter.Models.SecurityCenterConnectionType connectionType, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.Models.SecurityCenterAllowedConnection&gt;&gt; GetAllowedConnectionAsync(valuetype Azure.Core.AzureLocation ascLocation, valuetype Azure.ResourceManager.SecurityCenter.Models.SecurityCenterConnectionType connectionType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetAllowedConnectionAsync(Azure.Core.AzureLocation,Azure.ResourceManager.SecurityCenter.Models.SecurityCenterConnectionType,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllowedConnectionAsync (ascLocation As AzureLocation, connectionType As SecurityCenterConnectionType, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SecurityCenterAllowedConnection))" />
      <MemberSignature Language="F#" Value="abstract member GetAllowedConnectionAsync : Azure.Core.AzureLocation * Azure.ResourceManager.SecurityCenter.Models.SecurityCenterConnectionType * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityCenterAllowedConnection&gt;&gt;&#xA;override this.GetAllowedConnectionAsync : Azure.Core.AzureLocation * Azure.ResourceManager.SecurityCenter.Models.SecurityCenterConnectionType * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityCenterAllowedConnection&gt;&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetAllowedConnectionAsync (ascLocation, connectionType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityCenterAllowedConnection&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="Azure.Core.AzureLocation" />
        <Parameter Name="connectionType" Type="Azure.ResourceManager.SecurityCenter.Models.SecurityCenterConnectionType" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <param name="connectionType"> The type of allowed connections (Internal, External). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the list of all possible traffic between resources for the subscription and location, based on connection type.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/allowedConnections/{connectionType}</description></item><item><term>Operation Id</term><description>AllowedConnections_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAssessmentAutomation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource&gt; GetCustomAssessmentAutomation (string customAssessmentAutomationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource&gt; GetCustomAssessmentAutomation(string customAssessmentAutomationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetCustomAssessmentAutomation(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAssessmentAutomation (customAssessmentAutomationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CustomAssessmentAutomationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAssessmentAutomation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource&gt;&#xA;override this.GetCustomAssessmentAutomation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetCustomAssessmentAutomation (customAssessmentAutomationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customAssessmentAutomationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="customAssessmentAutomationName"> Name of the Custom Assessment Automation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a single custom assessment automation by name for the provided subscription and resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Security/customAssessmentAutomations/{customAssessmentAutomationName}</description></item><item><term>Operation Id</term><description>CustomAssessmentAutomations_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="customAssessmentAutomationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="customAssessmentAutomationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAssessmentAutomationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource&gt;&gt; GetCustomAssessmentAutomationAsync (string customAssessmentAutomationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource&gt;&gt; GetCustomAssessmentAutomationAsync(string customAssessmentAutomationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetCustomAssessmentAutomationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAssessmentAutomationAsync (customAssessmentAutomationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CustomAssessmentAutomationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAssessmentAutomationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource&gt;&gt;&#xA;override this.GetCustomAssessmentAutomationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource&gt;&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetCustomAssessmentAutomationAsync (customAssessmentAutomationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customAssessmentAutomationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="customAssessmentAutomationName"> Name of the Custom Assessment Automation. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a single custom assessment automation by name for the provided subscription and resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Security/customAssessmentAutomations/{customAssessmentAutomationName}</description></item><item><term>Operation Id</term><description>CustomAssessmentAutomations_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="customAssessmentAutomationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="customAssessmentAutomationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAssessmentAutomations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationCollection GetCustomAssessmentAutomations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationCollection GetCustomAssessmentAutomations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetCustomAssessmentAutomations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAssessmentAutomations () As CustomAssessmentAutomationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAssessmentAutomations : unit -&gt; Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationCollection&#xA;override this.GetCustomAssessmentAutomations : unit -&gt; Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationCollection" Usage="mockableSecurityCenterResourceGroupResource.GetCustomAssessmentAutomations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of CustomAssessmentAutomationResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of CustomAssessmentAutomationResources and their operations over a CustomAssessmentAutomationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomEntityStoreAssignment">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource&gt; GetCustomEntityStoreAssignment (string customEntityStoreAssignmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource&gt; GetCustomEntityStoreAssignment(string customEntityStoreAssignmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetCustomEntityStoreAssignment(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomEntityStoreAssignment (customEntityStoreAssignmentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CustomEntityStoreAssignmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCustomEntityStoreAssignment : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource&gt;&#xA;override this.GetCustomEntityStoreAssignment : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetCustomEntityStoreAssignment (customEntityStoreAssignmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customEntityStoreAssignmentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="customEntityStoreAssignmentName"> Name of the custom entity store assignment. Generated name is GUID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a single custom entity store assignment by name for the provided subscription and resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Security/customEntityStoreAssignments/{customEntityStoreAssignmentName}</description></item><item><term>Operation Id</term><description>CustomEntityStoreAssignments_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="customEntityStoreAssignmentName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="customEntityStoreAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomEntityStoreAssignmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource&gt;&gt; GetCustomEntityStoreAssignmentAsync (string customEntityStoreAssignmentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource&gt;&gt; GetCustomEntityStoreAssignmentAsync(string customEntityStoreAssignmentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetCustomEntityStoreAssignmentAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomEntityStoreAssignmentAsync (customEntityStoreAssignmentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CustomEntityStoreAssignmentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetCustomEntityStoreAssignmentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource&gt;&gt;&#xA;override this.GetCustomEntityStoreAssignmentAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource&gt;&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetCustomEntityStoreAssignmentAsync (customEntityStoreAssignmentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customEntityStoreAssignmentName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="customEntityStoreAssignmentName"> Name of the custom entity store assignment. Generated name is GUID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a single custom entity store assignment by name for the provided subscription and resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Security/customEntityStoreAssignments/{customEntityStoreAssignmentName}</description></item><item><term>Operation Id</term><description>CustomEntityStoreAssignments_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="customEntityStoreAssignmentName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="customEntityStoreAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomEntityStoreAssignments">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentCollection GetCustomEntityStoreAssignments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentCollection GetCustomEntityStoreAssignments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetCustomEntityStoreAssignments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomEntityStoreAssignments () As CustomEntityStoreAssignmentCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCustomEntityStoreAssignments : unit -&gt; Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentCollection&#xA;override this.GetCustomEntityStoreAssignments : unit -&gt; Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentCollection" Usage="mockableSecurityCenterResourceGroupResource.GetCustomEntityStoreAssignments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of CustomEntityStoreAssignmentResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of CustomEntityStoreAssignmentResources and their operations over a CustomEntityStoreAssignmentResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDiscoveredSecuritySolution">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.DiscoveredSecuritySolution&gt; GetDiscoveredSecuritySolution (Azure.Core.AzureLocation ascLocation, string discoveredSecuritySolutionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.Models.DiscoveredSecuritySolution&gt; GetDiscoveredSecuritySolution(valuetype Azure.Core.AzureLocation ascLocation, string discoveredSecuritySolutionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetDiscoveredSecuritySolution(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDiscoveredSecuritySolution (ascLocation As AzureLocation, discoveredSecuritySolutionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DiscoveredSecuritySolution)" />
      <MemberSignature Language="F#" Value="abstract member GetDiscoveredSecuritySolution : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.DiscoveredSecuritySolution&gt;&#xA;override this.GetDiscoveredSecuritySolution : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.DiscoveredSecuritySolution&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetDiscoveredSecuritySolution (ascLocation, discoveredSecuritySolutionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.DiscoveredSecuritySolution&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="Azure.Core.AzureLocation" />
        <Parameter Name="discoveredSecuritySolutionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <param name="discoveredSecuritySolutionName"> Name of a discovered security solution. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a specific discovered Security Solution.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/discoveredSecuritySolutions/{discoveredSecuritySolutionName}</description></item><item><term>Operation Id</term><description>DiscoveredSecuritySolutions_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="discoveredSecuritySolutionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="discoveredSecuritySolutionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDiscoveredSecuritySolutionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.DiscoveredSecuritySolution&gt;&gt; GetDiscoveredSecuritySolutionAsync (Azure.Core.AzureLocation ascLocation, string discoveredSecuritySolutionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.Models.DiscoveredSecuritySolution&gt;&gt; GetDiscoveredSecuritySolutionAsync(valuetype Azure.Core.AzureLocation ascLocation, string discoveredSecuritySolutionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetDiscoveredSecuritySolutionAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDiscoveredSecuritySolutionAsync (ascLocation As AzureLocation, discoveredSecuritySolutionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DiscoveredSecuritySolution))" />
      <MemberSignature Language="F#" Value="abstract member GetDiscoveredSecuritySolutionAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.DiscoveredSecuritySolution&gt;&gt;&#xA;override this.GetDiscoveredSecuritySolutionAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.DiscoveredSecuritySolution&gt;&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetDiscoveredSecuritySolutionAsync (ascLocation, discoveredSecuritySolutionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.DiscoveredSecuritySolution&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="Azure.Core.AzureLocation" />
        <Parameter Name="discoveredSecuritySolutionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <param name="discoveredSecuritySolutionName"> Name of a discovered security solution. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a specific discovered Security Solution.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/discoveredSecuritySolutions/{discoveredSecuritySolutionName}</description></item><item><term>Operation Id</term><description>DiscoveredSecuritySolutions_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="discoveredSecuritySolutionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="discoveredSecuritySolutionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExternalSecuritySolution">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.ExternalSecuritySolution&gt; GetExternalSecuritySolution (Azure.Core.AzureLocation ascLocation, string externalSecuritySolutionsName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.Models.ExternalSecuritySolution&gt; GetExternalSecuritySolution(valuetype Azure.Core.AzureLocation ascLocation, string externalSecuritySolutionsName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetExternalSecuritySolution(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExternalSecuritySolution (ascLocation As AzureLocation, externalSecuritySolutionsName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ExternalSecuritySolution)" />
      <MemberSignature Language="F#" Value="abstract member GetExternalSecuritySolution : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.ExternalSecuritySolution&gt;&#xA;override this.GetExternalSecuritySolution : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.ExternalSecuritySolution&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetExternalSecuritySolution (ascLocation, externalSecuritySolutionsName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.ExternalSecuritySolution&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="Azure.Core.AzureLocation" />
        <Parameter Name="externalSecuritySolutionsName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <param name="externalSecuritySolutionsName"> Name of an external security solution. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a specific external Security Solution.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/ExternalSecuritySolutions/{externalSecuritySolutionsName}</description></item><item><term>Operation Id</term><description>ExternalSecuritySolutions_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="externalSecuritySolutionsName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="externalSecuritySolutionsName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExternalSecuritySolutionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.ExternalSecuritySolution&gt;&gt; GetExternalSecuritySolutionAsync (Azure.Core.AzureLocation ascLocation, string externalSecuritySolutionsName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.Models.ExternalSecuritySolution&gt;&gt; GetExternalSecuritySolutionAsync(valuetype Azure.Core.AzureLocation ascLocation, string externalSecuritySolutionsName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetExternalSecuritySolutionAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExternalSecuritySolutionAsync (ascLocation As AzureLocation, externalSecuritySolutionsName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ExternalSecuritySolution))" />
      <MemberSignature Language="F#" Value="abstract member GetExternalSecuritySolutionAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.ExternalSecuritySolution&gt;&gt;&#xA;override this.GetExternalSecuritySolutionAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.ExternalSecuritySolution&gt;&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetExternalSecuritySolutionAsync (ascLocation, externalSecuritySolutionsName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.ExternalSecuritySolution&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="Azure.Core.AzureLocation" />
        <Parameter Name="externalSecuritySolutionsName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <param name="externalSecuritySolutionsName"> Name of an external security solution. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a specific external Security Solution.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/ExternalSecuritySolutions/{externalSecuritySolutionsName}</description></item><item><term>Operation Id</term><description>ExternalSecuritySolutions_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="externalSecuritySolutionsName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="externalSecuritySolutionsName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIotSecuritySolution">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource&gt; GetIotSecuritySolution (string solutionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource&gt; GetIotSecuritySolution(string solutionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetIotSecuritySolution(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotSecuritySolution (solutionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IotSecuritySolutionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIotSecuritySolution : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource&gt;&#xA;override this.GetIotSecuritySolution : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetIotSecuritySolution (solutionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="solutionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="solutionName"> The name of the IoT Security solution. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            User this method to get details of a specific IoT Security solution based on solution name
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/iotSecuritySolutions/{solutionName}</description></item><item><term>Operation Id</term><description>IotSecuritySolution_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="solutionName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIotSecuritySolutionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource&gt;&gt; GetIotSecuritySolutionAsync (string solutionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource&gt;&gt; GetIotSecuritySolutionAsync(string solutionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetIotSecuritySolutionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotSecuritySolutionAsync (solutionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IotSecuritySolutionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetIotSecuritySolutionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource&gt;&gt;&#xA;override this.GetIotSecuritySolutionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource&gt;&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetIotSecuritySolutionAsync (solutionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="solutionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="solutionName"> The name of the IoT Security solution. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            User this method to get details of a specific IoT Security solution based on solution name
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/iotSecuritySolutions/{solutionName}</description></item><item><term>Operation Id</term><description>IotSecuritySolution_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="solutionName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="solutionName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIotSecuritySolutions">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.IotSecuritySolutionCollection GetIotSecuritySolutions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.IotSecuritySolutionCollection GetIotSecuritySolutions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetIotSecuritySolutions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotSecuritySolutions () As IotSecuritySolutionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetIotSecuritySolutions : unit -&gt; Azure.ResourceManager.SecurityCenter.IotSecuritySolutionCollection&#xA;override this.GetIotSecuritySolutions : unit -&gt; Azure.ResourceManager.SecurityCenter.IotSecuritySolutionCollection" Usage="mockableSecurityCenterResourceGroupResource.GetIotSecuritySolutions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.IotSecuritySolutionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of IotSecuritySolutionResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of IotSecuritySolutionResources and their operations over a IotSecuritySolutionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJitNetworkAccessPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyCollection GetJitNetworkAccessPolicies (Azure.Core.AzureLocation ascLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyCollection GetJitNetworkAccessPolicies(valuetype Azure.Core.AzureLocation ascLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetJitNetworkAccessPolicies(Azure.Core.AzureLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJitNetworkAccessPolicies (ascLocation As AzureLocation) As JitNetworkAccessPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetJitNetworkAccessPolicies : Azure.Core.AzureLocation -&gt; Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyCollection&#xA;override this.GetJitNetworkAccessPolicies : Azure.Core.AzureLocation -&gt; Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyCollection" Usage="mockableSecurityCenterResourceGroupResource.GetJitNetworkAccessPolicies ascLocation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="Azure.Core.AzureLocation" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <summary> Gets a collection of JitNetworkAccessPolicyResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of JitNetworkAccessPolicyResources and their operations over a JitNetworkAccessPolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJitNetworkAccessPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt; GetJitNetworkAccessPolicies (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt; GetJitNetworkAccessPolicies(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetJitNetworkAccessPolicies(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJitNetworkAccessPolicies (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of JitNetworkAccessPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetJitNetworkAccessPolicies : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;&#xA;override this.GetJitNetworkAccessPolicies : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetJitNetworkAccessPolicies cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Policies for protecting resources using Just-in-Time access control for the subscription, location
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/jitNetworkAccessPolicies</description></item><item><term>Operation Id</term><description>JitNetworkAccessPolicies_ListByResourceGroup</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJitNetworkAccessPoliciesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt; GetJitNetworkAccessPoliciesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt; GetJitNetworkAccessPoliciesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetJitNetworkAccessPoliciesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJitNetworkAccessPoliciesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of JitNetworkAccessPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetJitNetworkAccessPoliciesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;&#xA;override this.GetJitNetworkAccessPoliciesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetJitNetworkAccessPoliciesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Policies for protecting resources using Just-in-Time access control for the subscription, location
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/jitNetworkAccessPolicies</description></item><item><term>Operation Id</term><description>JitNetworkAccessPolicies_ListByResourceGroup</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJitNetworkAccessPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt; GetJitNetworkAccessPolicy (Azure.Core.AzureLocation ascLocation, string jitNetworkAccessPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt; GetJitNetworkAccessPolicy(valuetype Azure.Core.AzureLocation ascLocation, string jitNetworkAccessPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetJitNetworkAccessPolicy(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJitNetworkAccessPolicy (ascLocation As AzureLocation, jitNetworkAccessPolicyName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of JitNetworkAccessPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetJitNetworkAccessPolicy : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;&#xA;override this.GetJitNetworkAccessPolicy : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetJitNetworkAccessPolicy (ascLocation, jitNetworkAccessPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="Azure.Core.AzureLocation" />
        <Parameter Name="jitNetworkAccessPolicyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <param name="jitNetworkAccessPolicyName"> Name of a Just-in-Time access configuration policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Policies for protecting resources using Just-in-Time access control for the subscription, location
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/jitNetworkAccessPolicies/{jitNetworkAccessPolicyName}</description></item><item><term>Operation Id</term><description>JitNetworkAccessPolicies_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jitNetworkAccessPolicyName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="jitNetworkAccessPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetJitNetworkAccessPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;&gt; GetJitNetworkAccessPolicyAsync (Azure.Core.AzureLocation ascLocation, string jitNetworkAccessPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;&gt; GetJitNetworkAccessPolicyAsync(valuetype Azure.Core.AzureLocation ascLocation, string jitNetworkAccessPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetJitNetworkAccessPolicyAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJitNetworkAccessPolicyAsync (ascLocation As AzureLocation, jitNetworkAccessPolicyName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of JitNetworkAccessPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetJitNetworkAccessPolicyAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;&gt;&#xA;override this.GetJitNetworkAccessPolicyAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetJitNetworkAccessPolicyAsync (ascLocation, jitNetworkAccessPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="Azure.Core.AzureLocation" />
        <Parameter Name="jitNetworkAccessPolicyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <param name="jitNetworkAccessPolicyName"> Name of a Just-in-Time access configuration policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Policies for protecting resources using Just-in-Time access control for the subscription, location
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/jitNetworkAccessPolicies/{jitNetworkAccessPolicyName}</description></item><item><term>Operation Id</term><description>JitNetworkAccessPolicies_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jitNetworkAccessPolicyName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="jitNetworkAccessPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGroupSecurityAlert">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertResource&gt; GetResourceGroupSecurityAlert (Azure.Core.AzureLocation ascLocation, string alertName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertResource&gt; GetResourceGroupSecurityAlert(valuetype Azure.Core.AzureLocation ascLocation, string alertName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetResourceGroupSecurityAlert(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceGroupSecurityAlert (ascLocation As AzureLocation, alertName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourceGroupSecurityAlertResource)" />
      <MemberSignature Language="F#" Value="abstract member GetResourceGroupSecurityAlert : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertResource&gt;&#xA;override this.GetResourceGroupSecurityAlert : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertResource&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetResourceGroupSecurityAlert (ascLocation, alertName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="Azure.Core.AzureLocation" />
        <Parameter Name="alertName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <param name="alertName"> Name of the alert object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an alert that is associated a resource group or a resource in a resource group
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/alerts/{alertName}</description></item><item><term>Operation Id</term><description>Alerts_GetResourceGroupLevel</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="alertName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="alertName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGroupSecurityAlertAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertResource&gt;&gt; GetResourceGroupSecurityAlertAsync (Azure.Core.AzureLocation ascLocation, string alertName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertResource&gt;&gt; GetResourceGroupSecurityAlertAsync(valuetype Azure.Core.AzureLocation ascLocation, string alertName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetResourceGroupSecurityAlertAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceGroupSecurityAlertAsync (ascLocation As AzureLocation, alertName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourceGroupSecurityAlertResource))" />
      <MemberSignature Language="F#" Value="abstract member GetResourceGroupSecurityAlertAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertResource&gt;&gt;&#xA;override this.GetResourceGroupSecurityAlertAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertResource&gt;&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetResourceGroupSecurityAlertAsync (ascLocation, alertName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="Azure.Core.AzureLocation" />
        <Parameter Name="alertName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <param name="alertName"> Name of the alert object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an alert that is associated a resource group or a resource in a resource group
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/alerts/{alertName}</description></item><item><term>Operation Id</term><description>Alerts_GetResourceGroupLevel</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="alertName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="alertName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGroupSecurityAlerts">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertCollection GetResourceGroupSecurityAlerts (Azure.Core.AzureLocation ascLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertCollection GetResourceGroupSecurityAlerts(valuetype Azure.Core.AzureLocation ascLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetResourceGroupSecurityAlerts(Azure.Core.AzureLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceGroupSecurityAlerts (ascLocation As AzureLocation) As ResourceGroupSecurityAlertCollection" />
      <MemberSignature Language="F#" Value="abstract member GetResourceGroupSecurityAlerts : Azure.Core.AzureLocation -&gt; Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertCollection&#xA;override this.GetResourceGroupSecurityAlerts : Azure.Core.AzureLocation -&gt; Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertCollection" Usage="mockableSecurityCenterResourceGroupResource.GetResourceGroupSecurityAlerts ascLocation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityAlertCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="Azure.Core.AzureLocation" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <summary> Gets a collection of ResourceGroupSecurityAlertResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ResourceGroupSecurityAlertResources and their operations over a ResourceGroupSecurityAlertResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGroupSecurityTask">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskResource&gt; GetResourceGroupSecurityTask (Azure.Core.AzureLocation ascLocation, string taskName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskResource&gt; GetResourceGroupSecurityTask(valuetype Azure.Core.AzureLocation ascLocation, string taskName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetResourceGroupSecurityTask(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceGroupSecurityTask (ascLocation As AzureLocation, taskName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourceGroupSecurityTaskResource)" />
      <MemberSignature Language="F#" Value="abstract member GetResourceGroupSecurityTask : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskResource&gt;&#xA;override this.GetResourceGroupSecurityTask : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskResource&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetResourceGroupSecurityTask (ascLocation, taskName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="Azure.Core.AzureLocation" />
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <param name="taskName"> Name of the task object, will be a GUID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Recommended tasks that will help improve the security of the subscription proactively
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/tasks/{taskName}</description></item><item><term>Operation Id</term><description>Tasks_GetResourceGroupLevelTask</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="taskName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="taskName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGroupSecurityTaskAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskResource&gt;&gt; GetResourceGroupSecurityTaskAsync (Azure.Core.AzureLocation ascLocation, string taskName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskResource&gt;&gt; GetResourceGroupSecurityTaskAsync(valuetype Azure.Core.AzureLocation ascLocation, string taskName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetResourceGroupSecurityTaskAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceGroupSecurityTaskAsync (ascLocation As AzureLocation, taskName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourceGroupSecurityTaskResource))" />
      <MemberSignature Language="F#" Value="abstract member GetResourceGroupSecurityTaskAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskResource&gt;&gt;&#xA;override this.GetResourceGroupSecurityTaskAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskResource&gt;&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetResourceGroupSecurityTaskAsync (ascLocation, taskName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="Azure.Core.AzureLocation" />
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <param name="taskName"> Name of the task object, will be a GUID. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Recommended tasks that will help improve the security of the subscription proactively
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/tasks/{taskName}</description></item><item><term>Operation Id</term><description>Tasks_GetResourceGroupLevelTask</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="taskName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="taskName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceGroupSecurityTasks">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskCollection GetResourceGroupSecurityTasks (Azure.Core.AzureLocation ascLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskCollection GetResourceGroupSecurityTasks(valuetype Azure.Core.AzureLocation ascLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetResourceGroupSecurityTasks(Azure.Core.AzureLocation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceGroupSecurityTasks (ascLocation As AzureLocation) As ResourceGroupSecurityTaskCollection" />
      <MemberSignature Language="F#" Value="abstract member GetResourceGroupSecurityTasks : Azure.Core.AzureLocation -&gt; Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskCollection&#xA;override this.GetResourceGroupSecurityTasks : Azure.Core.AzureLocation -&gt; Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskCollection" Usage="mockableSecurityCenterResourceGroupResource.GetResourceGroupSecurityTasks ascLocation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.ResourceGroupSecurityTaskCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="Azure.Core.AzureLocation" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <summary> Gets a collection of ResourceGroupSecurityTaskResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ResourceGroupSecurityTaskResources and their operations over a ResourceGroupSecurityTaskResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityAutomation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAutomationResource&gt; GetSecurityAutomation (string automationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAutomationResource&gt; GetSecurityAutomation(string automationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetSecurityAutomation(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityAutomation (automationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SecurityAutomationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityAutomation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAutomationResource&gt;&#xA;override this.GetSecurityAutomation : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAutomationResource&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetSecurityAutomation (automationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAutomationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="automationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="automationName"> The security automation name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves information about the model of a security automation.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/automations/{automationName}</description></item><item><term>Operation Id</term><description>Automations_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="automationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="automationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityAutomationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAutomationResource&gt;&gt; GetSecurityAutomationAsync (string automationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAutomationResource&gt;&gt; GetSecurityAutomationAsync(string automationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetSecurityAutomationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityAutomationAsync (automationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SecurityAutomationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityAutomationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAutomationResource&gt;&gt;&#xA;override this.GetSecurityAutomationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAutomationResource&gt;&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetSecurityAutomationAsync (automationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAutomationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="automationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="automationName"> The security automation name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves information about the model of a security automation.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/automations/{automationName}</description></item><item><term>Operation Id</term><description>Automations_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="automationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="automationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityAutomations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecurityAutomationCollection GetSecurityAutomations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecurityAutomationCollection GetSecurityAutomations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetSecurityAutomations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityAutomations () As SecurityAutomationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityAutomations : unit -&gt; Azure.ResourceManager.SecurityCenter.SecurityAutomationCollection&#xA;override this.GetSecurityAutomations : unit -&gt; Azure.ResourceManager.SecurityCenter.SecurityAutomationCollection" Usage="mockableSecurityCenterResourceGroupResource.GetSecurityAutomations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecurityAutomationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SecurityAutomationResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of SecurityAutomationResources and their operations over a SecurityAutomationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityConnector">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityConnectorResource&gt; GetSecurityConnector (string securityConnectorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityConnectorResource&gt; GetSecurityConnector(string securityConnectorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetSecurityConnector(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityConnector (securityConnectorName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SecurityConnectorResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityConnector : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityConnectorResource&gt;&#xA;override this.GetSecurityConnector : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityConnectorResource&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetSecurityConnector (securityConnectorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityConnectorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityConnectorName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="securityConnectorName"> The security connector name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves details of a specific security connector
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}</description></item><item><term>Operation Id</term><description>SecurityConnectors_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securityConnectorName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="securityConnectorName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityConnectorAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityConnectorResource&gt;&gt; GetSecurityConnectorAsync (string securityConnectorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityConnectorResource&gt;&gt; GetSecurityConnectorAsync(string securityConnectorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetSecurityConnectorAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityConnectorAsync (securityConnectorName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SecurityConnectorResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityConnectorAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityConnectorResource&gt;&gt;&#xA;override this.GetSecurityConnectorAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityConnectorResource&gt;&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetSecurityConnectorAsync (securityConnectorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityConnectorResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityConnectorName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="securityConnectorName"> The security connector name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves details of a specific security connector
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}</description></item><item><term>Operation Id</term><description>SecurityConnectors_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securityConnectorName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="securityConnectorName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityConnectors">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecurityConnectorCollection GetSecurityConnectors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecurityConnectorCollection GetSecurityConnectors() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetSecurityConnectors" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityConnectors () As SecurityConnectorCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityConnectors : unit -&gt; Azure.ResourceManager.SecurityCenter.SecurityConnectorCollection&#xA;override this.GetSecurityConnectors : unit -&gt; Azure.ResourceManager.SecurityCenter.SecurityConnectorCollection" Usage="mockableSecurityCenterResourceGroupResource.GetSecurityConnectors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecurityConnectorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SecurityConnectorResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of SecurityConnectorResources and their operations over a SecurityConnectorResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecuritySolution">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolution&gt; GetSecuritySolution (Azure.Core.AzureLocation ascLocation, string securitySolutionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.Models.SecuritySolution&gt; GetSecuritySolution(valuetype Azure.Core.AzureLocation ascLocation, string securitySolutionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetSecuritySolution(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecuritySolution (ascLocation As AzureLocation, securitySolutionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SecuritySolution)" />
      <MemberSignature Language="F#" Value="abstract member GetSecuritySolution : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolution&gt;&#xA;override this.GetSecuritySolution : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolution&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetSecuritySolution (ascLocation, securitySolutionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolution&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="Azure.Core.AzureLocation" />
        <Parameter Name="securitySolutionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <param name="securitySolutionName"> Name of security solution. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a specific Security Solution.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/securitySolutions/{securitySolutionName}</description></item><item><term>Operation Id</term><description>SecuritySolutions_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="securitySolutionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securitySolutionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecuritySolutionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolution&gt;&gt; GetSecuritySolutionAsync (Azure.Core.AzureLocation ascLocation, string securitySolutionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.Models.SecuritySolution&gt;&gt; GetSecuritySolutionAsync(valuetype Azure.Core.AzureLocation ascLocation, string securitySolutionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetSecuritySolutionAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecuritySolutionAsync (ascLocation As AzureLocation, securitySolutionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SecuritySolution))" />
      <MemberSignature Language="F#" Value="abstract member GetSecuritySolutionAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolution&gt;&gt;&#xA;override this.GetSecuritySolutionAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolution&gt;&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetSecuritySolutionAsync (ascLocation, securitySolutionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolution&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="Azure.Core.AzureLocation" />
        <Parameter Name="securitySolutionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <param name="securitySolutionName"> Name of security solution. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a specific Security Solution.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/securitySolutions/{securitySolutionName}</description></item><item><term>Operation Id</term><description>SecuritySolutions_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="securitySolutionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securitySolutionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServerVulnerabilityAssessment">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentResource&gt; GetServerVulnerabilityAssessment (string resourceNamespace, string resourceType, string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentResource&gt; GetServerVulnerabilityAssessment(string resourceNamespace, string resourceType, string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetServerVulnerabilityAssessment(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerVulnerabilityAssessment (resourceNamespace As String, resourceType As String, resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServerVulnerabilityAssessmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServerVulnerabilityAssessment : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentResource&gt;&#xA;override this.GetServerVulnerabilityAssessment : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentResource&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetServerVulnerabilityAssessment (resourceNamespace, resourceType, resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceNamespace" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceNamespace"> The Namespace of the resource. </param>
        <param name="resourceType"> The type of the resource. </param>
        <param name="resourceName"> Name of the resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server vulnerability assessment onboarding statuses on a given resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.Security/serverVulnerabilityAssessments/{serverVulnerabilityAssessment}</description></item><item><term>Operation Id</term><description>ServerVulnerabilityAssessment_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceNamespace" />, <paramref name="resourceType" /> or <paramref name="resourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceNamespace" />, <paramref name="resourceType" /> or <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServerVulnerabilityAssessmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentResource&gt;&gt; GetServerVulnerabilityAssessmentAsync (string resourceNamespace, string resourceType, string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentResource&gt;&gt; GetServerVulnerabilityAssessmentAsync(string resourceNamespace, string resourceType, string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetServerVulnerabilityAssessmentAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerVulnerabilityAssessmentAsync (resourceNamespace As String, resourceType As String, resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServerVulnerabilityAssessmentResource))" />
      <MemberSignature Language="F#" Value="abstract member GetServerVulnerabilityAssessmentAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentResource&gt;&gt;&#xA;override this.GetServerVulnerabilityAssessmentAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentResource&gt;&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetServerVulnerabilityAssessmentAsync (resourceNamespace, resourceType, resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceNamespace" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceNamespace"> The Namespace of the resource. </param>
        <param name="resourceType"> The type of the resource. </param>
        <param name="resourceName"> Name of the resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a server vulnerability assessment onboarding statuses on a given resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.Security/serverVulnerabilityAssessments/{serverVulnerabilityAssessment}</description></item><item><term>Operation Id</term><description>ServerVulnerabilityAssessment_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceNamespace" />, <paramref name="resourceType" /> or <paramref name="resourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceNamespace" />, <paramref name="resourceType" /> or <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServerVulnerabilityAssessments">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentCollection GetServerVulnerabilityAssessments (string resourceNamespace, string resourceType, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentCollection GetServerVulnerabilityAssessments(string resourceNamespace, string resourceType, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetServerVulnerabilityAssessments(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServerVulnerabilityAssessments (resourceNamespace As String, resourceType As String, resourceName As String) As ServerVulnerabilityAssessmentCollection" />
      <MemberSignature Language="F#" Value="abstract member GetServerVulnerabilityAssessments : string * string * string -&gt; Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentCollection&#xA;override this.GetServerVulnerabilityAssessments : string * string * string -&gt; Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentCollection" Usage="mockableSecurityCenterResourceGroupResource.GetServerVulnerabilityAssessments (resourceNamespace, resourceType, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.ServerVulnerabilityAssessmentCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceNamespace" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceNamespace"> The Namespace of the resource. </param>
        <param name="resourceType"> The type of the resource. </param>
        <param name="resourceName"> Name of the resource. </param>
        <summary> Gets a collection of ServerVulnerabilityAssessmentResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ServerVulnerabilityAssessmentResources and their operations over a ServerVulnerabilityAssessmentResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceNamespace" />, <paramref name="resourceType" /> or <paramref name="resourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceNamespace" />, <paramref name="resourceType" /> or <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSoftwareInventories">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SoftwareInventoryCollection GetSoftwareInventories (string resourceNamespace, string resourceType, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SoftwareInventoryCollection GetSoftwareInventories(string resourceNamespace, string resourceType, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetSoftwareInventories(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSoftwareInventories (resourceNamespace As String, resourceType As String, resourceName As String) As SoftwareInventoryCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSoftwareInventories : string * string * string -&gt; Azure.ResourceManager.SecurityCenter.SoftwareInventoryCollection&#xA;override this.GetSoftwareInventories : string * string * string -&gt; Azure.ResourceManager.SecurityCenter.SoftwareInventoryCollection" Usage="mockableSecurityCenterResourceGroupResource.GetSoftwareInventories (resourceNamespace, resourceType, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SoftwareInventoryCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceNamespace" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceNamespace"> The namespace of the resource. </param>
        <param name="resourceType"> The type of the resource. </param>
        <param name="resourceName"> Name of the resource. </param>
        <summary> Gets a collection of SoftwareInventoryResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of SoftwareInventoryResources and their operations over a SoftwareInventoryResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceNamespace" />, <paramref name="resourceType" /> or <paramref name="resourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceNamespace" />, <paramref name="resourceType" /> or <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSoftwareInventory">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource&gt; GetSoftwareInventory (string resourceNamespace, string resourceType, string resourceName, string softwareName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource&gt; GetSoftwareInventory(string resourceNamespace, string resourceType, string resourceName, string softwareName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetSoftwareInventory(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSoftwareInventory (resourceNamespace As String, resourceType As String, resourceName As String, softwareName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SoftwareInventoryResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSoftwareInventory : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource&gt;&#xA;override this.GetSoftwareInventory : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetSoftwareInventory (resourceNamespace, resourceType, resourceName, softwareName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceNamespace" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="softwareName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceNamespace"> The namespace of the resource. </param>
        <param name="resourceType"> The type of the resource. </param>
        <param name="resourceName"> Name of the resource. </param>
        <param name="softwareName"> Name of the installed software. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a single software data of the virtual machine.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.Security/softwareInventories/{softwareName}</description></item><item><term>Operation Id</term><description>SoftwareInventories_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceNamespace" />, <paramref name="resourceType" />, <paramref name="resourceName" /> or <paramref name="softwareName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceNamespace" />, <paramref name="resourceType" />, <paramref name="resourceName" /> or <paramref name="softwareName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSoftwareInventoryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource&gt;&gt; GetSoftwareInventoryAsync (string resourceNamespace, string resourceType, string resourceName, string softwareName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource&gt;&gt; GetSoftwareInventoryAsync(string resourceNamespace, string resourceType, string resourceName, string softwareName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetSoftwareInventoryAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSoftwareInventoryAsync (resourceNamespace As String, resourceType As String, resourceName As String, softwareName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SoftwareInventoryResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSoftwareInventoryAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource&gt;&gt;&#xA;override this.GetSoftwareInventoryAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource&gt;&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetSoftwareInventoryAsync (resourceNamespace, resourceType, resourceName, softwareName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceNamespace" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String" />
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="softwareName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceNamespace"> The namespace of the resource. </param>
        <param name="resourceType"> The type of the resource. </param>
        <param name="resourceName"> Name of the resource. </param>
        <param name="softwareName"> Name of the installed software. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a single software data of the virtual machine.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.Security/softwareInventories/{softwareName}</description></item><item><term>Operation Id</term><description>SoftwareInventories_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceNamespace" />, <paramref name="resourceType" />, <paramref name="resourceName" /> or <paramref name="softwareName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceNamespace" />, <paramref name="resourceType" />, <paramref name="resourceName" /> or <paramref name="softwareName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTopology">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityTopologyResource&gt; GetTopology (Azure.Core.AzureLocation ascLocation, string topologyResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.Models.SecurityTopologyResource&gt; GetTopology(valuetype Azure.Core.AzureLocation ascLocation, string topologyResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetTopology(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTopology (ascLocation As AzureLocation, topologyResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SecurityTopologyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetTopology : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityTopologyResource&gt;&#xA;override this.GetTopology : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityTopologyResource&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetTopology (ascLocation, topologyResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityTopologyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="Azure.Core.AzureLocation" />
        <Parameter Name="topologyResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <param name="topologyResourceName"> Name of a topology resources collection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a specific topology component.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/topologies/{topologyResourceName}</description></item><item><term>Operation Id</term><description>Topology_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="topologyResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="topologyResourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTopologyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityTopologyResource&gt;&gt; GetTopologyAsync (Azure.Core.AzureLocation ascLocation, string topologyResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.Models.SecurityTopologyResource&gt;&gt; GetTopologyAsync(valuetype Azure.Core.AzureLocation ascLocation, string topologyResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterResourceGroupResource.GetTopologyAsync(Azure.Core.AzureLocation,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTopologyAsync (ascLocation As AzureLocation, topologyResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SecurityTopologyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetTopologyAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityTopologyResource&gt;&gt;&#xA;override this.GetTopologyAsync : Azure.Core.AzureLocation * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityTopologyResource&gt;&gt;" Usage="mockableSecurityCenterResourceGroupResource.GetTopologyAsync (ascLocation, topologyResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityTopologyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="Azure.Core.AzureLocation" />
        <Parameter Name="topologyResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <param name="topologyResourceName"> Name of a topology resources collection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a specific topology component.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/topologies/{topologyResourceName}</description></item><item><term>Operation Id</term><description>Topology_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="topologyResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="topologyResourceName" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
