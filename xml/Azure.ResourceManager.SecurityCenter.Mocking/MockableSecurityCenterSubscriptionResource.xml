<Type Name="MockableSecurityCenterSubscriptionResource" FullName="Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource">
  <TypeSignature Language="C#" Value="public class MockableSecurityCenterSubscriptionResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableSecurityCenterSubscriptionResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableSecurityCenterSubscriptionResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableSecurityCenterSubscriptionResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to SubscriptionResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableSecurityCenterSubscriptionResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdaptiveApplicationControlGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource&gt; GetAdaptiveApplicationControlGroups (bool? includePathRecommendations = default, bool? summary = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource&gt; GetAdaptiveApplicationControlGroups(valuetype System.Nullable`1&lt;bool&gt; includePathRecommendations, valuetype System.Nullable`1&lt;bool&gt; summary, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetAdaptiveApplicationControlGroups(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAdaptiveApplicationControlGroups (Optional includePathRecommendations As Nullable(Of Boolean) = Nothing, Optional summary As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AdaptiveApplicationControlGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAdaptiveApplicationControlGroups : Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource&gt;&#xA;override this.GetAdaptiveApplicationControlGroups : Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetAdaptiveApplicationControlGroups (includePathRecommendations, summary, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePathRecommendations" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="summary" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="includePathRecommendations"> Include the policy rules. </param>
        <param name="summary"> Return output in a summarized form. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of application control machine groups for the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/applicationWhitelistings</description></item><item><term>Operation Id</term><description>AdaptiveApplicationControls_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdaptiveApplicationControlGroupsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource&gt; GetAdaptiveApplicationControlGroupsAsync (bool? includePathRecommendations = default, bool? summary = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource&gt; GetAdaptiveApplicationControlGroupsAsync(valuetype System.Nullable`1&lt;bool&gt; includePathRecommendations, valuetype System.Nullable`1&lt;bool&gt; summary, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetAdaptiveApplicationControlGroupsAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAdaptiveApplicationControlGroupsAsync (Optional includePathRecommendations As Nullable(Of Boolean) = Nothing, Optional summary As Nullable(Of Boolean) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AdaptiveApplicationControlGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAdaptiveApplicationControlGroupsAsync : Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource&gt;&#xA;override this.GetAdaptiveApplicationControlGroupsAsync : Nullable&lt;bool&gt; * Nullable&lt;bool&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetAdaptiveApplicationControlGroupsAsync (includePathRecommendations, summary, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePathRecommendations" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="summary" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="includePathRecommendations"> Include the policy rules. </param>
        <param name="summary"> Return output in a summarized form. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of application control machine groups for the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/applicationWhitelistings</description></item><item><term>Operation Id</term><description>AdaptiveApplicationControls_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.AdaptiveApplicationControlGroupResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAlerts">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertData&gt; GetAlerts (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAlertData&gt; GetAlerts(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetAlerts(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAlerts (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SecurityAlertData)" />
      <MemberSignature Language="F#" Value="abstract member GetAlerts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertData&gt;&#xA;override this.GetAlerts : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertData&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetAlerts cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the alerts that are associated with the subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/alerts</description></item><item><term>Operation Id</term><description>Alerts_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAlertData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAlertsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertData&gt; GetAlertsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAlertData&gt; GetAlertsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetAlertsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAlertsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SecurityAlertData)" />
      <MemberSignature Language="F#" Value="abstract member GetAlertsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertData&gt;&#xA;override this.GetAlertsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertData&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetAlertsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List all the alerts that are associated with the subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/alerts</description></item><item><term>Operation Id</term><description>Alerts_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAlertData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllowedConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityCenterAllowedConnection&gt; GetAllowedConnections (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.SecurityCenterAllowedConnection&gt; GetAllowedConnections(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetAllowedConnections(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllowedConnections (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SecurityCenterAllowedConnection)" />
      <MemberSignature Language="F#" Value="abstract member GetAllowedConnections : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityCenterAllowedConnection&gt;&#xA;override this.GetAllowedConnections : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityCenterAllowedConnection&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetAllowedConnections cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityCenterAllowedConnection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the list of all possible traffic between resources for the subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/allowedConnections</description></item><item><term>Operation Id</term><description>AllowedConnections_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.SecurityCenterAllowedConnection" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllowedConnectionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityCenterAllowedConnection&gt; GetAllowedConnectionsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.SecurityCenterAllowedConnection&gt; GetAllowedConnectionsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetAllowedConnectionsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllowedConnectionsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SecurityCenterAllowedConnection)" />
      <MemberSignature Language="F#" Value="abstract member GetAllowedConnectionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityCenterAllowedConnection&gt;&#xA;override this.GetAllowedConnectionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityCenterAllowedConnection&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetAllowedConnectionsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityCenterAllowedConnection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the list of all possible traffic between resources for the subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/allowedConnections</description></item><item><term>Operation Id</term><description>AllowedConnections_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.SecurityCenterAllowedConnection" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllSecuritySolutionsReferenceData">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData&gt; GetAllSecuritySolutionsReferenceData (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData&gt; GetAllSecuritySolutionsReferenceData(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetAllSecuritySolutionsReferenceData(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllSecuritySolutionsReferenceData (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SecuritySolutionsReferenceData)" />
      <MemberSignature Language="F#" Value="abstract member GetAllSecuritySolutionsReferenceData : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData&gt;&#xA;override this.GetAllSecuritySolutionsReferenceData : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetAllSecuritySolutionsReferenceData cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of all supported Security Solutions for the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/securitySolutionsReferenceData</description></item><item><term>Operation Id</term><description>securitySolutionsReferenceData_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllSecuritySolutionsReferenceDataAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData&gt; GetAllSecuritySolutionsReferenceDataAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData&gt; GetAllSecuritySolutionsReferenceDataAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetAllSecuritySolutionsReferenceDataAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllSecuritySolutionsReferenceDataAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SecuritySolutionsReferenceData)" />
      <MemberSignature Language="F#" Value="abstract member GetAllSecuritySolutionsReferenceDataAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData&gt;&#xA;override this.GetAllSecuritySolutionsReferenceDataAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetAllSecuritySolutionsReferenceDataAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of all supported Security Solutions for the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/securitySolutionsReferenceData</description></item><item><term>Operation Id</term><description>securitySolutionsReferenceData_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.SecuritySolutionsReferenceData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllSubscriptionAssessmentMetadata">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataCollection GetAllSubscriptionAssessmentMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataCollection GetAllSubscriptionAssessmentMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetAllSubscriptionAssessmentMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllSubscriptionAssessmentMetadata () As SubscriptionAssessmentMetadataCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAllSubscriptionAssessmentMetadata : unit -&gt; Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataCollection&#xA;override this.GetAllSubscriptionAssessmentMetadata : unit -&gt; Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataCollection" Usage="mockableSecurityCenterSubscriptionResource.GetAllSubscriptionAssessmentMetadata " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SubscriptionAssessmentMetadataResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of SubscriptionAssessmentMetadataResources and their operations over a SubscriptionAssessmentMetadataResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutoProvisioningSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingResource&gt; GetAutoProvisioningSetting (string settingName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingResource&gt; GetAutoProvisioningSetting(string settingName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetAutoProvisioningSetting(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutoProvisioningSetting (settingName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AutoProvisioningSettingResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAutoProvisioningSetting : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingResource&gt;&#xA;override this.GetAutoProvisioningSetting : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetAutoProvisioningSetting (settingName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settingName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="settingName"> Auto provisioning setting key. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Details of a specific setting
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/autoProvisioningSettings/{settingName}</description></item><item><term>Operation Id</term><description>AutoProvisioningSettings_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="settingName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="settingName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutoProvisioningSettingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingResource&gt;&gt; GetAutoProvisioningSettingAsync (string settingName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingResource&gt;&gt; GetAutoProvisioningSettingAsync(string settingName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetAutoProvisioningSettingAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutoProvisioningSettingAsync (settingName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AutoProvisioningSettingResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAutoProvisioningSettingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingResource&gt;&gt;&#xA;override this.GetAutoProvisioningSettingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingResource&gt;&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetAutoProvisioningSettingAsync (settingName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settingName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="settingName"> Auto provisioning setting key. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Details of a specific setting
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/autoProvisioningSettings/{settingName}</description></item><item><term>Operation Id</term><description>AutoProvisioningSettings_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="settingName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="settingName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAutoProvisioningSettings">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingCollection GetAutoProvisioningSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingCollection GetAutoProvisioningSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetAutoProvisioningSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutoProvisioningSettings () As AutoProvisioningSettingCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAutoProvisioningSettings : unit -&gt; Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingCollection&#xA;override this.GetAutoProvisioningSettings : unit -&gt; Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingCollection" Usage="mockableSecurityCenterSubscriptionResource.GetAutoProvisioningSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.AutoProvisioningSettingCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AutoProvisioningSettingResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of AutoProvisioningSettingResources and their operations over a AutoProvisioningSettingResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAssessmentAutomations">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource&gt; GetCustomAssessmentAutomations (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource&gt; GetCustomAssessmentAutomations(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetCustomAssessmentAutomations(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAssessmentAutomations (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of CustomAssessmentAutomationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAssessmentAutomations : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource&gt;&#xA;override this.GetCustomAssessmentAutomations : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetCustomAssessmentAutomations cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List custom assessment automations by provided subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/customAssessmentAutomations</description></item><item><term>Operation Id</term><description>CustomAssessmentAutomations_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAssessmentAutomationsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource&gt; GetCustomAssessmentAutomationsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource&gt; GetCustomAssessmentAutomationsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetCustomAssessmentAutomationsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAssessmentAutomationsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of CustomAssessmentAutomationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAssessmentAutomationsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource&gt;&#xA;override this.GetCustomAssessmentAutomationsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetCustomAssessmentAutomationsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List custom assessment automations by provided subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/customAssessmentAutomations</description></item><item><term>Operation Id</term><description>CustomAssessmentAutomations_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.CustomAssessmentAutomationResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomEntityStoreAssignments">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource&gt; GetCustomEntityStoreAssignments (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource&gt; GetCustomEntityStoreAssignments(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetCustomEntityStoreAssignments(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomEntityStoreAssignments (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of CustomEntityStoreAssignmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCustomEntityStoreAssignments : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource&gt;&#xA;override this.GetCustomEntityStoreAssignments : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetCustomEntityStoreAssignments cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List custom entity store assignments by provided subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/customEntityStoreAssignments</description></item><item><term>Operation Id</term><description>CustomEntityStoreAssignments_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomEntityStoreAssignmentsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource&gt; GetCustomEntityStoreAssignmentsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource&gt; GetCustomEntityStoreAssignmentsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetCustomEntityStoreAssignmentsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomEntityStoreAssignmentsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of CustomEntityStoreAssignmentResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCustomEntityStoreAssignmentsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource&gt;&#xA;override this.GetCustomEntityStoreAssignmentsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetCustomEntityStoreAssignmentsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List custom entity store assignments by provided subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/customEntityStoreAssignments</description></item><item><term>Operation Id</term><description>CustomEntityStoreAssignments_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.CustomEntityStoreAssignmentResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDiscoveredSecuritySolutions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.DiscoveredSecuritySolution&gt; GetDiscoveredSecuritySolutions (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.DiscoveredSecuritySolution&gt; GetDiscoveredSecuritySolutions(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetDiscoveredSecuritySolutions(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDiscoveredSecuritySolutions (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DiscoveredSecuritySolution)" />
      <MemberSignature Language="F#" Value="abstract member GetDiscoveredSecuritySolutions : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.DiscoveredSecuritySolution&gt;&#xA;override this.GetDiscoveredSecuritySolutions : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.DiscoveredSecuritySolution&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetDiscoveredSecuritySolutions cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.DiscoveredSecuritySolution&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of discovered Security Solutions for the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/discoveredSecuritySolutions</description></item><item><term>Operation Id</term><description>DiscoveredSecuritySolutions_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.DiscoveredSecuritySolution" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDiscoveredSecuritySolutionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.DiscoveredSecuritySolution&gt; GetDiscoveredSecuritySolutionsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.DiscoveredSecuritySolution&gt; GetDiscoveredSecuritySolutionsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetDiscoveredSecuritySolutionsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDiscoveredSecuritySolutionsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DiscoveredSecuritySolution)" />
      <MemberSignature Language="F#" Value="abstract member GetDiscoveredSecuritySolutionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.DiscoveredSecuritySolution&gt;&#xA;override this.GetDiscoveredSecuritySolutionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.DiscoveredSecuritySolution&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetDiscoveredSecuritySolutionsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.DiscoveredSecuritySolution&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of discovered Security Solutions for the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/discoveredSecuritySolutions</description></item><item><term>Operation Id</term><description>DiscoveredSecuritySolutions_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.DiscoveredSecuritySolution" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExternalSecuritySolutions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.ExternalSecuritySolution&gt; GetExternalSecuritySolutions (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.ExternalSecuritySolution&gt; GetExternalSecuritySolutions(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetExternalSecuritySolutions(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExternalSecuritySolutions (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ExternalSecuritySolution)" />
      <MemberSignature Language="F#" Value="abstract member GetExternalSecuritySolutions : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.ExternalSecuritySolution&gt;&#xA;override this.GetExternalSecuritySolutions : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.ExternalSecuritySolution&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetExternalSecuritySolutions cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.ExternalSecuritySolution&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of external security solutions for the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/externalSecuritySolutions</description></item><item><term>Operation Id</term><description>ExternalSecuritySolutions_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.ExternalSecuritySolution" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExternalSecuritySolutionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.ExternalSecuritySolution&gt; GetExternalSecuritySolutionsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.ExternalSecuritySolution&gt; GetExternalSecuritySolutionsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetExternalSecuritySolutionsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExternalSecuritySolutionsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ExternalSecuritySolution)" />
      <MemberSignature Language="F#" Value="abstract member GetExternalSecuritySolutionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.ExternalSecuritySolution&gt;&#xA;override this.GetExternalSecuritySolutionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.ExternalSecuritySolution&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetExternalSecuritySolutionsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.ExternalSecuritySolution&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of external security solutions for the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/externalSecuritySolutions</description></item><item><term>Operation Id</term><description>ExternalSecuritySolutions_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.ExternalSecuritySolution" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIngestionSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.IngestionSettingResource&gt; GetIngestionSetting (string ingestionSettingName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.IngestionSettingResource&gt; GetIngestionSetting(string ingestionSettingName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetIngestionSetting(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIngestionSetting (ingestionSettingName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IngestionSettingResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIngestionSetting : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.IngestionSettingResource&gt;&#xA;override this.GetIngestionSetting : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.IngestionSettingResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetIngestionSetting (ingestionSettingName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.IngestionSettingResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ingestionSettingName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ingestionSettingName"> Name of the ingestion setting. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Settings for ingesting security data and logs to correlate with resources associated with the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/ingestionSettings/{ingestionSettingName}</description></item><item><term>Operation Id</term><description>IngestionSettings_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ingestionSettingName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ingestionSettingName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIngestionSettingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.IngestionSettingResource&gt;&gt; GetIngestionSettingAsync (string ingestionSettingName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.IngestionSettingResource&gt;&gt; GetIngestionSettingAsync(string ingestionSettingName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetIngestionSettingAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIngestionSettingAsync (ingestionSettingName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IngestionSettingResource))" />
      <MemberSignature Language="F#" Value="abstract member GetIngestionSettingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.IngestionSettingResource&gt;&gt;&#xA;override this.GetIngestionSettingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.IngestionSettingResource&gt;&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetIngestionSettingAsync (ingestionSettingName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.IngestionSettingResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ingestionSettingName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ingestionSettingName"> Name of the ingestion setting. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Settings for ingesting security data and logs to correlate with resources associated with the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/ingestionSettings/{ingestionSettingName}</description></item><item><term>Operation Id</term><description>IngestionSettings_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ingestionSettingName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ingestionSettingName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIngestionSettings">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.IngestionSettingCollection GetIngestionSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.IngestionSettingCollection GetIngestionSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetIngestionSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIngestionSettings () As IngestionSettingCollection" />
      <MemberSignature Language="F#" Value="abstract member GetIngestionSettings : unit -&gt; Azure.ResourceManager.SecurityCenter.IngestionSettingCollection&#xA;override this.GetIngestionSettings : unit -&gt; Azure.ResourceManager.SecurityCenter.IngestionSettingCollection" Usage="mockableSecurityCenterSubscriptionResource.GetIngestionSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.IngestionSettingCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of IngestionSettingResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of IngestionSettingResources and their operations over a IngestionSettingResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIotSecuritySolutions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource&gt; GetIotSecuritySolutions (string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource&gt; GetIotSecuritySolutions(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetIotSecuritySolutions(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotSecuritySolutions (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of IotSecuritySolutionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIotSecuritySolutions : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource&gt;&#xA;override this.GetIotSecuritySolutions : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetIotSecuritySolutions (filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> Filter the IoT Security solution with OData syntax. Supports filtering by iotHubs. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Use this method to get the list of IoT Security solutions by subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/iotSecuritySolutions</description></item><item><term>Operation Id</term><description>IotSecuritySolution_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIotSecuritySolutionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource&gt; GetIotSecuritySolutionsAsync (string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource&gt; GetIotSecuritySolutionsAsync(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetIotSecuritySolutionsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIotSecuritySolutionsAsync (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of IotSecuritySolutionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIotSecuritySolutionsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource&gt;&#xA;override this.GetIotSecuritySolutionsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetIotSecuritySolutionsAsync (filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> Filter the IoT Security solution with OData syntax. Supports filtering by iotHubs. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Use this method to get the list of IoT Security solutions by subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/iotSecuritySolutions</description></item><item><term>Operation Id</term><description>IotSecuritySolution_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.IotSecuritySolutionResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJitNetworkAccessPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt; GetJitNetworkAccessPolicies (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt; GetJitNetworkAccessPolicies(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetJitNetworkAccessPolicies(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJitNetworkAccessPolicies (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of JitNetworkAccessPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetJitNetworkAccessPolicies : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;&#xA;override this.GetJitNetworkAccessPolicies : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetJitNetworkAccessPolicies cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Policies for protecting resources using Just-in-Time access control.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/jitNetworkAccessPolicies</description></item><item><term>Operation Id</term><description>JitNetworkAccessPolicies_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetJitNetworkAccessPoliciesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt; GetJitNetworkAccessPoliciesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt; GetJitNetworkAccessPoliciesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetJitNetworkAccessPoliciesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetJitNetworkAccessPoliciesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of JitNetworkAccessPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetJitNetworkAccessPoliciesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;&#xA;override this.GetJitNetworkAccessPoliciesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetJitNetworkAccessPoliciesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Policies for protecting resources using Just-in-Time access control.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/jitNetworkAccessPolicies</description></item><item><term>Operation Id</term><description>JitNetworkAccessPolicies_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.JitNetworkAccessPolicyResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMdeOnboarding">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.MdeOnboarding&gt; GetMdeOnboarding (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.Models.MdeOnboarding&gt; GetMdeOnboarding(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetMdeOnboarding(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMdeOnboarding (Optional cancellationToken As CancellationToken = Nothing) As Response(Of MdeOnboarding)" />
      <MemberSignature Language="F#" Value="abstract member GetMdeOnboarding : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.MdeOnboarding&gt;&#xA;override this.GetMdeOnboarding : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.MdeOnboarding&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetMdeOnboarding cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.MdeOnboarding&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The default configuration or data needed to onboard the machine to MDE
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/mdeOnboardings/default</description></item><item><term>Operation Id</term><description>MdeOnboardings_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMdeOnboardingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.MdeOnboarding&gt;&gt; GetMdeOnboardingAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.Models.MdeOnboarding&gt;&gt; GetMdeOnboardingAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetMdeOnboardingAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMdeOnboardingAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MdeOnboarding))" />
      <MemberSignature Language="F#" Value="abstract member GetMdeOnboardingAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.MdeOnboarding&gt;&gt;&#xA;override this.GetMdeOnboardingAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.MdeOnboarding&gt;&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetMdeOnboardingAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.Models.MdeOnboarding&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The default configuration or data needed to onboard the machine to MDE
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/mdeOnboardings/default</description></item><item><term>Operation Id</term><description>MdeOnboardings_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMdeOnboardings">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.MdeOnboarding&gt; GetMdeOnboardings (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.MdeOnboarding&gt; GetMdeOnboardings(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetMdeOnboardings(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMdeOnboardings (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of MdeOnboarding)" />
      <MemberSignature Language="F#" Value="abstract member GetMdeOnboardings : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.MdeOnboarding&gt;&#xA;override this.GetMdeOnboardings : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.MdeOnboarding&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetMdeOnboardings cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.MdeOnboarding&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The configuration or data needed to onboard the machine to MDE
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/mdeOnboardings</description></item><item><term>Operation Id</term><description>MdeOnboardings_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.MdeOnboarding" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMdeOnboardingsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.MdeOnboarding&gt; GetMdeOnboardingsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.MdeOnboarding&gt; GetMdeOnboardingsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetMdeOnboardingsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMdeOnboardingsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of MdeOnboarding)" />
      <MemberSignature Language="F#" Value="abstract member GetMdeOnboardingsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.MdeOnboarding&gt;&#xA;override this.GetMdeOnboardingsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.MdeOnboarding&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetMdeOnboardingsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.MdeOnboarding&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            The configuration or data needed to onboard the machine to MDE
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/mdeOnboardings</description></item><item><term>Operation Id</term><description>MdeOnboardings_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.MdeOnboarding" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegulatoryComplianceStandard">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardResource&gt; GetRegulatoryComplianceStandard (string regulatoryComplianceStandardName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardResource&gt; GetRegulatoryComplianceStandard(string regulatoryComplianceStandardName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetRegulatoryComplianceStandard(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRegulatoryComplianceStandard (regulatoryComplianceStandardName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RegulatoryComplianceStandardResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRegulatoryComplianceStandard : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardResource&gt;&#xA;override this.GetRegulatoryComplianceStandard : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetRegulatoryComplianceStandard (regulatoryComplianceStandardName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regulatoryComplianceStandardName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="regulatoryComplianceStandardName"> Name of the regulatory compliance standard object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Supported regulatory compliance details state for selected standard
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/regulatoryComplianceStandards/{regulatoryComplianceStandardName}</description></item><item><term>Operation Id</term><description>RegulatoryComplianceStandards_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="regulatoryComplianceStandardName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="regulatoryComplianceStandardName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRegulatoryComplianceStandardAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardResource&gt;&gt; GetRegulatoryComplianceStandardAsync (string regulatoryComplianceStandardName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardResource&gt;&gt; GetRegulatoryComplianceStandardAsync(string regulatoryComplianceStandardName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetRegulatoryComplianceStandardAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRegulatoryComplianceStandardAsync (regulatoryComplianceStandardName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RegulatoryComplianceStandardResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRegulatoryComplianceStandardAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardResource&gt;&gt;&#xA;override this.GetRegulatoryComplianceStandardAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardResource&gt;&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetRegulatoryComplianceStandardAsync (regulatoryComplianceStandardName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regulatoryComplianceStandardName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="regulatoryComplianceStandardName"> Name of the regulatory compliance standard object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Supported regulatory compliance details state for selected standard
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/regulatoryComplianceStandards/{regulatoryComplianceStandardName}</description></item><item><term>Operation Id</term><description>RegulatoryComplianceStandards_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="regulatoryComplianceStandardName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="regulatoryComplianceStandardName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRegulatoryComplianceStandards">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardCollection GetRegulatoryComplianceStandards ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardCollection GetRegulatoryComplianceStandards() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetRegulatoryComplianceStandards" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRegulatoryComplianceStandards () As RegulatoryComplianceStandardCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRegulatoryComplianceStandards : unit -&gt; Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardCollection&#xA;override this.GetRegulatoryComplianceStandards : unit -&gt; Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardCollection" Usage="mockableSecurityCenterSubscriptionResource.GetRegulatoryComplianceStandards " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.RegulatoryComplianceStandardCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RegulatoryComplianceStandardResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of RegulatoryComplianceStandardResources and their operations over a RegulatoryComplianceStandardResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecureScore">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecureScoreResource&gt; GetSecureScore (string secureScoreName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecureScoreResource&gt; GetSecureScore(string secureScoreName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecureScore(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecureScore (secureScoreName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SecureScoreResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecureScore : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecureScoreResource&gt;&#xA;override this.GetSecureScore : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecureScoreResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecureScore (secureScoreName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecureScoreResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secureScoreName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="secureScoreName"> The initiative name. For the ASC Default initiative, use 'ascScore' as in the sample request below. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get secure score for a specific Microsoft Defender for Cloud initiative within your current scope. For the ASC Default initiative, use 'ascScore'.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/secureScores/{secureScoreName}</description></item><item><term>Operation Id</term><description>SecureScores_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="secureScoreName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="secureScoreName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecureScoreAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecureScoreResource&gt;&gt; GetSecureScoreAsync (string secureScoreName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecureScoreResource&gt;&gt; GetSecureScoreAsync(string secureScoreName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecureScoreAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecureScoreAsync (secureScoreName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SecureScoreResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSecureScoreAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecureScoreResource&gt;&gt;&#xA;override this.GetSecureScoreAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecureScoreResource&gt;&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecureScoreAsync (secureScoreName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecureScoreResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secureScoreName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="secureScoreName"> The initiative name. For the ASC Default initiative, use 'ascScore' as in the sample request below. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get secure score for a specific Microsoft Defender for Cloud initiative within your current scope. For the ASC Default initiative, use 'ascScore'.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/secureScores/{secureScoreName}</description></item><item><term>Operation Id</term><description>SecureScores_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="secureScoreName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="secureScoreName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecureScoreControlDefinitionsBySubscription">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem&gt; GetSecureScoreControlDefinitionsBySubscription (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem&gt; GetSecureScoreControlDefinitionsBySubscription(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecureScoreControlDefinitionsBySubscription(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecureScoreControlDefinitionsBySubscription (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SecureScoreControlDefinitionItem)" />
      <MemberSignature Language="F#" Value="abstract member GetSecureScoreControlDefinitionsBySubscription : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem&gt;&#xA;override this.GetSecureScoreControlDefinitionsBySubscription : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecureScoreControlDefinitionsBySubscription cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            For a specified subscription, list the available security controls, their assessments, and the max score
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/secureScoreControlDefinitions</description></item><item><term>Operation Id</term><description>SecureScoreControlDefinitions_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecureScoreControlDefinitionsBySubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem&gt; GetSecureScoreControlDefinitionsBySubscriptionAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem&gt; GetSecureScoreControlDefinitionsBySubscriptionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecureScoreControlDefinitionsBySubscriptionAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecureScoreControlDefinitionsBySubscriptionAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SecureScoreControlDefinitionItem)" />
      <MemberSignature Language="F#" Value="abstract member GetSecureScoreControlDefinitionsBySubscriptionAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem&gt;&#xA;override this.GetSecureScoreControlDefinitionsBySubscriptionAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecureScoreControlDefinitionsBySubscriptionAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            For a specified subscription, list the available security controls, their assessments, and the max score
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/secureScoreControlDefinitions</description></item><item><term>Operation Id</term><description>SecureScoreControlDefinitions_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDefinitionItem" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecureScoreControls">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDetails&gt; GetSecureScoreControls (Azure.ResourceManager.SecurityCenter.Models.SecurityScoreODataExpand? expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDetails&gt; GetSecureScoreControls(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.SecurityCenter.Models.SecurityScoreODataExpand&gt; expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecureScoreControls(System.Nullable{Azure.ResourceManager.SecurityCenter.Models.SecurityScoreODataExpand},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecureScoreControls (Optional expand As Nullable(Of SecurityScoreODataExpand) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SecureScoreControlDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetSecureScoreControls : Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityScoreODataExpand&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDetails&gt;&#xA;override this.GetSecureScoreControls : Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityScoreODataExpand&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDetails&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecureScoreControls (expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expand" Type="System.Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityScoreODataExpand&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expand"> OData expand. Optional. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get all security controls within a scope
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/secureScoreControls</description></item><item><term>Operation Id</term><description>SecureScoreControls_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDetails" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecureScoreControlsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDetails&gt; GetSecureScoreControlsAsync (Azure.ResourceManager.SecurityCenter.Models.SecurityScoreODataExpand? expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDetails&gt; GetSecureScoreControlsAsync(valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.SecurityCenter.Models.SecurityScoreODataExpand&gt; expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecureScoreControlsAsync(System.Nullable{Azure.ResourceManager.SecurityCenter.Models.SecurityScoreODataExpand},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecureScoreControlsAsync (Optional expand As Nullable(Of SecurityScoreODataExpand) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SecureScoreControlDetails)" />
      <MemberSignature Language="F#" Value="abstract member GetSecureScoreControlsAsync : Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityScoreODataExpand&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDetails&gt;&#xA;override this.GetSecureScoreControlsAsync : Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityScoreODataExpand&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDetails&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecureScoreControlsAsync (expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDetails&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expand" Type="System.Nullable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityScoreODataExpand&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expand"> OData expand. Optional. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get all security controls within a scope
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/secureScoreControls</description></item><item><term>Operation Id</term><description>SecureScoreControls_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.SecureScoreControlDetails" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecureScores">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecureScoreCollection GetSecureScores ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecureScoreCollection GetSecureScores() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecureScores" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecureScores () As SecureScoreCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSecureScores : unit -&gt; Azure.ResourceManager.SecurityCenter.SecureScoreCollection&#xA;override this.GetSecureScores : unit -&gt; Azure.ResourceManager.SecurityCenter.SecureScoreCollection" Usage="mockableSecurityCenterSubscriptionResource.GetSecureScores " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecureScoreCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SecureScoreResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of SecureScoreResources and their operations over a SecureScoreResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityAlertsSuppressionRule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt; GetSecurityAlertsSuppressionRule (string alertsSuppressionRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt; GetSecurityAlertsSuppressionRule(string alertsSuppressionRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecurityAlertsSuppressionRule(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityAlertsSuppressionRule (alertsSuppressionRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SecurityAlertsSuppressionRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityAlertsSuppressionRule : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;&#xA;override this.GetSecurityAlertsSuppressionRule : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecurityAlertsSuppressionRule (alertsSuppressionRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alertsSuppressionRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="alertsSuppressionRuleName"> The unique name of the suppression alert rule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get dismiss rule, with name: {alertsSuppressionRuleName}, for the given subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/alertsSuppressionRules/{alertsSuppressionRuleName}</description></item><item><term>Operation Id</term><description>AlertsSuppressionRules_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="alertsSuppressionRuleName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="alertsSuppressionRuleName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityAlertsSuppressionRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;&gt; GetSecurityAlertsSuppressionRuleAsync (string alertsSuppressionRuleName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;&gt; GetSecurityAlertsSuppressionRuleAsync(string alertsSuppressionRuleName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecurityAlertsSuppressionRuleAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityAlertsSuppressionRuleAsync (alertsSuppressionRuleName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SecurityAlertsSuppressionRuleResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityAlertsSuppressionRuleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;&gt;&#xA;override this.GetSecurityAlertsSuppressionRuleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecurityAlertsSuppressionRuleAsync (alertsSuppressionRuleName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alertsSuppressionRuleName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="alertsSuppressionRuleName"> The unique name of the suppression alert rule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get dismiss rule, with name: {alertsSuppressionRuleName}, for the given subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/alertsSuppressionRules/{alertsSuppressionRuleName}</description></item><item><term>Operation Id</term><description>AlertsSuppressionRules_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="alertsSuppressionRuleName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="alertsSuppressionRuleName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityAlertsSuppressionRules">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleCollection GetSecurityAlertsSuppressionRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleCollection GetSecurityAlertsSuppressionRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecurityAlertsSuppressionRules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityAlertsSuppressionRules () As SecurityAlertsSuppressionRuleCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityAlertsSuppressionRules : unit -&gt; Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleCollection&#xA;override this.GetSecurityAlertsSuppressionRules : unit -&gt; Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleCollection" Usage="mockableSecurityCenterSubscriptionResource.GetSecurityAlertsSuppressionRules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecurityAlertsSuppressionRuleCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SecurityAlertsSuppressionRuleResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of SecurityAlertsSuppressionRuleResources and their operations over a SecurityAlertsSuppressionRuleResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityAutomations">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAutomationResource&gt; GetSecurityAutomations (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAutomationResource&gt; GetSecurityAutomations(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecurityAutomations(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityAutomations (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SecurityAutomationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityAutomations : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAutomationResource&gt;&#xA;override this.GetSecurityAutomations : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAutomationResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecurityAutomations cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAutomationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the security automations in the specified subscription. Use the 'nextLink' property in the response to get the next page of security automations for the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/automations</description></item><item><term>Operation Id</term><description>Automations_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAutomationResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityAutomationsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAutomationResource&gt; GetSecurityAutomationsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityAutomationResource&gt; GetSecurityAutomationsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecurityAutomationsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityAutomationsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SecurityAutomationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityAutomationsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAutomationResource&gt;&#xA;override this.GetSecurityAutomationsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAutomationResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecurityAutomationsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityAutomationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the security automations in the specified subscription. Use the 'nextLink' property in the response to get the next page of security automations for the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/automations</description></item><item><term>Operation Id</term><description>Automations_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityAutomationResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityCenterLocation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCenterLocationResource&gt; GetSecurityCenterLocation (Azure.Core.AzureLocation ascLocation, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityCenterLocationResource&gt; GetSecurityCenterLocation(valuetype Azure.Core.AzureLocation ascLocation, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecurityCenterLocation(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityCenterLocation (ascLocation As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SecurityCenterLocationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityCenterLocation : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCenterLocationResource&gt;&#xA;override this.GetSecurityCenterLocation : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCenterLocationResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecurityCenterLocation (ascLocation, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCenterLocationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Details of a specific location
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}</description></item><item><term>Operation Id</term><description>Locations_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityCenterLocationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCenterLocationResource&gt;&gt; GetSecurityCenterLocationAsync (Azure.Core.AzureLocation ascLocation, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityCenterLocationResource&gt;&gt; GetSecurityCenterLocationAsync(valuetype Azure.Core.AzureLocation ascLocation, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecurityCenterLocationAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityCenterLocationAsync (ascLocation As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SecurityCenterLocationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityCenterLocationAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCenterLocationResource&gt;&gt;&#xA;override this.GetSecurityCenterLocationAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCenterLocationResource&gt;&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecurityCenterLocationAsync (ascLocation, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCenterLocationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascLocation" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ascLocation"> The location where ASC stores the data of the subscription. can be retrieved from Get locations. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Details of a specific location
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}</description></item><item><term>Operation Id</term><description>Locations_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityCenterLocations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecurityCenterLocationCollection GetSecurityCenterLocations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecurityCenterLocationCollection GetSecurityCenterLocations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecurityCenterLocations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityCenterLocations () As SecurityCenterLocationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityCenterLocations : unit -&gt; Azure.ResourceManager.SecurityCenter.SecurityCenterLocationCollection&#xA;override this.GetSecurityCenterLocations : unit -&gt; Azure.ResourceManager.SecurityCenter.SecurityCenterLocationCollection" Usage="mockableSecurityCenterSubscriptionResource.GetSecurityCenterLocations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecurityCenterLocationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SecurityCenterLocationResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of SecurityCenterLocationResources and their operations over a SecurityCenterLocationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityCenterPricing">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCenterPricingResource&gt; GetSecurityCenterPricing (string pricingName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityCenterPricingResource&gt; GetSecurityCenterPricing(string pricingName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecurityCenterPricing(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityCenterPricing (pricingName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SecurityCenterPricingResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityCenterPricing : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCenterPricingResource&gt;&#xA;override this.GetSecurityCenterPricing : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCenterPricingResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecurityCenterPricing (pricingName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCenterPricingResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pricingName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pricingName"> name of the pricing configuration. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a provided Microsoft Defender for Cloud pricing configuration in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/pricings/{pricingName}</description></item><item><term>Operation Id</term><description>Pricings_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pricingName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pricingName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityCenterPricingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCenterPricingResource&gt;&gt; GetSecurityCenterPricingAsync (string pricingName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityCenterPricingResource&gt;&gt; GetSecurityCenterPricingAsync(string pricingName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecurityCenterPricingAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityCenterPricingAsync (pricingName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SecurityCenterPricingResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityCenterPricingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCenterPricingResource&gt;&gt;&#xA;override this.GetSecurityCenterPricingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCenterPricingResource&gt;&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecurityCenterPricingAsync (pricingName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCenterPricingResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pricingName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="pricingName"> name of the pricing configuration. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a provided Microsoft Defender for Cloud pricing configuration in the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/pricings/{pricingName}</description></item><item><term>Operation Id</term><description>Pricings_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pricingName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pricingName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityCenterPricings">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecurityCenterPricingCollection GetSecurityCenterPricings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecurityCenterPricingCollection GetSecurityCenterPricings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecurityCenterPricings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityCenterPricings () As SecurityCenterPricingCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityCenterPricings : unit -&gt; Azure.ResourceManager.SecurityCenter.SecurityCenterPricingCollection&#xA;override this.GetSecurityCenterPricings : unit -&gt; Azure.ResourceManager.SecurityCenter.SecurityCenterPricingCollection" Usage="mockableSecurityCenterSubscriptionResource.GetSecurityCenterPricings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecurityCenterPricingCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SecurityCenterPricingResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of SecurityCenterPricingResources and their operations over a SecurityCenterPricingResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityCloudConnector">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorResource&gt; GetSecurityCloudConnector (string connectorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorResource&gt; GetSecurityCloudConnector(string connectorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecurityCloudConnector(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityCloudConnector (connectorName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SecurityCloudConnectorResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityCloudConnector : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorResource&gt;&#xA;override this.GetSecurityCloudConnector : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecurityCloudConnector (connectorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectorName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connectorName"> Name of the cloud account connector. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Details of a specific cloud account connector
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/connectors/{connectorName}</description></item><item><term>Operation Id</term><description>Connectors_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectorName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectorName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityCloudConnectorAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorResource&gt;&gt; GetSecurityCloudConnectorAsync (string connectorName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorResource&gt;&gt; GetSecurityCloudConnectorAsync(string connectorName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecurityCloudConnectorAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityCloudConnectorAsync (connectorName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SecurityCloudConnectorResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityCloudConnectorAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorResource&gt;&gt;&#xA;override this.GetSecurityCloudConnectorAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorResource&gt;&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecurityCloudConnectorAsync (connectorName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectorName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connectorName"> Name of the cloud account connector. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Details of a specific cloud account connector
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/connectors/{connectorName}</description></item><item><term>Operation Id</term><description>Connectors_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connectorName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectorName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityCloudConnectors">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorCollection GetSecurityCloudConnectors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorCollection GetSecurityCloudConnectors() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecurityCloudConnectors" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityCloudConnectors () As SecurityCloudConnectorCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityCloudConnectors : unit -&gt; Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorCollection&#xA;override this.GetSecurityCloudConnectors : unit -&gt; Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorCollection" Usage="mockableSecurityCenterSubscriptionResource.GetSecurityCloudConnectors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecurityCloudConnectorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SecurityCloudConnectorResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of SecurityCloudConnectorResources and their operations over a SecurityCloudConnectorResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityConnectors">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityConnectorResource&gt; GetSecurityConnectors (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityConnectorResource&gt; GetSecurityConnectors(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecurityConnectors(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityConnectors (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SecurityConnectorResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityConnectors : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityConnectorResource&gt;&#xA;override this.GetSecurityConnectors : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityConnectorResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecurityConnectors cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityConnectorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the security connectors in the specified subscription. Use the 'nextLink' property in the response to get the next page of security connectors for the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/securityConnectors</description></item><item><term>Operation Id</term><description>SecurityConnectors_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityConnectorResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityConnectorsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityConnectorResource&gt; GetSecurityConnectorsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityConnectorResource&gt; GetSecurityConnectorsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecurityConnectorsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityConnectorsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SecurityConnectorResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityConnectorsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityConnectorResource&gt;&#xA;override this.GetSecurityConnectorsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityConnectorResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecurityConnectorsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityConnectorResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the security connectors in the specified subscription. Use the 'nextLink' property in the response to get the next page of security connectors for the specified subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/securityConnectors</description></item><item><term>Operation Id</term><description>SecurityConnectors_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityConnectorResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityContact">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityContactResource&gt; GetSecurityContact (string securityContactName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityContactResource&gt; GetSecurityContact(string securityContactName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecurityContact(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityContact (securityContactName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SecurityContactResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityContact : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityContactResource&gt;&#xA;override this.GetSecurityContact : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityContactResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecurityContact (securityContactName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityContactResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityContactName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="securityContactName"> Name of the security contact object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Default Security contact configurations for the subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/securityContacts/{securityContactName}</description></item><item><term>Operation Id</term><description>SecurityContacts_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securityContactName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="securityContactName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityContactAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityContactResource&gt;&gt; GetSecurityContactAsync (string securityContactName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityContactResource&gt;&gt; GetSecurityContactAsync(string securityContactName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecurityContactAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityContactAsync (securityContactName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SecurityContactResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityContactAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityContactResource&gt;&gt;&#xA;override this.GetSecurityContactAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityContactResource&gt;&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecurityContactAsync (securityContactName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityContactResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityContactName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="securityContactName"> Name of the security contact object. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Default Security contact configurations for the subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/securityContacts/{securityContactName}</description></item><item><term>Operation Id</term><description>SecurityContacts_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securityContactName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="securityContactName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityContacts">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecurityContactCollection GetSecurityContacts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecurityContactCollection GetSecurityContacts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecurityContacts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityContacts () As SecurityContactCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityContacts : unit -&gt; Azure.ResourceManager.SecurityCenter.SecurityContactCollection&#xA;override this.GetSecurityContacts : unit -&gt; Azure.ResourceManager.SecurityCenter.SecurityContactCollection" Usage="mockableSecurityCenterSubscriptionResource.GetSecurityContacts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecurityContactCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SecurityContactResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of SecurityContactResources and their operations over a SecurityContactResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecuritySetting">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecuritySettingResource&gt; GetSecuritySetting (Azure.ResourceManager.SecurityCenter.Models.SecuritySettingName settingName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecuritySettingResource&gt; GetSecuritySetting(valuetype Azure.ResourceManager.SecurityCenter.Models.SecuritySettingName settingName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecuritySetting(Azure.ResourceManager.SecurityCenter.Models.SecuritySettingName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecuritySetting (settingName As SecuritySettingName, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SecuritySettingResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecuritySetting : Azure.ResourceManager.SecurityCenter.Models.SecuritySettingName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecuritySettingResource&gt;&#xA;override this.GetSecuritySetting : Azure.ResourceManager.SecurityCenter.Models.SecuritySettingName * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecuritySettingResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecuritySetting (settingName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecuritySettingResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settingName" Type="Azure.ResourceManager.SecurityCenter.Models.SecuritySettingName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="settingName"> The name of the setting. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Settings of different configurations in Microsoft Defender for Cloud
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/settings/{settingName}</description></item><item><term>Operation Id</term><description>Settings_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecuritySettingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecuritySettingResource&gt;&gt; GetSecuritySettingAsync (Azure.ResourceManager.SecurityCenter.Models.SecuritySettingName settingName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecuritySettingResource&gt;&gt; GetSecuritySettingAsync(valuetype Azure.ResourceManager.SecurityCenter.Models.SecuritySettingName settingName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecuritySettingAsync(Azure.ResourceManager.SecurityCenter.Models.SecuritySettingName,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecuritySettingAsync (settingName As SecuritySettingName, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SecuritySettingResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSecuritySettingAsync : Azure.ResourceManager.SecurityCenter.Models.SecuritySettingName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecuritySettingResource&gt;&gt;&#xA;override this.GetSecuritySettingAsync : Azure.ResourceManager.SecurityCenter.Models.SecuritySettingName * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecuritySettingResource&gt;&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecuritySettingAsync (settingName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecuritySettingResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settingName" Type="Azure.ResourceManager.SecurityCenter.Models.SecuritySettingName" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="settingName"> The name of the setting. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Settings of different configurations in Microsoft Defender for Cloud
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/settings/{settingName}</description></item><item><term>Operation Id</term><description>Settings_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecuritySettings">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecuritySettingCollection GetSecuritySettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecuritySettingCollection GetSecuritySettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecuritySettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecuritySettings () As SecuritySettingCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSecuritySettings : unit -&gt; Azure.ResourceManager.SecurityCenter.SecuritySettingCollection&#xA;override this.GetSecuritySettings : unit -&gt; Azure.ResourceManager.SecurityCenter.SecuritySettingCollection" Usage="mockableSecurityCenterSubscriptionResource.GetSecuritySettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecuritySettingCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SecuritySettingResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of SecuritySettingResources and their operations over a SecuritySettingResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecuritySolutions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolution&gt; GetSecuritySolutions (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.SecuritySolution&gt; GetSecuritySolutions(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecuritySolutions(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecuritySolutions (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SecuritySolution)" />
      <MemberSignature Language="F#" Value="abstract member GetSecuritySolutions : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolution&gt;&#xA;override this.GetSecuritySolutions : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolution&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecuritySolutions cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolution&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of Security Solutions for the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/securitySolutions</description></item><item><term>Operation Id</term><description>SecuritySolutions_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.SecuritySolution" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecuritySolutionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolution&gt; GetSecuritySolutionsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.SecuritySolution&gt; GetSecuritySolutionsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecuritySolutionsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecuritySolutionsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SecuritySolution)" />
      <MemberSignature Language="F#" Value="abstract member GetSecuritySolutionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolution&gt;&#xA;override this.GetSecuritySolutionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolution&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecuritySolutionsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecuritySolution&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of Security Solutions for the subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/securitySolutions</description></item><item><term>Operation Id</term><description>SecuritySolutions_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.SecuritySolution" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityWorkspaceSetting">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingResource&gt; GetSecurityWorkspaceSetting (string workspaceSettingName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingResource&gt; GetSecurityWorkspaceSetting(string workspaceSettingName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecurityWorkspaceSetting(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityWorkspaceSetting (workspaceSettingName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SecurityWorkspaceSettingResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityWorkspaceSetting : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingResource&gt;&#xA;override this.GetSecurityWorkspaceSetting : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecurityWorkspaceSetting (workspaceSettingName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workspaceSettingName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workspaceSettingName"> Name of the security setting. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Settings about where we should store your security data and logs. If the result is empty, it means that no custom-workspace configuration was set
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/workspaceSettings/{workspaceSettingName}</description></item><item><term>Operation Id</term><description>WorkspaceSettings_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="workspaceSettingName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="workspaceSettingName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityWorkspaceSettingAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingResource&gt;&gt; GetSecurityWorkspaceSettingAsync (string workspaceSettingName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingResource&gt;&gt; GetSecurityWorkspaceSettingAsync(string workspaceSettingName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecurityWorkspaceSettingAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityWorkspaceSettingAsync (workspaceSettingName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SecurityWorkspaceSettingResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityWorkspaceSettingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingResource&gt;&gt;&#xA;override this.GetSecurityWorkspaceSettingAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingResource&gt;&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSecurityWorkspaceSettingAsync (workspaceSettingName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workspaceSettingName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="workspaceSettingName"> Name of the security setting. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Settings about where we should store your security data and logs. If the result is empty, it means that no custom-workspace configuration was set
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/workspaceSettings/{workspaceSettingName}</description></item><item><term>Operation Id</term><description>WorkspaceSettings_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="workspaceSettingName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="workspaceSettingName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityWorkspaceSettings">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingCollection GetSecurityWorkspaceSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingCollection GetSecurityWorkspaceSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSecurityWorkspaceSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityWorkspaceSettings () As SecurityWorkspaceSettingCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityWorkspaceSettings : unit -&gt; Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingCollection&#xA;override this.GetSecurityWorkspaceSettings : unit -&gt; Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingCollection" Usage="mockableSecurityCenterSubscriptionResource.GetSecurityWorkspaceSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SecurityWorkspaceSettingCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SecurityWorkspaceSettingResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of SecurityWorkspaceSettingResources and their operations over a SecurityWorkspaceSettingResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSoftwareInventories">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource&gt; GetSoftwareInventories (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource&gt; GetSoftwareInventories(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSoftwareInventories(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSoftwareInventories (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SoftwareInventoryResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSoftwareInventories : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource&gt;&#xA;override this.GetSoftwareInventories : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSoftwareInventories cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the software inventory of all virtual machines in the subscriptions.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/softwareInventories</description></item><item><term>Operation Id</term><description>SoftwareInventories_ListBySubscription</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSoftwareInventoriesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource&gt; GetSoftwareInventoriesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource&gt; GetSoftwareInventoriesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSoftwareInventoriesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSoftwareInventoriesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SoftwareInventoryResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSoftwareInventoriesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource&gt;&#xA;override this.GetSoftwareInventoriesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSoftwareInventoriesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the software inventory of all virtual machines in the subscriptions.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/softwareInventories</description></item><item><term>Operation Id</term><description>SoftwareInventories_ListBySubscription</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SoftwareInventoryResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionAssessmentMetadata">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataResource&gt; GetSubscriptionAssessmentMetadata (string assessmentMetadataName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataResource&gt; GetSubscriptionAssessmentMetadata(string assessmentMetadataName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSubscriptionAssessmentMetadata(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionAssessmentMetadata (assessmentMetadataName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SubscriptionAssessmentMetadataResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionAssessmentMetadata : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataResource&gt;&#xA;override this.GetSubscriptionAssessmentMetadata : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSubscriptionAssessmentMetadata (assessmentMetadataName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assessmentMetadataName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assessmentMetadataName"> The Assessment Key - Unique key for the assessment type. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get metadata information on an assessment type in a specific subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/assessmentMetadata/{assessmentMetadataName}</description></item><item><term>Operation Id</term><description>AssessmentsMetadata_GetInSubscription</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assessmentMetadataName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assessmentMetadataName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionAssessmentMetadataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataResource&gt;&gt; GetSubscriptionAssessmentMetadataAsync (string assessmentMetadataName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataResource&gt;&gt; GetSubscriptionAssessmentMetadataAsync(string assessmentMetadataName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSubscriptionAssessmentMetadataAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionAssessmentMetadataAsync (assessmentMetadataName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SubscriptionAssessmentMetadataResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionAssessmentMetadataAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataResource&gt;&gt;&#xA;override this.GetSubscriptionAssessmentMetadataAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataResource&gt;&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSubscriptionAssessmentMetadataAsync (assessmentMetadataName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionAssessmentMetadataResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assessmentMetadataName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assessmentMetadataName"> The Assessment Key - Unique key for the assessment type. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get metadata information on an assessment type in a specific subscription
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/assessmentMetadata/{assessmentMetadataName}</description></item><item><term>Operation Id</term><description>AssessmentsMetadata_GetInSubscription</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assessmentMetadataName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="assessmentMetadataName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionGovernanceRule">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionGovernanceRuleResource&gt; GetSubscriptionGovernanceRule (string ruleId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SubscriptionGovernanceRuleResource&gt; GetSubscriptionGovernanceRule(string ruleId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSubscriptionGovernanceRule(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionGovernanceRule (ruleId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SubscriptionGovernanceRuleResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionGovernanceRule : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionGovernanceRuleResource&gt;&#xA;override this.GetSubscriptionGovernanceRule : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionGovernanceRuleResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSubscriptionGovernanceRule (ruleId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This method is obsolete and will be removed in a future release.", false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is obsolete and will be removed in a future release.", false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionGovernanceRuleResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruleId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ruleId"> The security GovernanceRule key - unique key for the standard GovernanceRule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a specific governanceRule for the requested scope by ruleId
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/governanceRules/{ruleId}</description></item><item><term>Operation Id</term><description>GovernanceRules_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionGovernanceRuleAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionGovernanceRuleResource&gt;&gt; GetSubscriptionGovernanceRuleAsync (string ruleId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SubscriptionGovernanceRuleResource&gt;&gt; GetSubscriptionGovernanceRuleAsync(string ruleId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSubscriptionGovernanceRuleAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionGovernanceRuleAsync (ruleId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SubscriptionGovernanceRuleResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionGovernanceRuleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionGovernanceRuleResource&gt;&gt;&#xA;override this.GetSubscriptionGovernanceRuleAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionGovernanceRuleResource&gt;&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSubscriptionGovernanceRuleAsync (ruleId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This method is obsolete and will be removed in a future release.", false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is obsolete and will be removed in a future release.", false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionGovernanceRuleResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruleId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ruleId"> The security GovernanceRule key - unique key for the standard GovernanceRule. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a specific governanceRule for the requested scope by ruleId
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/governanceRules/{ruleId}</description></item><item><term>Operation Id</term><description>GovernanceRules_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionGovernanceRules">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SubscriptionGovernanceRuleCollection GetSubscriptionGovernanceRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SubscriptionGovernanceRuleCollection GetSubscriptionGovernanceRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSubscriptionGovernanceRules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionGovernanceRules () As SubscriptionGovernanceRuleCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionGovernanceRules : unit -&gt; Azure.ResourceManager.SecurityCenter.SubscriptionGovernanceRuleCollection&#xA;override this.GetSubscriptionGovernanceRules : unit -&gt; Azure.ResourceManager.SecurityCenter.SubscriptionGovernanceRuleCollection" Usage="mockableSecurityCenterSubscriptionResource.GetSubscriptionGovernanceRules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This method is obsolete and will be removed in a future release.", false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is obsolete and will be removed in a future release.", false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SubscriptionGovernanceRuleCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SubscriptionGovernanceRuleResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of SubscriptionGovernanceRuleResources and their operations over a SubscriptionGovernanceRuleResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionSecurityApplication">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationResource&gt; GetSubscriptionSecurityApplication (string applicationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationResource&gt; GetSubscriptionSecurityApplication(string applicationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSubscriptionSecurityApplication(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionSecurityApplication (applicationId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SubscriptionSecurityApplicationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionSecurityApplication : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationResource&gt;&#xA;override this.GetSubscriptionSecurityApplication : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSubscriptionSecurityApplication (applicationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationId"> The security Application key - unique key for the standard application. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a specific application for the requested scope by applicationId
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/applications/{applicationId}</description></item><item><term>Operation Id</term><description>Application_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="applicationId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionSecurityApplicationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationResource&gt;&gt; GetSubscriptionSecurityApplicationAsync (string applicationId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationResource&gt;&gt; GetSubscriptionSecurityApplicationAsync(string applicationId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSubscriptionSecurityApplicationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionSecurityApplicationAsync (applicationId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SubscriptionSecurityApplicationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionSecurityApplicationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationResource&gt;&gt;&#xA;override this.GetSubscriptionSecurityApplicationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationResource&gt;&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetSubscriptionSecurityApplicationAsync (applicationId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationId"> The security Application key - unique key for the standard application. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a specific application for the requested scope by applicationId
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/applications/{applicationId}</description></item><item><term>Operation Id</term><description>Application_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="applicationId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionSecurityApplications">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationCollection GetSubscriptionSecurityApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationCollection GetSubscriptionSecurityApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetSubscriptionSecurityApplications" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionSecurityApplications () As SubscriptionSecurityApplicationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionSecurityApplications : unit -&gt; Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationCollection&#xA;override this.GetSubscriptionSecurityApplications : unit -&gt; Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationCollection" Usage="mockableSecurityCenterSubscriptionResource.GetSubscriptionSecurityApplications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.SecurityCenter.SubscriptionSecurityApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SubscriptionSecurityApplicationResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of SubscriptionSecurityApplicationResources and their operations over a SubscriptionSecurityApplicationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTasks">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityTaskData&gt; GetTasks (string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityTaskData&gt; GetTasks(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetTasks(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTasks (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SecurityTaskData)" />
      <MemberSignature Language="F#" Value="abstract member GetTasks : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityTaskData&gt;&#xA;override this.GetTasks : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityTaskData&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetTasks (filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.SecurityTaskData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> OData filter. Optional. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Recommended tasks that will help improve the security of the subscription proactively
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/tasks</description></item><item><term>Operation Id</term><description>Tasks_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityTaskData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTasksAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityTaskData&gt; GetTasksAsync (string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.SecurityTaskData&gt; GetTasksAsync(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetTasksAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTasksAsync (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SecurityTaskData)" />
      <MemberSignature Language="F#" Value="abstract member GetTasksAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityTaskData&gt;&#xA;override this.GetTasksAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityTaskData&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetTasksAsync (filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.SecurityTaskData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> OData filter. Optional. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Recommended tasks that will help improve the security of the subscription proactively
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/tasks</description></item><item><term>Operation Id</term><description>Tasks_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.SecurityTaskData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTopologies">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityTopologyResource&gt; GetTopologies (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.SecurityTopologyResource&gt; GetTopologies(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetTopologies(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTopologies (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SecurityTopologyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetTopologies : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityTopologyResource&gt;&#xA;override this.GetTopologies : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityTopologyResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetTopologies cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityTopologyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list that allows to build a topology view of a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/topologies</description></item><item><term>Operation Id</term><description>Topology_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.SecurityTopologyResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTopologiesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityTopologyResource&gt; GetTopologiesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SecurityCenter.Models.SecurityTopologyResource&gt; GetTopologiesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SecurityCenter.Mocking.MockableSecurityCenterSubscriptionResource.GetTopologiesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTopologiesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SecurityTopologyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetTopologiesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityTopologyResource&gt;&#xA;override this.GetTopologiesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityTopologyResource&gt;" Usage="mockableSecurityCenterSubscriptionResource.GetTopologiesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SecurityCenter</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SecurityCenter.Models.SecurityTopologyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list that allows to build a topology view of a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Security/topologies</description></item><item><term>Operation Id</term><description>Topology_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SecurityCenter.Models.SecurityTopologyResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
