<Type Name="ResponseBufferingPolicy" FullName="System.ClientModel.Primitives.Pipeline.ResponseBufferingPolicy">
  <TypeSignature Language="C#" Value="public class ResponseBufferingPolicy : System.ClientModel.Primitives.Pipeline.IPipelinePolicy&lt;System.ClientModel.Primitives.PipelineMessage&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResponseBufferingPolicy extends System.Object implements class System.ClientModel.Primitives.Pipeline.IPipelinePolicy`1&lt;class System.ClientModel.Primitives.PipelineMessage&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ClientModel.Primitives.Pipeline.ResponseBufferingPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class ResponseBufferingPolicy&#xA;Implements IPipelinePolicy(Of PipelineMessage)" />
  <TypeSignature Language="F#" Value="type ResponseBufferingPolicy = class&#xA;    interface IPipelinePolicy&lt;PipelineMessage&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ClientModel</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.Pipeline.IPipelinePolicy&lt;System.ClientModel.Primitives.PipelineMessage&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Pipeline policy to buffer response content or add a timeout to response content managed by the client
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResponseBufferingPolicy (TimeSpan networkTimeout, bool bufferResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.TimeSpan networkTimeout, bool bufferResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.Pipeline.ResponseBufferingPolicy.#ctor(System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (networkTimeout As TimeSpan, bufferResponse As Boolean)" />
      <MemberSignature Language="F#" Value="new System.ClientModel.Primitives.Pipeline.ResponseBufferingPolicy : TimeSpan * bool -&gt; System.ClientModel.Primitives.Pipeline.ResponseBufferingPolicy" Usage="new System.ClientModel.Primitives.Pipeline.ResponseBufferingPolicy (networkTimeout, bufferResponse)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="networkTimeout" Type="System.TimeSpan" />
        <Parameter Name="bufferResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="networkTimeout">To be added.</param>
        <param name="bufferResponse">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferResponse">
      <MemberSignature Language="C#" Value="protected virtual bool BufferResponse (System.ClientModel.Primitives.PipelineMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool BufferResponse(class System.ClientModel.Primitives.PipelineMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.Pipeline.ResponseBufferingPolicy.BufferResponse(System.ClientModel.Primitives.PipelineMessage)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BufferResponse (message As PipelineMessage) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member BufferResponse : System.ClientModel.Primitives.PipelineMessage -&gt; bool&#xA;override this.BufferResponse : System.ClientModel.Primitives.PipelineMessage -&gt; bool" Usage="responseBufferingPolicy.BufferResponse message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ClientModel.Primitives.PipelineMessage" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public void Process (System.ClientModel.Primitives.PipelineMessage message, System.ClientModel.Primitives.Pipeline.IPipelineEnumerator pipeline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Process(class System.ClientModel.Primitives.PipelineMessage message, class System.ClientModel.Primitives.Pipeline.IPipelineEnumerator pipeline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.Pipeline.ResponseBufferingPolicy.Process(System.ClientModel.Primitives.PipelineMessage,System.ClientModel.Primitives.Pipeline.IPipelineEnumerator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Process (message As PipelineMessage, pipeline As IPipelineEnumerator)" />
      <MemberSignature Language="F#" Value="abstract member Process : System.ClientModel.Primitives.PipelineMessage * System.ClientModel.Primitives.Pipeline.IPipelineEnumerator -&gt; unit&#xA;override this.Process : System.ClientModel.Primitives.PipelineMessage * System.ClientModel.Primitives.Pipeline.IPipelineEnumerator -&gt; unit" Usage="responseBufferingPolicy.Process (message, pipeline)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.Pipeline.IPipelinePolicy`1.Process(`0,System.ClientModel.Primitives.Pipeline.IPipelineEnumerator)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ClientModel.Primitives.PipelineMessage" />
        <Parameter Name="pipeline" Type="System.ClientModel.Primitives.Pipeline.IPipelineEnumerator" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="pipeline">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask ProcessAsync (System.ClientModel.Primitives.PipelineMessage message, System.ClientModel.Primitives.Pipeline.IPipelineEnumerator pipeline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask ProcessAsync(class System.ClientModel.Primitives.PipelineMessage message, class System.ClientModel.Primitives.Pipeline.IPipelineEnumerator pipeline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.Pipeline.ResponseBufferingPolicy.ProcessAsync(System.ClientModel.Primitives.PipelineMessage,System.ClientModel.Primitives.Pipeline.IPipelineEnumerator)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessAsync (message As PipelineMessage, pipeline As IPipelineEnumerator) As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member ProcessAsync : System.ClientModel.Primitives.PipelineMessage * System.ClientModel.Primitives.Pipeline.IPipelineEnumerator -&gt; System.Threading.Tasks.ValueTask&#xA;override this.ProcessAsync : System.ClientModel.Primitives.PipelineMessage * System.ClientModel.Primitives.Pipeline.IPipelineEnumerator -&gt; System.Threading.Tasks.ValueTask" Usage="responseBufferingPolicy.ProcessAsync (message, pipeline)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.Pipeline.IPipelinePolicy`1.ProcessAsync(`0,System.ClientModel.Primitives.Pipeline.IPipelineEnumerator)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ClientModel.Primitives.PipelineMessage" />
        <Parameter Name="pipeline" Type="System.ClientModel.Primitives.Pipeline.IPipelineEnumerator" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="pipeline">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReadTimeoutStream">
      <MemberSignature Language="C#" Value="protected virtual void SetReadTimeoutStream (System.ClientModel.Primitives.PipelineMessage message, System.IO.Stream responseContentStream, TimeSpan networkTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetReadTimeoutStream(class System.ClientModel.Primitives.PipelineMessage message, class System.IO.Stream responseContentStream, valuetype System.TimeSpan networkTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.Pipeline.ResponseBufferingPolicy.SetReadTimeoutStream(System.ClientModel.Primitives.PipelineMessage,System.IO.Stream,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetReadTimeoutStream (message As PipelineMessage, responseContentStream As Stream, networkTimeout As TimeSpan)" />
      <MemberSignature Language="F#" Value="abstract member SetReadTimeoutStream : System.ClientModel.Primitives.PipelineMessage * System.IO.Stream * TimeSpan -&gt; unit&#xA;override this.SetReadTimeoutStream : System.ClientModel.Primitives.PipelineMessage * System.IO.Stream * TimeSpan -&gt; unit" Usage="responseBufferingPolicy.SetReadTimeoutStream (message, responseContentStream, networkTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ClientModel.Primitives.PipelineMessage" />
        <Parameter Name="responseContentStream" Type="System.IO.Stream" />
        <Parameter Name="networkTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="responseContentStream">To be added.</param>
        <param name="networkTimeout">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetNetworkTimeoutOverride">
      <MemberSignature Language="C#" Value="protected virtual bool TryGetNetworkTimeoutOverride (System.ClientModel.Primitives.PipelineMessage message, out TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryGetNetworkTimeoutOverride(class System.ClientModel.Primitives.PipelineMessage message, [out] valuetype System.TimeSpan&amp; timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.Pipeline.ResponseBufferingPolicy.TryGetNetworkTimeoutOverride(System.ClientModel.Primitives.PipelineMessage,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TryGetNetworkTimeoutOverride (message As PipelineMessage, ByRef timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryGetNetworkTimeoutOverride : System.ClientModel.Primitives.PipelineMessage * TimeSpan -&gt; bool&#xA;override this.TryGetNetworkTimeoutOverride : System.ClientModel.Primitives.PipelineMessage * TimeSpan -&gt; bool" Usage="responseBufferingPolicy.TryGetNetworkTimeoutOverride (message, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ClientModel.Primitives.PipelineMessage" />
        <Parameter Name="timeout" Type="System.TimeSpan" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
