<Type Name="MessagePipeline" FullName="System.ClientModel.Primitives.Pipeline.MessagePipeline">
  <TypeSignature Language="C#" Value="public class MessagePipeline : System.ClientModel.Primitives.Pipeline.Pipeline&lt;System.ClientModel.Primitives.PipelineMessage&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessagePipeline extends System.ClientModel.Primitives.Pipeline.Pipeline`1&lt;class System.ClientModel.Primitives.PipelineMessage&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ClientModel.Primitives.Pipeline.MessagePipeline" />
  <TypeSignature Language="VB.NET" Value="Public Class MessagePipeline&#xA;Inherits Pipeline(Of PipelineMessage)" />
  <TypeSignature Language="F#" Value="type MessagePipeline = class&#xA;    inherit Pipeline&lt;PipelineMessage&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ClientModel</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ClientModel.Primitives.Pipeline.Pipeline&lt;System.ClientModel.Primitives.PipelineMessage&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TMessage">System.ClientModel.Primitives.PipelineMessage</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessagePipeline (System.ClientModel.Primitives.Pipeline.PipelineTransport&lt;System.ClientModel.Primitives.PipelineMessage&gt; transport, ReadOnlyMemory&lt;System.ClientModel.Primitives.Pipeline.IPipelinePolicy&lt;System.ClientModel.Primitives.PipelineMessage&gt;&gt; policies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ClientModel.Primitives.Pipeline.PipelineTransport`1&lt;class System.ClientModel.Primitives.PipelineMessage&gt; transport, valuetype System.ReadOnlyMemory`1&lt;class System.ClientModel.Primitives.Pipeline.IPipelinePolicy`1&lt;class System.ClientModel.Primitives.PipelineMessage&gt;&gt; policies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.Pipeline.MessagePipeline.#ctor(System.ClientModel.Primitives.Pipeline.PipelineTransport{System.ClientModel.Primitives.PipelineMessage},System.ReadOnlyMemory{System.ClientModel.Primitives.Pipeline.IPipelinePolicy{System.ClientModel.Primitives.PipelineMessage}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transport As PipelineTransport(Of PipelineMessage), policies As ReadOnlyMemory(Of IPipelinePolicy(Of PipelineMessage)))" />
      <MemberSignature Language="F#" Value="new System.ClientModel.Primitives.Pipeline.MessagePipeline : System.ClientModel.Primitives.Pipeline.PipelineTransport&lt;System.ClientModel.Primitives.PipelineMessage&gt; * ReadOnlyMemory&lt;System.ClientModel.Primitives.Pipeline.IPipelinePolicy&lt;System.ClientModel.Primitives.PipelineMessage&gt;&gt; -&gt; System.ClientModel.Primitives.Pipeline.MessagePipeline" Usage="new System.ClientModel.Primitives.Pipeline.MessagePipeline (transport, policies)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transport" Type="System.ClientModel.Primitives.Pipeline.PipelineTransport&lt;System.ClientModel.Primitives.PipelineMessage&gt;" />
        <Parameter Name="policies" Type="System.ReadOnlyMemory&lt;System.ClientModel.Primitives.Pipeline.IPipelinePolicy&lt;System.ClientModel.Primitives.PipelineMessage&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="transport">To be added.</param>
        <param name="policies">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ClientModel.Primitives.Pipeline.MessagePipeline Create (System.ClientModel.RequestOptions options, params System.ClientModel.Primitives.Pipeline.IPipelinePolicy&lt;System.ClientModel.Primitives.PipelineMessage&gt;[] perTryPolicies);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ClientModel.Primitives.Pipeline.MessagePipeline Create(class System.ClientModel.RequestOptions options, class System.ClientModel.Primitives.Pipeline.IPipelinePolicy`1&lt;class System.ClientModel.Primitives.PipelineMessage&gt;[] perTryPolicies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.Pipeline.MessagePipeline.Create(System.ClientModel.RequestOptions,System.ClientModel.Primitives.Pipeline.IPipelinePolicy{System.ClientModel.Primitives.PipelineMessage}[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (options As RequestOptions, ParamArray perTryPolicies As IPipelinePolicy(Of PipelineMessage)()) As MessagePipeline" />
      <MemberSignature Language="F#" Value="static member Create : System.ClientModel.RequestOptions * System.ClientModel.Primitives.Pipeline.IPipelinePolicy&lt;System.ClientModel.Primitives.PipelineMessage&gt;[] -&gt; System.ClientModel.Primitives.Pipeline.MessagePipeline" Usage="System.ClientModel.Primitives.Pipeline.MessagePipeline.Create (options, perTryPolicies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.Primitives.Pipeline.MessagePipeline</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.RequestOptions" />
        <Parameter Name="perTryPolicies" Type="System.ClientModel.Primitives.Pipeline.IPipelinePolicy&lt;System.ClientModel.Primitives.PipelineMessage&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <param name="perTryPolicies">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.ClientModel.Primitives.Pipeline.MessagePipeline Create (System.ClientModel.RequestOptions options, ReadOnlySpan&lt;System.ClientModel.Primitives.Pipeline.IPipelinePolicy&lt;System.ClientModel.Primitives.PipelineMessage&gt;&gt; perCallPolicies, ReadOnlySpan&lt;System.ClientModel.Primitives.Pipeline.IPipelinePolicy&lt;System.ClientModel.Primitives.PipelineMessage&gt;&gt; perTryPolicies);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ClientModel.Primitives.Pipeline.MessagePipeline Create(class System.ClientModel.RequestOptions options, valuetype System.ReadOnlySpan`1&lt;class System.ClientModel.Primitives.Pipeline.IPipelinePolicy`1&lt;class System.ClientModel.Primitives.PipelineMessage&gt;&gt; perCallPolicies, valuetype System.ReadOnlySpan`1&lt;class System.ClientModel.Primitives.Pipeline.IPipelinePolicy`1&lt;class System.ClientModel.Primitives.PipelineMessage&gt;&gt; perTryPolicies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.Pipeline.MessagePipeline.Create(System.ClientModel.RequestOptions,System.ReadOnlySpan{System.ClientModel.Primitives.Pipeline.IPipelinePolicy{System.ClientModel.Primitives.PipelineMessage}},System.ReadOnlySpan{System.ClientModel.Primitives.Pipeline.IPipelinePolicy{System.ClientModel.Primitives.PipelineMessage}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (options As RequestOptions, perCallPolicies As ReadOnlySpan(Of IPipelinePolicy(Of PipelineMessage)), perTryPolicies As ReadOnlySpan(Of IPipelinePolicy(Of PipelineMessage))) As MessagePipeline" />
      <MemberSignature Language="F#" Value="static member Create : System.ClientModel.RequestOptions * ReadOnlySpan&lt;System.ClientModel.Primitives.Pipeline.IPipelinePolicy&lt;System.ClientModel.Primitives.PipelineMessage&gt;&gt; * ReadOnlySpan&lt;System.ClientModel.Primitives.Pipeline.IPipelinePolicy&lt;System.ClientModel.Primitives.PipelineMessage&gt;&gt; -&gt; System.ClientModel.Primitives.Pipeline.MessagePipeline" Usage="System.ClientModel.Primitives.Pipeline.MessagePipeline.Create (options, perCallPolicies, perTryPolicies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.Primitives.Pipeline.MessagePipeline</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.RequestOptions" />
        <Parameter Name="perCallPolicies" Type="System.ReadOnlySpan&lt;System.ClientModel.Primitives.Pipeline.IPipelinePolicy&lt;System.ClientModel.Primitives.PipelineMessage&gt;&gt;" />
        <Parameter Name="perTryPolicies" Type="System.ReadOnlySpan&lt;System.ClientModel.Primitives.Pipeline.IPipelinePolicy&lt;System.ClientModel.Primitives.PipelineMessage&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <param name="perCallPolicies">To be added.</param>
        <param name="perTryPolicies">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessage">
      <MemberSignature Language="C#" Value="public override System.ClientModel.Primitives.PipelineMessage CreateMessage (System.ClientModel.RequestOptions options, System.ClientModel.Primitives.ResponseErrorClassifier classifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ClientModel.Primitives.PipelineMessage CreateMessage(class System.ClientModel.RequestOptions options, class System.ClientModel.Primitives.ResponseErrorClassifier classifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.Pipeline.MessagePipeline.CreateMessage(System.ClientModel.RequestOptions,System.ClientModel.Primitives.ResponseErrorClassifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateMessage (options As RequestOptions, classifier As ResponseErrorClassifier) As PipelineMessage" />
      <MemberSignature Language="F#" Value="override this.CreateMessage : System.ClientModel.RequestOptions * System.ClientModel.Primitives.ResponseErrorClassifier -&gt; System.ClientModel.Primitives.PipelineMessage" Usage="messagePipeline.CreateMessage (options, classifier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ClientModel.Primitives.PipelineMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.RequestOptions" />
        <Parameter Name="classifier" Type="System.ClientModel.Primitives.ResponseErrorClassifier" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <param name="classifier">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public override void Send (System.ClientModel.Primitives.PipelineMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Send(class System.ClientModel.Primitives.PipelineMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.Pipeline.MessagePipeline.Send(System.ClientModel.Primitives.PipelineMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Send (message As PipelineMessage)" />
      <MemberSignature Language="F#" Value="override this.Send : System.ClientModel.Primitives.PipelineMessage -&gt; unit" Usage="messagePipeline.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ClientModel.Primitives.PipelineMessage" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask SendAsync (System.ClientModel.Primitives.PipelineMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask SendAsync(class System.ClientModel.Primitives.PipelineMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.Pipeline.MessagePipeline.SendAsync(System.ClientModel.Primitives.PipelineMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SendAsync (message As PipelineMessage) As ValueTask" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.ClientModel.Primitives.PipelineMessage -&gt; System.Threading.Tasks.ValueTask" Usage="messagePipeline.SendAsync message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ClientModel.Primitives.PipelineMessage" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
