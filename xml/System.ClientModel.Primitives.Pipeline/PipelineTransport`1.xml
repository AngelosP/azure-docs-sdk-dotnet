<Type Name="PipelineTransport&lt;TMessage&gt;" FullName="System.ClientModel.Primitives.Pipeline.PipelineTransport&lt;TMessage&gt;">
  <TypeSignature Language="C#" Value="public abstract class PipelineTransport&lt;TMessage&gt; : System.ClientModel.Primitives.Pipeline.IPipelinePolicy&lt;TMessage&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PipelineTransport`1&lt;TMessage&gt; extends System.Object implements class System.ClientModel.Primitives.Pipeline.IPipelinePolicy`1&lt;!TMessage&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ClientModel.Primitives.Pipeline.PipelineTransport`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PipelineTransport(Of TMessage)&#xA;Implements IPipelinePolicy(Of TMessage)" />
  <TypeSignature Language="F#" Value="type PipelineTransport&lt;'Message&gt; = class&#xA;    interface IPipelinePolicy&lt;'Message&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ClientModel</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TMessage" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.Pipeline.IPipelinePolicy&lt;TMessage&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TMessage">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PipelineTransport ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.Pipeline.PipelineTransport`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessage">
      <MemberSignature Language="C#" Value="public abstract TMessage CreateMessage (System.ClientModel.RequestOptions options, System.ClientModel.Primitives.ResponseErrorClassifier classifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TMessage CreateMessage(class System.ClientModel.RequestOptions options, class System.ClientModel.Primitives.ResponseErrorClassifier classifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.Pipeline.PipelineTransport`1.CreateMessage(System.ClientModel.RequestOptions,System.ClientModel.Primitives.ResponseErrorClassifier)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateMessage (options As RequestOptions, classifier As ResponseErrorClassifier) As TMessage" />
      <MemberSignature Language="F#" Value="abstract member CreateMessage : System.ClientModel.RequestOptions * System.ClientModel.Primitives.ResponseErrorClassifier -&gt; 'Message" Usage="pipelineTransport.CreateMessage (options, classifier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.RequestOptions" />
        <Parameter Name="classifier" Type="System.ClientModel.Primitives.ResponseErrorClassifier" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <param name="classifier">To be added.</param>
        <summary>
            TBD: needed for inheritdoc.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public abstract void Process (TMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Process(!TMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.Pipeline.PipelineTransport`1.Process(`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Process (message As TMessage)" />
      <MemberSignature Language="F#" Value="abstract member Process : 'Message -&gt; unit" Usage="pipelineTransport.Process message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="TMessage" />
      </Parameters>
      <Docs>
        <param name="message" />
        <summary>
            TBD: needed for inheritdoc.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public void Process (TMessage message, System.ClientModel.Primitives.Pipeline.IPipelineEnumerator pipeline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Process(!TMessage message, class System.ClientModel.Primitives.Pipeline.IPipelineEnumerator pipeline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.Pipeline.PipelineTransport`1.Process(`0,System.ClientModel.Primitives.Pipeline.IPipelineEnumerator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Process (message As TMessage, pipeline As IPipelineEnumerator)" />
      <MemberSignature Language="F#" Value="abstract member Process : 'Message * System.ClientModel.Primitives.Pipeline.IPipelineEnumerator -&gt; unit&#xA;override this.Process : 'Message * System.ClientModel.Primitives.Pipeline.IPipelineEnumerator -&gt; unit" Usage="pipelineTransport.Process (message, pipeline)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.Pipeline.IPipelinePolicy`1.Process(`0,System.ClientModel.Primitives.Pipeline.IPipelineEnumerator)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="TMessage" />
        <Parameter Name="pipeline" Type="System.ClientModel.Primitives.Pipeline.IPipelineEnumerator" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="pipeline">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.ValueTask ProcessAsync (TMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask ProcessAsync(!TMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.Pipeline.PipelineTransport`1.ProcessAsync(`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ProcessAsync (message As TMessage) As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member ProcessAsync : 'Message -&gt; System.Threading.Tasks.ValueTask" Usage="pipelineTransport.ProcessAsync message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="TMessage" />
      </Parameters>
      <Docs>
        <param name="message" />
        <summary>
            TBD: needed for inheritdoc.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask ProcessAsync (TMessage message, System.ClientModel.Primitives.Pipeline.IPipelineEnumerator pipeline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask ProcessAsync(!TMessage message, class System.ClientModel.Primitives.Pipeline.IPipelineEnumerator pipeline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.Pipeline.PipelineTransport`1.ProcessAsync(`0,System.ClientModel.Primitives.Pipeline.IPipelineEnumerator)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessAsync (message As TMessage, pipeline As IPipelineEnumerator) As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member ProcessAsync : 'Message * System.ClientModel.Primitives.Pipeline.IPipelineEnumerator -&gt; System.Threading.Tasks.ValueTask&#xA;override this.ProcessAsync : 'Message * System.ClientModel.Primitives.Pipeline.IPipelineEnumerator -&gt; System.Threading.Tasks.ValueTask" Usage="pipelineTransport.ProcessAsync (message, pipeline)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.Pipeline.IPipelinePolicy`1.ProcessAsync(`0,System.ClientModel.Primitives.Pipeline.IPipelineEnumerator)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="TMessage" />
        <Parameter Name="pipeline" Type="System.ClientModel.Primitives.Pipeline.IPipelineEnumerator" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="pipeline">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
