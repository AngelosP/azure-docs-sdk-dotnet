<Type Name="KeyCredentialPolicy" FullName="System.ClientModel.Primitives.Pipeline.KeyCredentialPolicy">
  <TypeSignature Language="C#" Value="public class KeyCredentialPolicy : System.ClientModel.Primitives.Pipeline.IPipelinePolicy&lt;System.ClientModel.Primitives.PipelineMessage&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyCredentialPolicy extends System.Object implements class System.ClientModel.Primitives.Pipeline.IPipelinePolicy`1&lt;class System.ClientModel.Primitives.PipelineMessage&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ClientModel.Primitives.Pipeline.KeyCredentialPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyCredentialPolicy&#xA;Implements IPipelinePolicy(Of PipelineMessage)" />
  <TypeSignature Language="F#" Value="type KeyCredentialPolicy = class&#xA;    interface IPipelinePolicy&lt;PipelineMessage&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ClientModel</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.Pipeline.IPipelinePolicy&lt;System.ClientModel.Primitives.PipelineMessage&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyCredentialPolicy (System.ClientModel.KeyCredential credential, string name, string? prefix = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ClientModel.KeyCredential credential, string name, string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.Pipeline.KeyCredentialPolicy.#ctor(System.ClientModel.KeyCredential,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (credential As KeyCredential, name As String, Optional prefix As String = Nothing)" />
      <MemberSignature Language="F#" Value="new System.ClientModel.Primitives.Pipeline.KeyCredentialPolicy : System.ClientModel.KeyCredential * string * string -&gt; System.ClientModel.Primitives.Pipeline.KeyCredentialPolicy" Usage="new System.ClientModel.Primitives.Pipeline.KeyCredentialPolicy (credential, name, prefix)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="credential" Type="System.ClientModel.KeyCredential" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="credential">The <see cref="T:System.ClientModel.KeyCredential" /> used to authenticate requests.</param>
        <param name="name">The name of the key header used for the credential.</param>
        <param name="prefix">The prefix to apply before the credential key. For example, a prefix of "SharedAccessKey" would result in
            a value of "SharedAccessKey {credential.Key}" being stamped on the request header with header key of <paramref name="name" />.</param>
        <summary>
            Initializes a new instance of the <see cref="T:System.ClientModel.Primitives.Pipeline.KeyCredentialPolicy" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public void Process (System.ClientModel.Primitives.PipelineMessage message, System.ClientModel.Primitives.Pipeline.IPipelineEnumerator pipeline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Process(class System.ClientModel.Primitives.PipelineMessage message, class System.ClientModel.Primitives.Pipeline.IPipelineEnumerator pipeline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.Pipeline.KeyCredentialPolicy.Process(System.ClientModel.Primitives.PipelineMessage,System.ClientModel.Primitives.Pipeline.IPipelineEnumerator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Process (message As PipelineMessage, pipeline As IPipelineEnumerator)" />
      <MemberSignature Language="F#" Value="abstract member Process : System.ClientModel.Primitives.PipelineMessage * System.ClientModel.Primitives.Pipeline.IPipelineEnumerator -&gt; unit&#xA;override this.Process : System.ClientModel.Primitives.PipelineMessage * System.ClientModel.Primitives.Pipeline.IPipelineEnumerator -&gt; unit" Usage="keyCredentialPolicy.Process (message, pipeline)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.Pipeline.IPipelinePolicy`1.Process(`0,System.ClientModel.Primitives.Pipeline.IPipelineEnumerator)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ClientModel.Primitives.PipelineMessage" />
        <Parameter Name="pipeline" Type="System.ClientModel.Primitives.Pipeline.IPipelineEnumerator" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="pipeline">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask ProcessAsync (System.ClientModel.Primitives.PipelineMessage message, System.ClientModel.Primitives.Pipeline.IPipelineEnumerator pipeline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask ProcessAsync(class System.ClientModel.Primitives.PipelineMessage message, class System.ClientModel.Primitives.Pipeline.IPipelineEnumerator pipeline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ClientModel.Primitives.Pipeline.KeyCredentialPolicy.ProcessAsync(System.ClientModel.Primitives.PipelineMessage,System.ClientModel.Primitives.Pipeline.IPipelineEnumerator)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessAsync (message As PipelineMessage, pipeline As IPipelineEnumerator) As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member ProcessAsync : System.ClientModel.Primitives.PipelineMessage * System.ClientModel.Primitives.Pipeline.IPipelineEnumerator -&gt; System.Threading.Tasks.ValueTask&#xA;override this.ProcessAsync : System.ClientModel.Primitives.PipelineMessage * System.ClientModel.Primitives.Pipeline.IPipelineEnumerator -&gt; System.Threading.Tasks.ValueTask" Usage="keyCredentialPolicy.ProcessAsync (message, pipeline)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.Pipeline.IPipelinePolicy`1.ProcessAsync(`0,System.ClientModel.Primitives.Pipeline.IPipelineEnumerator)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ClientModel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ClientModel.Primitives.PipelineMessage" />
        <Parameter Name="pipeline" Type="System.ClientModel.Primitives.Pipeline.IPipelineEnumerator" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="pipeline">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
