<Type Name="NetworkResourceGroupMockingExtension" FullName="Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension">
  <TypeSignature Language="C#" Value="public class NetworkResourceGroupMockingExtension : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetworkResourceGroupMockingExtension extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension" />
  <TypeSignature Language="VB.NET" Value="Public Class NetworkResourceGroupMockingExtension&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type NetworkResourceGroupMockingExtension = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
    <AssemblyVersion>1.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroupResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NetworkResourceGroupMockingExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckPrivateLinkServiceVisibilityByResourceGroupPrivateLinkService">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Network.Models.PrivateLinkServiceVisibility&gt; CheckPrivateLinkServiceVisibilityByResourceGroupPrivateLinkService (Azure.WaitUntil waitUntil, Azure.Core.AzureLocation location, Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest checkPrivateLinkServiceVisibilityRequest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Network.Models.PrivateLinkServiceVisibility&gt; CheckPrivateLinkServiceVisibilityByResourceGroupPrivateLinkService(valuetype Azure.WaitUntil waitUntil, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest checkPrivateLinkServiceVisibilityRequest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.CheckPrivateLinkServiceVisibilityByResourceGroupPrivateLinkService(Azure.WaitUntil,Azure.Core.AzureLocation,Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckPrivateLinkServiceVisibilityByResourceGroupPrivateLinkService (waitUntil As WaitUntil, location As AzureLocation, checkPrivateLinkServiceVisibilityRequest As CheckPrivateLinkServiceVisibilityRequest, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of PrivateLinkServiceVisibility)" />
      <MemberSignature Language="F#" Value="abstract member CheckPrivateLinkServiceVisibilityByResourceGroupPrivateLinkService : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Network.Models.PrivateLinkServiceVisibility&gt;&#xA;override this.CheckPrivateLinkServiceVisibilityByResourceGroupPrivateLinkService : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Network.Models.PrivateLinkServiceVisibility&gt;" Usage="networkResourceGroupMockingExtension.CheckPrivateLinkServiceVisibilityByResourceGroupPrivateLinkService (waitUntil, location, checkPrivateLinkServiceVisibilityRequest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Network.Models.PrivateLinkServiceVisibility&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="checkPrivateLinkServiceVisibilityRequest" Type="Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="location"> The location of the domain name. </param>
        <param name="checkPrivateLinkServiceVisibilityRequest"> The request body of CheckPrivateLinkService API call. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks whether the subscription is visible to private link service in the specified resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/locations/{location}/checkPrivateLinkServiceVisibility</description></item><item><term>Operation Id</term><description>PrivateLinkServices_CheckPrivateLinkServiceVisibilityByResourceGroup</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="checkPrivateLinkServiceVisibilityRequest" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckPrivateLinkServiceVisibilityByResourceGroupPrivateLinkServiceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Network.Models.PrivateLinkServiceVisibility&gt;&gt; CheckPrivateLinkServiceVisibilityByResourceGroupPrivateLinkServiceAsync (Azure.WaitUntil waitUntil, Azure.Core.AzureLocation location, Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest checkPrivateLinkServiceVisibilityRequest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Network.Models.PrivateLinkServiceVisibility&gt;&gt; CheckPrivateLinkServiceVisibilityByResourceGroupPrivateLinkServiceAsync(valuetype Azure.WaitUntil waitUntil, valuetype Azure.Core.AzureLocation location, class Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest checkPrivateLinkServiceVisibilityRequest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.CheckPrivateLinkServiceVisibilityByResourceGroupPrivateLinkServiceAsync(Azure.WaitUntil,Azure.Core.AzureLocation,Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckPrivateLinkServiceVisibilityByResourceGroupPrivateLinkServiceAsync (waitUntil As WaitUntil, location As AzureLocation, checkPrivateLinkServiceVisibilityRequest As CheckPrivateLinkServiceVisibilityRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of PrivateLinkServiceVisibility))" />
      <MemberSignature Language="F#" Value="abstract member CheckPrivateLinkServiceVisibilityByResourceGroupPrivateLinkServiceAsync : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Network.Models.PrivateLinkServiceVisibility&gt;&gt;&#xA;override this.CheckPrivateLinkServiceVisibilityByResourceGroupPrivateLinkServiceAsync : Azure.WaitUntil * Azure.Core.AzureLocation * Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Network.Models.PrivateLinkServiceVisibility&gt;&gt;" Usage="networkResourceGroupMockingExtension.CheckPrivateLinkServiceVisibilityByResourceGroupPrivateLinkServiceAsync (waitUntil, location, checkPrivateLinkServiceVisibilityRequest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Network.Models.PrivateLinkServiceVisibility&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="checkPrivateLinkServiceVisibilityRequest" Type="Azure.ResourceManager.Network.Models.CheckPrivateLinkServiceVisibilityRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="location"> The location of the domain name. </param>
        <param name="checkPrivateLinkServiceVisibilityRequest"> The request body of CheckPrivateLinkService API call. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks whether the subscription is visible to private link service in the specified resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/locations/{location}/checkPrivateLinkServiceVisibility</description></item><item><term>Operation Id</term><description>PrivateLinkServices_CheckPrivateLinkServiceVisibilityByResourceGroup</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="checkPrivateLinkServiceVisibilityRequest" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationGateway">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.ApplicationGatewayResource&gt; GetApplicationGateway (string applicationGatewayName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.ApplicationGatewayResource&gt; GetApplicationGateway(string applicationGatewayName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetApplicationGateway(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationGateway (applicationGatewayName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApplicationGatewayResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationGateway : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.ApplicationGatewayResource&gt;&#xA;override this.GetApplicationGateway : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.ApplicationGatewayResource&gt;" Usage="networkResourceGroupMockingExtension.GetApplicationGateway (applicationGatewayName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.ApplicationGatewayResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationGatewayName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationGatewayName"> The name of the application gateway. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified application gateway.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}</description></item><item><term>Operation Id</term><description>ApplicationGateways_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="applicationGatewayName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationGatewayName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationGatewayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ApplicationGatewayResource&gt;&gt; GetApplicationGatewayAsync (string applicationGatewayName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.ApplicationGatewayResource&gt;&gt; GetApplicationGatewayAsync(string applicationGatewayName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetApplicationGatewayAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationGatewayAsync (applicationGatewayName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApplicationGatewayResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationGatewayAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ApplicationGatewayResource&gt;&gt;&#xA;override this.GetApplicationGatewayAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ApplicationGatewayResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetApplicationGatewayAsync (applicationGatewayName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ApplicationGatewayResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationGatewayName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationGatewayName"> The name of the application gateway. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified application gateway.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}</description></item><item><term>Operation Id</term><description>ApplicationGateways_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="applicationGatewayName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationGatewayName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationGateways">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ApplicationGatewayCollection GetApplicationGateways ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ApplicationGatewayCollection GetApplicationGateways() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetApplicationGateways" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationGateways () As ApplicationGatewayCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationGateways : unit -&gt; Azure.ResourceManager.Network.ApplicationGatewayCollection&#xA;override this.GetApplicationGateways : unit -&gt; Azure.ResourceManager.Network.ApplicationGatewayCollection" Usage="networkResourceGroupMockingExtension.GetApplicationGateways " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ApplicationGatewayCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApplicationGatewayResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ApplicationGatewayResources and their operations over a ApplicationGatewayResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationSecurityGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.ApplicationSecurityGroupResource&gt; GetApplicationSecurityGroup (string applicationSecurityGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.ApplicationSecurityGroupResource&gt; GetApplicationSecurityGroup(string applicationSecurityGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetApplicationSecurityGroup(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationSecurityGroup (applicationSecurityGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApplicationSecurityGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationSecurityGroup : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.ApplicationSecurityGroupResource&gt;&#xA;override this.GetApplicationSecurityGroup : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.ApplicationSecurityGroupResource&gt;" Usage="networkResourceGroupMockingExtension.GetApplicationSecurityGroup (applicationSecurityGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.ApplicationSecurityGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationSecurityGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationSecurityGroupName"> The name of the application security group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about the specified application security group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}</description></item><item><term>Operation Id</term><description>ApplicationSecurityGroups_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="applicationSecurityGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationSecurityGroupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationSecurityGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ApplicationSecurityGroupResource&gt;&gt; GetApplicationSecurityGroupAsync (string applicationSecurityGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.ApplicationSecurityGroupResource&gt;&gt; GetApplicationSecurityGroupAsync(string applicationSecurityGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetApplicationSecurityGroupAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationSecurityGroupAsync (applicationSecurityGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApplicationSecurityGroupResource))" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationSecurityGroupAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ApplicationSecurityGroupResource&gt;&gt;&#xA;override this.GetApplicationSecurityGroupAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ApplicationSecurityGroupResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetApplicationSecurityGroupAsync (applicationSecurityGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ApplicationSecurityGroupResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationSecurityGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="applicationSecurityGroupName"> The name of the application security group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about the specified application security group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}</description></item><item><term>Operation Id</term><description>ApplicationSecurityGroups_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="applicationSecurityGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationSecurityGroupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationSecurityGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ApplicationSecurityGroupCollection GetApplicationSecurityGroups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ApplicationSecurityGroupCollection GetApplicationSecurityGroups() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetApplicationSecurityGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationSecurityGroups () As ApplicationSecurityGroupCollection" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationSecurityGroups : unit -&gt; Azure.ResourceManager.Network.ApplicationSecurityGroupCollection&#xA;override this.GetApplicationSecurityGroups : unit -&gt; Azure.ResourceManager.Network.ApplicationSecurityGroupCollection" Usage="networkResourceGroupMockingExtension.GetApplicationSecurityGroups " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ApplicationSecurityGroupCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ApplicationSecurityGroupResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ApplicationSecurityGroupResources and their operations over a ApplicationSecurityGroupResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutoApprovedPrivateLinkServicesByResourceGroupPrivateLinkServices">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService&gt; GetAutoApprovedPrivateLinkServicesByResourceGroupPrivateLinkServices (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService&gt; GetAutoApprovedPrivateLinkServicesByResourceGroupPrivateLinkServices(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetAutoApprovedPrivateLinkServicesByResourceGroupPrivateLinkServices(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutoApprovedPrivateLinkServicesByResourceGroupPrivateLinkServices (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AutoApprovedPrivateLinkService)" />
      <MemberSignature Language="F#" Value="abstract member GetAutoApprovedPrivateLinkServicesByResourceGroupPrivateLinkServices : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService&gt;&#xA;override this.GetAutoApprovedPrivateLinkServicesByResourceGroupPrivateLinkServices : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService&gt;" Usage="networkResourceGroupMockingExtension.GetAutoApprovedPrivateLinkServicesByResourceGroupPrivateLinkServices (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the domain name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns all of the private link service ids that can be linked to a Private Endpoint with auto approved in this subscription in this region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/locations/{location}/autoApprovedPrivateLinkServices</description></item><item><term>Operation Id</term><description>PrivateLinkServices_ListAutoApprovedPrivateLinkServicesByResourceGroup</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutoApprovedPrivateLinkServicesByResourceGroupPrivateLinkServicesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService&gt; GetAutoApprovedPrivateLinkServicesByResourceGroupPrivateLinkServicesAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService&gt; GetAutoApprovedPrivateLinkServicesByResourceGroupPrivateLinkServicesAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetAutoApprovedPrivateLinkServicesByResourceGroupPrivateLinkServicesAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutoApprovedPrivateLinkServicesByResourceGroupPrivateLinkServicesAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AutoApprovedPrivateLinkService)" />
      <MemberSignature Language="F#" Value="abstract member GetAutoApprovedPrivateLinkServicesByResourceGroupPrivateLinkServicesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService&gt;&#xA;override this.GetAutoApprovedPrivateLinkServicesByResourceGroupPrivateLinkServicesAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService&gt;" Usage="networkResourceGroupMockingExtension.GetAutoApprovedPrivateLinkServicesByResourceGroupPrivateLinkServicesAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the domain name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns all of the private link service ids that can be linked to a Private Endpoint with auto approved in this subscription in this region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/locations/{location}/autoApprovedPrivateLinkServices</description></item><item><term>Operation Id</term><description>PrivateLinkServices_ListAutoApprovedPrivateLinkServicesByResourceGroup</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.Models.AutoApprovedPrivateLinkService" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailablePrivateEndpointTypesByResourceGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType&gt; GetAvailablePrivateEndpointTypesByResourceGroup (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType&gt; GetAvailablePrivateEndpointTypesByResourceGroup(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetAvailablePrivateEndpointTypesByResourceGroup(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailablePrivateEndpointTypesByResourceGroup (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AvailablePrivateEndpointType)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailablePrivateEndpointTypesByResourceGroup : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType&gt;&#xA;override this.GetAvailablePrivateEndpointTypesByResourceGroup : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType&gt;" Usage="networkResourceGroupMockingExtension.GetAvailablePrivateEndpointTypesByResourceGroup (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the domain name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns all of the resource types that can be linked to a Private Endpoint in this subscription in this region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/locations/{location}/availablePrivateEndpointTypes</description></item><item><term>Operation Id</term><description>AvailablePrivateEndpointTypes_ListByResourceGroup</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailablePrivateEndpointTypesByResourceGroupAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType&gt; GetAvailablePrivateEndpointTypesByResourceGroupAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType&gt; GetAvailablePrivateEndpointTypesByResourceGroupAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetAvailablePrivateEndpointTypesByResourceGroupAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailablePrivateEndpointTypesByResourceGroupAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AvailablePrivateEndpointType)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailablePrivateEndpointTypesByResourceGroupAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType&gt;&#xA;override this.GetAvailablePrivateEndpointTypesByResourceGroupAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType&gt;" Usage="networkResourceGroupMockingExtension.GetAvailablePrivateEndpointTypesByResourceGroupAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the domain name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns all of the resource types that can be linked to a Private Endpoint in this subscription in this region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/locations/{location}/availablePrivateEndpointTypes</description></item><item><term>Operation Id</term><description>AvailablePrivateEndpointTypes_ListByResourceGroup</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.Models.AvailablePrivateEndpointType" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableResourceGroupDelegations">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailableDelegation&gt; GetAvailableResourceGroupDelegations (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.Models.AvailableDelegation&gt; GetAvailableResourceGroupDelegations(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetAvailableResourceGroupDelegations(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableResourceGroupDelegations (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AvailableDelegation)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableResourceGroupDelegations : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailableDelegation&gt;&#xA;override this.GetAvailableResourceGroupDelegations : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailableDelegation&gt;" Usage="networkResourceGroupMockingExtension.GetAvailableResourceGroupDelegations (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailableDelegation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the domain name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all of the available subnet delegations for this resource group in this region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/locations/{location}/availableDelegations</description></item><item><term>Operation Id</term><description>AvailableResourceGroupDelegations_List</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.Models.AvailableDelegation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableResourceGroupDelegationsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailableDelegation&gt; GetAvailableResourceGroupDelegationsAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.Models.AvailableDelegation&gt; GetAvailableResourceGroupDelegationsAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetAvailableResourceGroupDelegationsAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableResourceGroupDelegationsAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AvailableDelegation)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableResourceGroupDelegationsAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailableDelegation&gt;&#xA;override this.GetAvailableResourceGroupDelegationsAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailableDelegation&gt;" Usage="networkResourceGroupMockingExtension.GetAvailableResourceGroupDelegationsAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailableDelegation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location of the domain name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all of the available subnet delegations for this resource group in this region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/locations/{location}/availableDelegations</description></item><item><term>Operation Id</term><description>AvailableResourceGroupDelegations_List</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.Models.AvailableDelegation" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableServiceAliasesByResourceGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailableServiceAlias&gt; GetAvailableServiceAliasesByResourceGroup (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Network.Models.AvailableServiceAlias&gt; GetAvailableServiceAliasesByResourceGroup(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetAvailableServiceAliasesByResourceGroup(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableServiceAliasesByResourceGroup (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AvailableServiceAlias)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableServiceAliasesByResourceGroup : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailableServiceAlias&gt;&#xA;override this.GetAvailableServiceAliasesByResourceGroup : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailableServiceAlias&gt;" Usage="networkResourceGroupMockingExtension.GetAvailableServiceAliasesByResourceGroup (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Network.Models.AvailableServiceAlias&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all available service aliases for this resource group in this region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/locations/{location}/availableServiceAliases</description></item><item><term>Operation Id</term><description>AvailableServiceAliases_ListByResourceGroup</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Network.Models.AvailableServiceAlias" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableServiceAliasesByResourceGroupAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailableServiceAlias&gt; GetAvailableServiceAliasesByResourceGroupAsync (Azure.Core.AzureLocation location, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Network.Models.AvailableServiceAlias&gt; GetAvailableServiceAliasesByResourceGroupAsync(valuetype Azure.Core.AzureLocation location, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetAvailableServiceAliasesByResourceGroupAsync(Azure.Core.AzureLocation,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAvailableServiceAliasesByResourceGroupAsync (location As AzureLocation, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AvailableServiceAlias)" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableServiceAliasesByResourceGroupAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailableServiceAlias&gt;&#xA;override this.GetAvailableServiceAliasesByResourceGroupAsync : Azure.Core.AzureLocation * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailableServiceAlias&gt;" Usage="networkResourceGroupMockingExtension.GetAvailableServiceAliasesByResourceGroupAsync (location, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Network.Models.AvailableServiceAlias&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Azure.Core.AzureLocation" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="location"> The location. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all available service aliases for this resource group in this region.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/locations/{location}/availableServiceAliases</description></item><item><term>Operation Id</term><description>AvailableServiceAliases_ListByResourceGroup</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Network.Models.AvailableServiceAlias" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAzureFirewall">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.AzureFirewallResource&gt; GetAzureFirewall (string azureFirewallName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.AzureFirewallResource&gt; GetAzureFirewall(string azureFirewallName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetAzureFirewall(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureFirewall (azureFirewallName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AzureFirewallResource)" />
      <MemberSignature Language="F#" Value="abstract member GetAzureFirewall : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.AzureFirewallResource&gt;&#xA;override this.GetAzureFirewall : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.AzureFirewallResource&gt;" Usage="networkResourceGroupMockingExtension.GetAzureFirewall (azureFirewallName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.AzureFirewallResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="azureFirewallName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="azureFirewallName"> The name of the Azure Firewall. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Azure Firewall.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}</description></item><item><term>Operation Id</term><description>AzureFirewalls_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="azureFirewallName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="azureFirewallName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAzureFirewallAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.AzureFirewallResource&gt;&gt; GetAzureFirewallAsync (string azureFirewallName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.AzureFirewallResource&gt;&gt; GetAzureFirewallAsync(string azureFirewallName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetAzureFirewallAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureFirewallAsync (azureFirewallName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AzureFirewallResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAzureFirewallAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.AzureFirewallResource&gt;&gt;&#xA;override this.GetAzureFirewallAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.AzureFirewallResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetAzureFirewallAsync (azureFirewallName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.AzureFirewallResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="azureFirewallName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="azureFirewallName"> The name of the Azure Firewall. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Azure Firewall.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}</description></item><item><term>Operation Id</term><description>AzureFirewalls_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="azureFirewallName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="azureFirewallName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAzureFirewalls">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.AzureFirewallCollection GetAzureFirewalls ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.AzureFirewallCollection GetAzureFirewalls() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetAzureFirewalls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAzureFirewalls () As AzureFirewallCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAzureFirewalls : unit -&gt; Azure.ResourceManager.Network.AzureFirewallCollection&#xA;override this.GetAzureFirewalls : unit -&gt; Azure.ResourceManager.Network.AzureFirewallCollection" Usage="networkResourceGroupMockingExtension.GetAzureFirewalls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.AzureFirewallCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AzureFirewallResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of AzureFirewallResources and their operations over a AzureFirewallResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBastionHost">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.BastionHostResource&gt; GetBastionHost (string bastionHostName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.BastionHostResource&gt; GetBastionHost(string bastionHostName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetBastionHost(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBastionHost (bastionHostName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of BastionHostResource)" />
      <MemberSignature Language="F#" Value="abstract member GetBastionHost : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.BastionHostResource&gt;&#xA;override this.GetBastionHost : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.BastionHostResource&gt;" Usage="networkResourceGroupMockingExtension.GetBastionHost (bastionHostName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.BastionHostResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bastionHostName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="bastionHostName"> The name of the Bastion Host. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Bastion Host.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}</description></item><item><term>Operation Id</term><description>BastionHosts_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="bastionHostName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="bastionHostName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBastionHostAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.BastionHostResource&gt;&gt; GetBastionHostAsync (string bastionHostName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.BastionHostResource&gt;&gt; GetBastionHostAsync(string bastionHostName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetBastionHostAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBastionHostAsync (bastionHostName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of BastionHostResource))" />
      <MemberSignature Language="F#" Value="abstract member GetBastionHostAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.BastionHostResource&gt;&gt;&#xA;override this.GetBastionHostAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.BastionHostResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetBastionHostAsync (bastionHostName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.BastionHostResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bastionHostName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="bastionHostName"> The name of the Bastion Host. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Bastion Host.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}</description></item><item><term>Operation Id</term><description>BastionHosts_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="bastionHostName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="bastionHostName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBastionHosts">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.BastionHostCollection GetBastionHosts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.BastionHostCollection GetBastionHosts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetBastionHosts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBastionHosts () As BastionHostCollection" />
      <MemberSignature Language="F#" Value="abstract member GetBastionHosts : unit -&gt; Azure.ResourceManager.Network.BastionHostCollection&#xA;override this.GetBastionHosts : unit -&gt; Azure.ResourceManager.Network.BastionHostCollection" Usage="networkResourceGroupMockingExtension.GetBastionHosts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.BastionHostCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of BastionHostResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of BastionHostResources and their operations over a BastionHostResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCloudServiceSwap">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.CloudServiceSwapResource&gt; GetCloudServiceSwap (string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.CloudServiceSwapResource&gt; GetCloudServiceSwap(string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetCloudServiceSwap(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudServiceSwap (resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CloudServiceSwapResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCloudServiceSwap : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.CloudServiceSwapResource&gt;&#xA;override this.GetCloudServiceSwap : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.CloudServiceSwapResource&gt;" Usage="networkResourceGroupMockingExtension.GetCloudServiceSwap (resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.CloudServiceSwapResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceName"> The name of the cloud service. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the SwapResource which identifies the slot type for the specified cloud service. The slot type on a cloud service can either be Staging or Production
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Compute/cloudServices/{resourceName}/providers/Microsoft.Network/cloudServiceSlots/{singletonResource}</description></item><item><term>Operation Id</term><description>VipSwap_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCloudServiceSwapAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.CloudServiceSwapResource&gt;&gt; GetCloudServiceSwapAsync (string resourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.CloudServiceSwapResource&gt;&gt; GetCloudServiceSwapAsync(string resourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetCloudServiceSwapAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudServiceSwapAsync (resourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CloudServiceSwapResource))" />
      <MemberSignature Language="F#" Value="abstract member GetCloudServiceSwapAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.CloudServiceSwapResource&gt;&gt;&#xA;override this.GetCloudServiceSwapAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.CloudServiceSwapResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetCloudServiceSwapAsync (resourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.CloudServiceSwapResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceName"> The name of the cloud service. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the SwapResource which identifies the slot type for the specified cloud service. The slot type on a cloud service can either be Staging or Production
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Compute/cloudServices/{resourceName}/providers/Microsoft.Network/cloudServiceSlots/{singletonResource}</description></item><item><term>Operation Id</term><description>VipSwap_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCloudServiceSwaps">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.CloudServiceSwapCollection GetCloudServiceSwaps (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.CloudServiceSwapCollection GetCloudServiceSwaps(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetCloudServiceSwaps(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCloudServiceSwaps (resourceName As String) As CloudServiceSwapCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCloudServiceSwaps : string -&gt; Azure.ResourceManager.Network.CloudServiceSwapCollection&#xA;override this.GetCloudServiceSwaps : string -&gt; Azure.ResourceManager.Network.CloudServiceSwapCollection" Usage="networkResourceGroupMockingExtension.GetCloudServiceSwaps resourceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.CloudServiceSwapCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceName"> The name of the cloud service. </param>
        <summary> Gets a collection of CloudServiceSwapResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of CloudServiceSwapResources and their operations over a CloudServiceSwapResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomIPPrefix">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.CustomIPPrefixResource&gt; GetCustomIPPrefix (string customIPPrefixName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.CustomIPPrefixResource&gt; GetCustomIPPrefix(string customIPPrefixName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetCustomIPPrefix(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomIPPrefix (customIPPrefixName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CustomIPPrefixResource)" />
      <MemberSignature Language="F#" Value="abstract member GetCustomIPPrefix : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.CustomIPPrefixResource&gt;&#xA;override this.GetCustomIPPrefix : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.CustomIPPrefixResource&gt;" Usage="networkResourceGroupMockingExtension.GetCustomIPPrefix (customIPPrefixName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.CustomIPPrefixResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customIPPrefixName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="customIPPrefixName"> The name of the custom IP prefix. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified custom IP prefix in a specified resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/customIpPrefixes/{customIpPrefixName}</description></item><item><term>Operation Id</term><description>CustomIPPrefixes_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="customIPPrefixName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="customIPPrefixName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomIPPrefixAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.CustomIPPrefixResource&gt;&gt; GetCustomIPPrefixAsync (string customIPPrefixName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.CustomIPPrefixResource&gt;&gt; GetCustomIPPrefixAsync(string customIPPrefixName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetCustomIPPrefixAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomIPPrefixAsync (customIPPrefixName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CustomIPPrefixResource))" />
      <MemberSignature Language="F#" Value="abstract member GetCustomIPPrefixAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.CustomIPPrefixResource&gt;&gt;&#xA;override this.GetCustomIPPrefixAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.CustomIPPrefixResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetCustomIPPrefixAsync (customIPPrefixName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.CustomIPPrefixResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customIPPrefixName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="customIPPrefixName"> The name of the custom IP prefix. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified custom IP prefix in a specified resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/customIpPrefixes/{customIpPrefixName}</description></item><item><term>Operation Id</term><description>CustomIPPrefixes_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="customIPPrefixName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="customIPPrefixName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomIPPrefixes">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.CustomIPPrefixCollection GetCustomIPPrefixes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.CustomIPPrefixCollection GetCustomIPPrefixes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetCustomIPPrefixes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomIPPrefixes () As CustomIPPrefixCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCustomIPPrefixes : unit -&gt; Azure.ResourceManager.Network.CustomIPPrefixCollection&#xA;override this.GetCustomIPPrefixes : unit -&gt; Azure.ResourceManager.Network.CustomIPPrefixCollection" Usage="networkResourceGroupMockingExtension.GetCustomIPPrefixes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.CustomIPPrefixCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of CustomIPPrefixResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of CustomIPPrefixResources and their operations over a CustomIPPrefixResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDdosCustomPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.DdosCustomPolicyCollection GetDdosCustomPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.DdosCustomPolicyCollection GetDdosCustomPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetDdosCustomPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDdosCustomPolicies () As DdosCustomPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDdosCustomPolicies : unit -&gt; Azure.ResourceManager.Network.DdosCustomPolicyCollection&#xA;override this.GetDdosCustomPolicies : unit -&gt; Azure.ResourceManager.Network.DdosCustomPolicyCollection" Usage="networkResourceGroupMockingExtension.GetDdosCustomPolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.DdosCustomPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DdosCustomPolicyResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of DdosCustomPolicyResources and their operations over a DdosCustomPolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDdosCustomPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.DdosCustomPolicyResource&gt; GetDdosCustomPolicy (string ddosCustomPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.DdosCustomPolicyResource&gt; GetDdosCustomPolicy(string ddosCustomPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetDdosCustomPolicy(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDdosCustomPolicy (ddosCustomPolicyName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DdosCustomPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDdosCustomPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.DdosCustomPolicyResource&gt;&#xA;override this.GetDdosCustomPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.DdosCustomPolicyResource&gt;" Usage="networkResourceGroupMockingExtension.GetDdosCustomPolicy (ddosCustomPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.DdosCustomPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ddosCustomPolicyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ddosCustomPolicyName"> The name of the DDoS custom policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about the specified DDoS custom policy.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosCustomPolicies/{ddosCustomPolicyName}</description></item><item><term>Operation Id</term><description>DdosCustomPolicies_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ddosCustomPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ddosCustomPolicyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDdosCustomPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.DdosCustomPolicyResource&gt;&gt; GetDdosCustomPolicyAsync (string ddosCustomPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.DdosCustomPolicyResource&gt;&gt; GetDdosCustomPolicyAsync(string ddosCustomPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetDdosCustomPolicyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDdosCustomPolicyAsync (ddosCustomPolicyName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DdosCustomPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDdosCustomPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.DdosCustomPolicyResource&gt;&gt;&#xA;override this.GetDdosCustomPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.DdosCustomPolicyResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetDdosCustomPolicyAsync (ddosCustomPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.DdosCustomPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ddosCustomPolicyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ddosCustomPolicyName"> The name of the DDoS custom policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about the specified DDoS custom policy.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosCustomPolicies/{ddosCustomPolicyName}</description></item><item><term>Operation Id</term><description>DdosCustomPolicies_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ddosCustomPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ddosCustomPolicyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDdosProtectionPlan">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.DdosProtectionPlanResource&gt; GetDdosProtectionPlan (string ddosProtectionPlanName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.DdosProtectionPlanResource&gt; GetDdosProtectionPlan(string ddosProtectionPlanName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetDdosProtectionPlan(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDdosProtectionPlan (ddosProtectionPlanName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DdosProtectionPlanResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDdosProtectionPlan : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.DdosProtectionPlanResource&gt;&#xA;override this.GetDdosProtectionPlan : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.DdosProtectionPlanResource&gt;" Usage="networkResourceGroupMockingExtension.GetDdosProtectionPlan (ddosProtectionPlanName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.DdosProtectionPlanResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ddosProtectionPlanName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ddosProtectionPlanName"> The name of the DDoS protection plan. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about the specified DDoS protection plan.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosProtectionPlans/{ddosProtectionPlanName}</description></item><item><term>Operation Id</term><description>DdosProtectionPlans_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ddosProtectionPlanName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ddosProtectionPlanName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDdosProtectionPlanAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.DdosProtectionPlanResource&gt;&gt; GetDdosProtectionPlanAsync (string ddosProtectionPlanName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.DdosProtectionPlanResource&gt;&gt; GetDdosProtectionPlanAsync(string ddosProtectionPlanName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetDdosProtectionPlanAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDdosProtectionPlanAsync (ddosProtectionPlanName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DdosProtectionPlanResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDdosProtectionPlanAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.DdosProtectionPlanResource&gt;&gt;&#xA;override this.GetDdosProtectionPlanAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.DdosProtectionPlanResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetDdosProtectionPlanAsync (ddosProtectionPlanName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.DdosProtectionPlanResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ddosProtectionPlanName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ddosProtectionPlanName"> The name of the DDoS protection plan. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about the specified DDoS protection plan.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosProtectionPlans/{ddosProtectionPlanName}</description></item><item><term>Operation Id</term><description>DdosProtectionPlans_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ddosProtectionPlanName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ddosProtectionPlanName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDdosProtectionPlans">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.DdosProtectionPlanCollection GetDdosProtectionPlans ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.DdosProtectionPlanCollection GetDdosProtectionPlans() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetDdosProtectionPlans" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDdosProtectionPlans () As DdosProtectionPlanCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDdosProtectionPlans : unit -&gt; Azure.ResourceManager.Network.DdosProtectionPlanCollection&#xA;override this.GetDdosProtectionPlans : unit -&gt; Azure.ResourceManager.Network.DdosProtectionPlanCollection" Usage="networkResourceGroupMockingExtension.GetDdosProtectionPlans " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.DdosProtectionPlanCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DdosProtectionPlanResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of DdosProtectionPlanResources and their operations over a DdosProtectionPlanResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDscpConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.DscpConfigurationResource&gt; GetDscpConfiguration (string dscpConfigurationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.DscpConfigurationResource&gt; GetDscpConfiguration(string dscpConfigurationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetDscpConfiguration(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDscpConfiguration (dscpConfigurationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DscpConfigurationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetDscpConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.DscpConfigurationResource&gt;&#xA;override this.GetDscpConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.DscpConfigurationResource&gt;" Usage="networkResourceGroupMockingExtension.GetDscpConfiguration (dscpConfigurationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.DscpConfigurationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dscpConfigurationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dscpConfigurationName"> The name of the resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a DSCP Configuration.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dscpConfigurations/{dscpConfigurationName}</description></item><item><term>Operation Id</term><description>DscpConfiguration_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dscpConfigurationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dscpConfigurationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDscpConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.DscpConfigurationResource&gt;&gt; GetDscpConfigurationAsync (string dscpConfigurationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.DscpConfigurationResource&gt;&gt; GetDscpConfigurationAsync(string dscpConfigurationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetDscpConfigurationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDscpConfigurationAsync (dscpConfigurationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DscpConfigurationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetDscpConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.DscpConfigurationResource&gt;&gt;&#xA;override this.GetDscpConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.DscpConfigurationResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetDscpConfigurationAsync (dscpConfigurationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.DscpConfigurationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dscpConfigurationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="dscpConfigurationName"> The name of the resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a DSCP Configuration.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dscpConfigurations/{dscpConfigurationName}</description></item><item><term>Operation Id</term><description>DscpConfiguration_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dscpConfigurationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dscpConfigurationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDscpConfigurations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.DscpConfigurationCollection GetDscpConfigurations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.DscpConfigurationCollection GetDscpConfigurations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetDscpConfigurations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDscpConfigurations () As DscpConfigurationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDscpConfigurations : unit -&gt; Azure.ResourceManager.Network.DscpConfigurationCollection&#xA;override this.GetDscpConfigurations : unit -&gt; Azure.ResourceManager.Network.DscpConfigurationCollection" Usage="networkResourceGroupMockingExtension.GetDscpConfigurations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.DscpConfigurationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DscpConfigurationResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of DscpConfigurationResources and their operations over a DscpConfigurationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteCircuit">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCircuitResource&gt; GetExpressRouteCircuit (string circuitName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.ExpressRouteCircuitResource&gt; GetExpressRouteCircuit(string circuitName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetExpressRouteCircuit(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteCircuit (circuitName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ExpressRouteCircuitResource)" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteCircuit : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCircuitResource&gt;&#xA;override this.GetExpressRouteCircuit : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCircuitResource&gt;" Usage="networkResourceGroupMockingExtension.GetExpressRouteCircuit (circuitName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCircuitResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="circuitName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="circuitName"> The name of express route circuit. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about the specified express route circuit.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}</description></item><item><term>Operation Id</term><description>ExpressRouteCircuits_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="circuitName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="circuitName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteCircuitAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCircuitResource&gt;&gt; GetExpressRouteCircuitAsync (string circuitName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.ExpressRouteCircuitResource&gt;&gt; GetExpressRouteCircuitAsync(string circuitName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetExpressRouteCircuitAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteCircuitAsync (circuitName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ExpressRouteCircuitResource))" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteCircuitAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCircuitResource&gt;&gt;&#xA;override this.GetExpressRouteCircuitAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCircuitResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetExpressRouteCircuitAsync (circuitName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCircuitResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="circuitName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="circuitName"> The name of express route circuit. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about the specified express route circuit.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}</description></item><item><term>Operation Id</term><description>ExpressRouteCircuits_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="circuitName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="circuitName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteCircuits">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ExpressRouteCircuitCollection GetExpressRouteCircuits ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ExpressRouteCircuitCollection GetExpressRouteCircuits() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetExpressRouteCircuits" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteCircuits () As ExpressRouteCircuitCollection" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteCircuits : unit -&gt; Azure.ResourceManager.Network.ExpressRouteCircuitCollection&#xA;override this.GetExpressRouteCircuits : unit -&gt; Azure.ResourceManager.Network.ExpressRouteCircuitCollection" Usage="networkResourceGroupMockingExtension.GetExpressRouteCircuits " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ExpressRouteCircuitCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ExpressRouteCircuitResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ExpressRouteCircuitResources and their operations over a ExpressRouteCircuitResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteCrossConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource&gt; GetExpressRouteCrossConnection (string crossConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource&gt; GetExpressRouteCrossConnection(string crossConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetExpressRouteCrossConnection(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteCrossConnection (crossConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ExpressRouteCrossConnectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteCrossConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource&gt;&#xA;override this.GetExpressRouteCrossConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource&gt;" Usage="networkResourceGroupMockingExtension.GetExpressRouteCrossConnection (crossConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="crossConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="crossConnectionName"> The name of the ExpressRouteCrossConnection (service key of the circuit). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets details about the specified ExpressRouteCrossConnection.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}</description></item><item><term>Operation Id</term><description>ExpressRouteCrossConnections_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="crossConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="crossConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteCrossConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource&gt;&gt; GetExpressRouteCrossConnectionAsync (string crossConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource&gt;&gt; GetExpressRouteCrossConnectionAsync(string crossConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetExpressRouteCrossConnectionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteCrossConnectionAsync (crossConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ExpressRouteCrossConnectionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteCrossConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource&gt;&gt;&#xA;override this.GetExpressRouteCrossConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetExpressRouteCrossConnectionAsync (crossConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteCrossConnectionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="crossConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="crossConnectionName"> The name of the ExpressRouteCrossConnection (service key of the circuit). </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets details about the specified ExpressRouteCrossConnection.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCrossConnections/{crossConnectionName}</description></item><item><term>Operation Id</term><description>ExpressRouteCrossConnections_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="crossConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="crossConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteCrossConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ExpressRouteCrossConnectionCollection GetExpressRouteCrossConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ExpressRouteCrossConnectionCollection GetExpressRouteCrossConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetExpressRouteCrossConnections" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteCrossConnections () As ExpressRouteCrossConnectionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteCrossConnections : unit -&gt; Azure.ResourceManager.Network.ExpressRouteCrossConnectionCollection&#xA;override this.GetExpressRouteCrossConnections : unit -&gt; Azure.ResourceManager.Network.ExpressRouteCrossConnectionCollection" Usage="networkResourceGroupMockingExtension.GetExpressRouteCrossConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ExpressRouteCrossConnectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ExpressRouteCrossConnectionResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ExpressRouteCrossConnectionResources and their operations over a ExpressRouteCrossConnectionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteGateway">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteGatewayResource&gt; GetExpressRouteGateway (string expressRouteGatewayName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.ExpressRouteGatewayResource&gt; GetExpressRouteGateway(string expressRouteGatewayName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetExpressRouteGateway(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteGateway (expressRouteGatewayName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ExpressRouteGatewayResource)" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteGateway : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteGatewayResource&gt;&#xA;override this.GetExpressRouteGateway : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteGatewayResource&gt;" Usage="networkResourceGroupMockingExtension.GetExpressRouteGateway (expressRouteGatewayName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteGatewayResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressRouteGatewayName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expressRouteGatewayName"> The name of the ExpressRoute gateway. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetches the details of a ExpressRoute gateway in a resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}</description></item><item><term>Operation Id</term><description>ExpressRouteGateways_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="expressRouteGatewayName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expressRouteGatewayName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteGatewayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteGatewayResource&gt;&gt; GetExpressRouteGatewayAsync (string expressRouteGatewayName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.ExpressRouteGatewayResource&gt;&gt; GetExpressRouteGatewayAsync(string expressRouteGatewayName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetExpressRouteGatewayAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteGatewayAsync (expressRouteGatewayName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ExpressRouteGatewayResource))" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteGatewayAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteGatewayResource&gt;&gt;&#xA;override this.GetExpressRouteGatewayAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteGatewayResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetExpressRouteGatewayAsync (expressRouteGatewayName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRouteGatewayResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressRouteGatewayName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expressRouteGatewayName"> The name of the ExpressRoute gateway. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Fetches the details of a ExpressRoute gateway in a resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}</description></item><item><term>Operation Id</term><description>ExpressRouteGateways_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="expressRouteGatewayName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expressRouteGatewayName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRouteGateways">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ExpressRouteGatewayCollection GetExpressRouteGateways ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ExpressRouteGatewayCollection GetExpressRouteGateways() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetExpressRouteGateways" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRouteGateways () As ExpressRouteGatewayCollection" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRouteGateways : unit -&gt; Azure.ResourceManager.Network.ExpressRouteGatewayCollection&#xA;override this.GetExpressRouteGateways : unit -&gt; Azure.ResourceManager.Network.ExpressRouteGatewayCollection" Usage="networkResourceGroupMockingExtension.GetExpressRouteGateways " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ExpressRouteGatewayCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ExpressRouteGatewayResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ExpressRouteGatewayResources and their operations over a ExpressRouteGatewayResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRoutePort">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.ExpressRoutePortResource&gt; GetExpressRoutePort (string expressRoutePortName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.ExpressRoutePortResource&gt; GetExpressRoutePort(string expressRoutePortName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetExpressRoutePort(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRoutePort (expressRoutePortName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ExpressRoutePortResource)" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRoutePort : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.ExpressRoutePortResource&gt;&#xA;override this.GetExpressRoutePort : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.ExpressRoutePortResource&gt;" Usage="networkResourceGroupMockingExtension.GetExpressRoutePort (expressRoutePortName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.ExpressRoutePortResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressRoutePortName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expressRoutePortName"> The name of ExpressRoutePort. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the requested ExpressRoutePort resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}</description></item><item><term>Operation Id</term><description>ExpressRoutePorts_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="expressRoutePortName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expressRoutePortName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRoutePortAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRoutePortResource&gt;&gt; GetExpressRoutePortAsync (string expressRoutePortName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.ExpressRoutePortResource&gt;&gt; GetExpressRoutePortAsync(string expressRoutePortName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetExpressRoutePortAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRoutePortAsync (expressRoutePortName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ExpressRoutePortResource))" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRoutePortAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRoutePortResource&gt;&gt;&#xA;override this.GetExpressRoutePortAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRoutePortResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetExpressRoutePortAsync (expressRoutePortName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ExpressRoutePortResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressRoutePortName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expressRoutePortName"> The name of ExpressRoutePort. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the requested ExpressRoutePort resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ExpressRoutePorts/{expressRoutePortName}</description></item><item><term>Operation Id</term><description>ExpressRoutePorts_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="expressRoutePortName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expressRoutePortName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExpressRoutePorts">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ExpressRoutePortCollection GetExpressRoutePorts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ExpressRoutePortCollection GetExpressRoutePorts() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetExpressRoutePorts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressRoutePorts () As ExpressRoutePortCollection" />
      <MemberSignature Language="F#" Value="abstract member GetExpressRoutePorts : unit -&gt; Azure.ResourceManager.Network.ExpressRoutePortCollection&#xA;override this.GetExpressRoutePorts : unit -&gt; Azure.ResourceManager.Network.ExpressRoutePortCollection" Usage="networkResourceGroupMockingExtension.GetExpressRoutePorts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ExpressRoutePortCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ExpressRoutePortResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ExpressRoutePortResources and their operations over a ExpressRoutePortResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirewallPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.FirewallPolicyCollection GetFirewallPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.FirewallPolicyCollection GetFirewallPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetFirewallPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFirewallPolicies () As FirewallPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetFirewallPolicies : unit -&gt; Azure.ResourceManager.Network.FirewallPolicyCollection&#xA;override this.GetFirewallPolicies : unit -&gt; Azure.ResourceManager.Network.FirewallPolicyCollection" Usage="networkResourceGroupMockingExtension.GetFirewallPolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.FirewallPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of FirewallPolicyResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of FirewallPolicyResources and their operations over a FirewallPolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirewallPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.FirewallPolicyResource&gt; GetFirewallPolicy (string firewallPolicyName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.FirewallPolicyResource&gt; GetFirewallPolicy(string firewallPolicyName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetFirewallPolicy(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFirewallPolicy (firewallPolicyName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of FirewallPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetFirewallPolicy : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.FirewallPolicyResource&gt;&#xA;override this.GetFirewallPolicy : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.FirewallPolicyResource&gt;" Usage="networkResourceGroupMockingExtension.GetFirewallPolicy (firewallPolicyName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.FirewallPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firewallPolicyName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="firewallPolicyName"> The name of the Firewall Policy. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Firewall Policy.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}</description></item><item><term>Operation Id</term><description>FirewallPolicies_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="firewallPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="firewallPolicyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFirewallPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.FirewallPolicyResource&gt;&gt; GetFirewallPolicyAsync (string firewallPolicyName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.FirewallPolicyResource&gt;&gt; GetFirewallPolicyAsync(string firewallPolicyName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetFirewallPolicyAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFirewallPolicyAsync (firewallPolicyName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of FirewallPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetFirewallPolicyAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.FirewallPolicyResource&gt;&gt;&#xA;override this.GetFirewallPolicyAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.FirewallPolicyResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetFirewallPolicyAsync (firewallPolicyName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.FirewallPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firewallPolicyName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="firewallPolicyName"> The name of the Firewall Policy. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Firewall Policy.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}</description></item><item><term>Operation Id</term><description>FirewallPolicies_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="firewallPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="firewallPolicyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIPAllocation">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.IPAllocationResource&gt; GetIPAllocation (string ipAllocationName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.IPAllocationResource&gt; GetIPAllocation(string ipAllocationName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetIPAllocation(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPAllocation (ipAllocationName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IPAllocationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIPAllocation : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.IPAllocationResource&gt;&#xA;override this.GetIPAllocation : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.IPAllocationResource&gt;" Usage="networkResourceGroupMockingExtension.GetIPAllocation (ipAllocationName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.IPAllocationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipAllocationName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ipAllocationName"> The name of the IpAllocation. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified IpAllocation by resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/IpAllocations/{ipAllocationName}</description></item><item><term>Operation Id</term><description>IpAllocations_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ipAllocationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ipAllocationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIPAllocationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.IPAllocationResource&gt;&gt; GetIPAllocationAsync (string ipAllocationName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.IPAllocationResource&gt;&gt; GetIPAllocationAsync(string ipAllocationName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetIPAllocationAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPAllocationAsync (ipAllocationName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IPAllocationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetIPAllocationAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.IPAllocationResource&gt;&gt;&#xA;override this.GetIPAllocationAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.IPAllocationResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetIPAllocationAsync (ipAllocationName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.IPAllocationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipAllocationName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ipAllocationName"> The name of the IpAllocation. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified IpAllocation by resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/IpAllocations/{ipAllocationName}</description></item><item><term>Operation Id</term><description>IpAllocations_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ipAllocationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ipAllocationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIPAllocations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.IPAllocationCollection GetIPAllocations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.IPAllocationCollection GetIPAllocations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetIPAllocations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPAllocations () As IPAllocationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetIPAllocations : unit -&gt; Azure.ResourceManager.Network.IPAllocationCollection&#xA;override this.GetIPAllocations : unit -&gt; Azure.ResourceManager.Network.IPAllocationCollection" Usage="networkResourceGroupMockingExtension.GetIPAllocations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.IPAllocationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of IPAllocationResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of IPAllocationResources and their operations over a IPAllocationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.IPGroupResource&gt; GetIPGroup (string ipGroupsName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.IPGroupResource&gt; GetIPGroup(string ipGroupsName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetIPGroup(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPGroup (ipGroupsName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of IPGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetIPGroup : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.IPGroupResource&gt;&#xA;override this.GetIPGroup : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.IPGroupResource&gt;" Usage="networkResourceGroupMockingExtension.GetIPGroup (ipGroupsName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.IPGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipGroupsName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ipGroupsName"> The name of the ipGroups. </param>
        <param name="expand"> Expands resourceIds (of Firewalls/Network Security Groups etc.) back referenced by the IpGroups resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified ipGroups.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ipGroups/{ipGroupsName}</description></item><item><term>Operation Id</term><description>IpGroups_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ipGroupsName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ipGroupsName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIPGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.IPGroupResource&gt;&gt; GetIPGroupAsync (string ipGroupsName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.IPGroupResource&gt;&gt; GetIPGroupAsync(string ipGroupsName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetIPGroupAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPGroupAsync (ipGroupsName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of IPGroupResource))" />
      <MemberSignature Language="F#" Value="abstract member GetIPGroupAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.IPGroupResource&gt;&gt;&#xA;override this.GetIPGroupAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.IPGroupResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetIPGroupAsync (ipGroupsName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.IPGroupResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipGroupsName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ipGroupsName"> The name of the ipGroups. </param>
        <param name="expand"> Expands resourceIds (of Firewalls/Network Security Groups etc.) back referenced by the IpGroups resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified ipGroups.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ipGroups/{ipGroupsName}</description></item><item><term>Operation Id</term><description>IpGroups_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ipGroupsName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ipGroupsName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIPGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.IPGroupCollection GetIPGroups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.IPGroupCollection GetIPGroups() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetIPGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPGroups () As IPGroupCollection" />
      <MemberSignature Language="F#" Value="abstract member GetIPGroups : unit -&gt; Azure.ResourceManager.Network.IPGroupCollection&#xA;override this.GetIPGroups : unit -&gt; Azure.ResourceManager.Network.IPGroupCollection" Usage="networkResourceGroupMockingExtension.GetIPGroups " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.IPGroupCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of IPGroupResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of IPGroupResources and their operations over a IPGroupResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoadBalancer">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.LoadBalancerResource&gt; GetLoadBalancer (string loadBalancerName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.LoadBalancerResource&gt; GetLoadBalancer(string loadBalancerName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetLoadBalancer(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLoadBalancer (loadBalancerName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LoadBalancerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetLoadBalancer : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.LoadBalancerResource&gt;&#xA;override this.GetLoadBalancer : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.LoadBalancerResource&gt;" Usage="networkResourceGroupMockingExtension.GetLoadBalancer (loadBalancerName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.LoadBalancerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loadBalancerName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="loadBalancerName"> The name of the load balancer. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified load balancer.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}</description></item><item><term>Operation Id</term><description>LoadBalancers_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="loadBalancerName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="loadBalancerName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLoadBalancerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.LoadBalancerResource&gt;&gt; GetLoadBalancerAsync (string loadBalancerName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.LoadBalancerResource&gt;&gt; GetLoadBalancerAsync(string loadBalancerName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetLoadBalancerAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLoadBalancerAsync (loadBalancerName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LoadBalancerResource))" />
      <MemberSignature Language="F#" Value="abstract member GetLoadBalancerAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.LoadBalancerResource&gt;&gt;&#xA;override this.GetLoadBalancerAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.LoadBalancerResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetLoadBalancerAsync (loadBalancerName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.LoadBalancerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loadBalancerName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="loadBalancerName"> The name of the load balancer. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified load balancer.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}</description></item><item><term>Operation Id</term><description>LoadBalancers_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="loadBalancerName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="loadBalancerName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLoadBalancers">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.LoadBalancerCollection GetLoadBalancers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.LoadBalancerCollection GetLoadBalancers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetLoadBalancers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLoadBalancers () As LoadBalancerCollection" />
      <MemberSignature Language="F#" Value="abstract member GetLoadBalancers : unit -&gt; Azure.ResourceManager.Network.LoadBalancerCollection&#xA;override this.GetLoadBalancers : unit -&gt; Azure.ResourceManager.Network.LoadBalancerCollection" Usage="networkResourceGroupMockingExtension.GetLoadBalancers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.LoadBalancerCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of LoadBalancerResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of LoadBalancerResources and their operations over a LoadBalancerResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalNetworkGateway">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.LocalNetworkGatewayResource&gt; GetLocalNetworkGateway (string localNetworkGatewayName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.LocalNetworkGatewayResource&gt; GetLocalNetworkGateway(string localNetworkGatewayName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetLocalNetworkGateway(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocalNetworkGateway (localNetworkGatewayName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LocalNetworkGatewayResource)" />
      <MemberSignature Language="F#" Value="abstract member GetLocalNetworkGateway : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.LocalNetworkGatewayResource&gt;&#xA;override this.GetLocalNetworkGateway : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.LocalNetworkGatewayResource&gt;" Usage="networkResourceGroupMockingExtension.GetLocalNetworkGateway (localNetworkGatewayName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.LocalNetworkGatewayResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localNetworkGatewayName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="localNetworkGatewayName"> The name of the local network gateway. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified local network gateway in a resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}</description></item><item><term>Operation Id</term><description>LocalNetworkGateways_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="localNetworkGatewayName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="localNetworkGatewayName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLocalNetworkGatewayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.LocalNetworkGatewayResource&gt;&gt; GetLocalNetworkGatewayAsync (string localNetworkGatewayName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.LocalNetworkGatewayResource&gt;&gt; GetLocalNetworkGatewayAsync(string localNetworkGatewayName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetLocalNetworkGatewayAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocalNetworkGatewayAsync (localNetworkGatewayName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LocalNetworkGatewayResource))" />
      <MemberSignature Language="F#" Value="abstract member GetLocalNetworkGatewayAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.LocalNetworkGatewayResource&gt;&gt;&#xA;override this.GetLocalNetworkGatewayAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.LocalNetworkGatewayResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetLocalNetworkGatewayAsync (localNetworkGatewayName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.LocalNetworkGatewayResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localNetworkGatewayName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="localNetworkGatewayName"> The name of the local network gateway. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified local network gateway in a resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}</description></item><item><term>Operation Id</term><description>LocalNetworkGateways_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="localNetworkGatewayName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="localNetworkGatewayName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLocalNetworkGateways">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.LocalNetworkGatewayCollection GetLocalNetworkGateways ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.LocalNetworkGatewayCollection GetLocalNetworkGateways() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetLocalNetworkGateways" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocalNetworkGateways () As LocalNetworkGatewayCollection" />
      <MemberSignature Language="F#" Value="abstract member GetLocalNetworkGateways : unit -&gt; Azure.ResourceManager.Network.LocalNetworkGatewayCollection&#xA;override this.GetLocalNetworkGateways : unit -&gt; Azure.ResourceManager.Network.LocalNetworkGatewayCollection" Usage="networkResourceGroupMockingExtension.GetLocalNetworkGateways " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.LocalNetworkGatewayCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of LocalNetworkGatewayResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of LocalNetworkGatewayResources and their operations over a LocalNetworkGatewayResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNatGateway">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.NatGatewayResource&gt; GetNatGateway (string natGatewayName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.NatGatewayResource&gt; GetNatGateway(string natGatewayName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetNatGateway(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNatGateway (natGatewayName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NatGatewayResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNatGateway : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.NatGatewayResource&gt;&#xA;override this.GetNatGateway : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.NatGatewayResource&gt;" Usage="networkResourceGroupMockingExtension.GetNatGateway (natGatewayName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.NatGatewayResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="natGatewayName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="natGatewayName"> The name of the nat gateway. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified nat gateway in a specified resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/natGateways/{natGatewayName}</description></item><item><term>Operation Id</term><description>NatGateways_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="natGatewayName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="natGatewayName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNatGatewayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NatGatewayResource&gt;&gt; GetNatGatewayAsync (string natGatewayName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.NatGatewayResource&gt;&gt; GetNatGatewayAsync(string natGatewayName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetNatGatewayAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNatGatewayAsync (natGatewayName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NatGatewayResource))" />
      <MemberSignature Language="F#" Value="abstract member GetNatGatewayAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NatGatewayResource&gt;&gt;&#xA;override this.GetNatGatewayAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NatGatewayResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetNatGatewayAsync (natGatewayName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NatGatewayResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="natGatewayName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="natGatewayName"> The name of the nat gateway. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified nat gateway in a specified resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/natGateways/{natGatewayName}</description></item><item><term>Operation Id</term><description>NatGateways_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="natGatewayName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="natGatewayName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNatGateways">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.NatGatewayCollection GetNatGateways ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.NatGatewayCollection GetNatGateways() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetNatGateways" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNatGateways () As NatGatewayCollection" />
      <MemberSignature Language="F#" Value="abstract member GetNatGateways : unit -&gt; Azure.ResourceManager.Network.NatGatewayCollection&#xA;override this.GetNatGateways : unit -&gt; Azure.ResourceManager.Network.NatGatewayCollection" Usage="networkResourceGroupMockingExtension.GetNatGateways " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.NatGatewayCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of NatGatewayResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of NatGatewayResources and their operations over a NatGatewayResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkInterface">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.NetworkInterfaceResource&gt; GetNetworkInterface (string networkInterfaceName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.NetworkInterfaceResource&gt; GetNetworkInterface(string networkInterfaceName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetNetworkInterface(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkInterface (networkInterfaceName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NetworkInterfaceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkInterface : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.NetworkInterfaceResource&gt;&#xA;override this.GetNetworkInterface : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.NetworkInterfaceResource&gt;" Usage="networkResourceGroupMockingExtension.GetNetworkInterface (networkInterfaceName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.NetworkInterfaceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkInterfaceName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="networkInterfaceName"> The name of the network interface. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about the specified network interface.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}</description></item><item><term>Operation Id</term><description>NetworkInterfaces_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="networkInterfaceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="networkInterfaceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkInterfaceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkInterfaceResource&gt;&gt; GetNetworkInterfaceAsync (string networkInterfaceName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.NetworkInterfaceResource&gt;&gt; GetNetworkInterfaceAsync(string networkInterfaceName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetNetworkInterfaceAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkInterfaceAsync (networkInterfaceName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NetworkInterfaceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkInterfaceAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkInterfaceResource&gt;&gt;&#xA;override this.GetNetworkInterfaceAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkInterfaceResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetNetworkInterfaceAsync (networkInterfaceName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkInterfaceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkInterfaceName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="networkInterfaceName"> The name of the network interface. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about the specified network interface.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}</description></item><item><term>Operation Id</term><description>NetworkInterfaces_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="networkInterfaceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="networkInterfaceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkInterfaces">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.NetworkInterfaceCollection GetNetworkInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.NetworkInterfaceCollection GetNetworkInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetNetworkInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkInterfaces () As NetworkInterfaceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkInterfaces : unit -&gt; Azure.ResourceManager.Network.NetworkInterfaceCollection&#xA;override this.GetNetworkInterfaces : unit -&gt; Azure.ResourceManager.Network.NetworkInterfaceCollection" Usage="networkResourceGroupMockingExtension.GetNetworkInterfaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.NetworkInterfaceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of NetworkInterfaceResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of NetworkInterfaceResources and their operations over a NetworkInterfaceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkManager">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.NetworkManagerResource&gt; GetNetworkManager (string networkManagerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.NetworkManagerResource&gt; GetNetworkManager(string networkManagerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetNetworkManager(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkManager (networkManagerName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NetworkManagerResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkManager : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.NetworkManagerResource&gt;&#xA;override this.GetNetworkManager : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.NetworkManagerResource&gt;" Usage="networkResourceGroupMockingExtension.GetNetworkManager (networkManagerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.NetworkManagerResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkManagerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="networkManagerName"> The name of the network manager. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Network Manager.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}</description></item><item><term>Operation Id</term><description>NetworkManagers_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="networkManagerName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="networkManagerName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkManagerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkManagerResource&gt;&gt; GetNetworkManagerAsync (string networkManagerName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.NetworkManagerResource&gt;&gt; GetNetworkManagerAsync(string networkManagerName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetNetworkManagerAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkManagerAsync (networkManagerName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NetworkManagerResource))" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkManagerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkManagerResource&gt;&gt;&#xA;override this.GetNetworkManagerAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkManagerResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetNetworkManagerAsync (networkManagerName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkManagerResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkManagerName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="networkManagerName"> The name of the network manager. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Network Manager.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}</description></item><item><term>Operation Id</term><description>NetworkManagers_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="networkManagerName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="networkManagerName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkManagers">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.NetworkManagerCollection GetNetworkManagers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.NetworkManagerCollection GetNetworkManagers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetNetworkManagers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkManagers () As NetworkManagerCollection" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkManagers : unit -&gt; Azure.ResourceManager.Network.NetworkManagerCollection&#xA;override this.GetNetworkManagers : unit -&gt; Azure.ResourceManager.Network.NetworkManagerCollection" Usage="networkResourceGroupMockingExtension.GetNetworkManagers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.NetworkManagerCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of NetworkManagerResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of NetworkManagerResources and their operations over a NetworkManagerResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkProfile">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.NetworkProfileResource&gt; GetNetworkProfile (string networkProfileName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.NetworkProfileResource&gt; GetNetworkProfile(string networkProfileName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetNetworkProfile(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkProfile (networkProfileName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NetworkProfileResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkProfile : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.NetworkProfileResource&gt;&#xA;override this.GetNetworkProfile : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.NetworkProfileResource&gt;" Usage="networkResourceGroupMockingExtension.GetNetworkProfile (networkProfileName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.NetworkProfileResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkProfileName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="networkProfileName"> The name of the public IP prefix. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified network profile in a specified resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkProfiles/{networkProfileName}</description></item><item><term>Operation Id</term><description>NetworkProfiles_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="networkProfileName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="networkProfileName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkProfileAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkProfileResource&gt;&gt; GetNetworkProfileAsync (string networkProfileName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.NetworkProfileResource&gt;&gt; GetNetworkProfileAsync(string networkProfileName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetNetworkProfileAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkProfileAsync (networkProfileName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NetworkProfileResource))" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkProfileAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkProfileResource&gt;&gt;&#xA;override this.GetNetworkProfileAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkProfileResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetNetworkProfileAsync (networkProfileName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkProfileResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkProfileName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="networkProfileName"> The name of the public IP prefix. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified network profile in a specified resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkProfiles/{networkProfileName}</description></item><item><term>Operation Id</term><description>NetworkProfiles_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="networkProfileName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="networkProfileName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkProfiles">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.NetworkProfileCollection GetNetworkProfiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.NetworkProfileCollection GetNetworkProfiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetNetworkProfiles" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkProfiles () As NetworkProfileCollection" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkProfiles : unit -&gt; Azure.ResourceManager.Network.NetworkProfileCollection&#xA;override this.GetNetworkProfiles : unit -&gt; Azure.ResourceManager.Network.NetworkProfileCollection" Usage="networkResourceGroupMockingExtension.GetNetworkProfiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.NetworkProfileCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of NetworkProfileResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of NetworkProfileResources and their operations over a NetworkProfileResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkSecurityGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.NetworkSecurityGroupResource&gt; GetNetworkSecurityGroup (string networkSecurityGroupName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.NetworkSecurityGroupResource&gt; GetNetworkSecurityGroup(string networkSecurityGroupName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetNetworkSecurityGroup(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkSecurityGroup (networkSecurityGroupName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NetworkSecurityGroupResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkSecurityGroup : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.NetworkSecurityGroupResource&gt;&#xA;override this.GetNetworkSecurityGroup : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.NetworkSecurityGroupResource&gt;" Usage="networkResourceGroupMockingExtension.GetNetworkSecurityGroup (networkSecurityGroupName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.NetworkSecurityGroupResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkSecurityGroupName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="networkSecurityGroupName"> The name of the network security group. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified network security group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}</description></item><item><term>Operation Id</term><description>NetworkSecurityGroups_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="networkSecurityGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="networkSecurityGroupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkSecurityGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkSecurityGroupResource&gt;&gt; GetNetworkSecurityGroupAsync (string networkSecurityGroupName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.NetworkSecurityGroupResource&gt;&gt; GetNetworkSecurityGroupAsync(string networkSecurityGroupName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetNetworkSecurityGroupAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkSecurityGroupAsync (networkSecurityGroupName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NetworkSecurityGroupResource))" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkSecurityGroupAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkSecurityGroupResource&gt;&gt;&#xA;override this.GetNetworkSecurityGroupAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkSecurityGroupResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetNetworkSecurityGroupAsync (networkSecurityGroupName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkSecurityGroupResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkSecurityGroupName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="networkSecurityGroupName"> The name of the network security group. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified network security group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}</description></item><item><term>Operation Id</term><description>NetworkSecurityGroups_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="networkSecurityGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="networkSecurityGroupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkSecurityGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.NetworkSecurityGroupCollection GetNetworkSecurityGroups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.NetworkSecurityGroupCollection GetNetworkSecurityGroups() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetNetworkSecurityGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkSecurityGroups () As NetworkSecurityGroupCollection" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkSecurityGroups : unit -&gt; Azure.ResourceManager.Network.NetworkSecurityGroupCollection&#xA;override this.GetNetworkSecurityGroups : unit -&gt; Azure.ResourceManager.Network.NetworkSecurityGroupCollection" Usage="networkResourceGroupMockingExtension.GetNetworkSecurityGroups " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.NetworkSecurityGroupCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of NetworkSecurityGroupResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of NetworkSecurityGroupResources and their operations over a NetworkSecurityGroupResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkVirtualAppliance">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceResource&gt; GetNetworkVirtualAppliance (string networkVirtualApplianceName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.NetworkVirtualApplianceResource&gt; GetNetworkVirtualAppliance(string networkVirtualApplianceName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetNetworkVirtualAppliance(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkVirtualAppliance (networkVirtualApplianceName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NetworkVirtualApplianceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkVirtualAppliance : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceResource&gt;&#xA;override this.GetNetworkVirtualAppliance : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceResource&gt;" Usage="networkResourceGroupMockingExtension.GetNetworkVirtualAppliance (networkVirtualApplianceName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkVirtualApplianceName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="networkVirtualApplianceName"> The name of Network Virtual Appliance. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Network Virtual Appliance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}</description></item><item><term>Operation Id</term><description>NetworkVirtualAppliances_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="networkVirtualApplianceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="networkVirtualApplianceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkVirtualApplianceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceResource&gt;&gt; GetNetworkVirtualApplianceAsync (string networkVirtualApplianceName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.NetworkVirtualApplianceResource&gt;&gt; GetNetworkVirtualApplianceAsync(string networkVirtualApplianceName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetNetworkVirtualApplianceAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkVirtualApplianceAsync (networkVirtualApplianceName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NetworkVirtualApplianceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkVirtualApplianceAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceResource&gt;&gt;&#xA;override this.GetNetworkVirtualApplianceAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetNetworkVirtualApplianceAsync (networkVirtualApplianceName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkVirtualApplianceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkVirtualApplianceName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="networkVirtualApplianceName"> The name of Network Virtual Appliance. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Network Virtual Appliance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}</description></item><item><term>Operation Id</term><description>NetworkVirtualAppliances_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="networkVirtualApplianceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="networkVirtualApplianceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkVirtualAppliances">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.NetworkVirtualApplianceCollection GetNetworkVirtualAppliances ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.NetworkVirtualApplianceCollection GetNetworkVirtualAppliances() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetNetworkVirtualAppliances" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkVirtualAppliances () As NetworkVirtualApplianceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkVirtualAppliances : unit -&gt; Azure.ResourceManager.Network.NetworkVirtualApplianceCollection&#xA;override this.GetNetworkVirtualAppliances : unit -&gt; Azure.ResourceManager.Network.NetworkVirtualApplianceCollection" Usage="networkResourceGroupMockingExtension.GetNetworkVirtualAppliances " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.NetworkVirtualApplianceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of NetworkVirtualApplianceResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of NetworkVirtualApplianceResources and their operations over a NetworkVirtualApplianceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkWatcher">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.NetworkWatcherResource&gt; GetNetworkWatcher (string networkWatcherName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.NetworkWatcherResource&gt; GetNetworkWatcher(string networkWatcherName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetNetworkWatcher(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkWatcher (networkWatcherName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of NetworkWatcherResource)" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkWatcher : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.NetworkWatcherResource&gt;&#xA;override this.GetNetworkWatcher : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.NetworkWatcherResource&gt;" Usage="networkResourceGroupMockingExtension.GetNetworkWatcher (networkWatcherName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.NetworkWatcherResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkWatcherName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="networkWatcherName"> The name of the network watcher. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified network watcher by resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}</description></item><item><term>Operation Id</term><description>NetworkWatchers_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="networkWatcherName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="networkWatcherName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkWatcherAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkWatcherResource&gt;&gt; GetNetworkWatcherAsync (string networkWatcherName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.NetworkWatcherResource&gt;&gt; GetNetworkWatcherAsync(string networkWatcherName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetNetworkWatcherAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkWatcherAsync (networkWatcherName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of NetworkWatcherResource))" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkWatcherAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkWatcherResource&gt;&gt;&#xA;override this.GetNetworkWatcherAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkWatcherResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetNetworkWatcherAsync (networkWatcherName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.NetworkWatcherResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkWatcherName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="networkWatcherName"> The name of the network watcher. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified network watcher by resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}</description></item><item><term>Operation Id</term><description>NetworkWatchers_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="networkWatcherName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="networkWatcherName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkWatchers">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.NetworkWatcherCollection GetNetworkWatchers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.NetworkWatcherCollection GetNetworkWatchers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetNetworkWatchers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNetworkWatchers () As NetworkWatcherCollection" />
      <MemberSignature Language="F#" Value="abstract member GetNetworkWatchers : unit -&gt; Azure.ResourceManager.Network.NetworkWatcherCollection&#xA;override this.GetNetworkWatchers : unit -&gt; Azure.ResourceManager.Network.NetworkWatcherCollection" Usage="networkResourceGroupMockingExtension.GetNetworkWatchers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.NetworkWatcherCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of NetworkWatcherResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of NetworkWatcherResources and their operations over a NetworkWatcherResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetP2SVpnGateway">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.P2SVpnGatewayResource&gt; GetP2SVpnGateway (string gatewayName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.P2SVpnGatewayResource&gt; GetP2SVpnGateway(string gatewayName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetP2SVpnGateway(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetP2SVpnGateway (gatewayName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of P2SVpnGatewayResource)" />
      <MemberSignature Language="F#" Value="abstract member GetP2SVpnGateway : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.P2SVpnGatewayResource&gt;&#xA;override this.GetP2SVpnGateway : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.P2SVpnGatewayResource&gt;" Usage="networkResourceGroupMockingExtension.GetP2SVpnGateway (gatewayName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.P2SVpnGatewayResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gatewayName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="gatewayName"> The name of the gateway. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the details of a virtual wan p2s vpn gateway.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}</description></item><item><term>Operation Id</term><description>P2sVpnGateways_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="gatewayName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="gatewayName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetP2SVpnGatewayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.P2SVpnGatewayResource&gt;&gt; GetP2SVpnGatewayAsync (string gatewayName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.P2SVpnGatewayResource&gt;&gt; GetP2SVpnGatewayAsync(string gatewayName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetP2SVpnGatewayAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetP2SVpnGatewayAsync (gatewayName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of P2SVpnGatewayResource))" />
      <MemberSignature Language="F#" Value="abstract member GetP2SVpnGatewayAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.P2SVpnGatewayResource&gt;&gt;&#xA;override this.GetP2SVpnGatewayAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.P2SVpnGatewayResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetP2SVpnGatewayAsync (gatewayName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.P2SVpnGatewayResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gatewayName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="gatewayName"> The name of the gateway. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the details of a virtual wan p2s vpn gateway.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}</description></item><item><term>Operation Id</term><description>P2sVpnGateways_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="gatewayName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="gatewayName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetP2SVpnGateways">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.P2SVpnGatewayCollection GetP2SVpnGateways ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.P2SVpnGatewayCollection GetP2SVpnGateways() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetP2SVpnGateways" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetP2SVpnGateways () As P2SVpnGatewayCollection" />
      <MemberSignature Language="F#" Value="abstract member GetP2SVpnGateways : unit -&gt; Azure.ResourceManager.Network.P2SVpnGatewayCollection&#xA;override this.GetP2SVpnGateways : unit -&gt; Azure.ResourceManager.Network.P2SVpnGatewayCollection" Usage="networkResourceGroupMockingExtension.GetP2SVpnGateways " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.P2SVpnGatewayCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of P2SVpnGatewayResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of P2SVpnGatewayResources and their operations over a P2SVpnGatewayResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateEndpoint">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.PrivateEndpointResource&gt; GetPrivateEndpoint (string privateEndpointName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.PrivateEndpointResource&gt; GetPrivateEndpoint(string privateEndpointName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetPrivateEndpoint(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateEndpoint (privateEndpointName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PrivateEndpointResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateEndpoint : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.PrivateEndpointResource&gt;&#xA;override this.GetPrivateEndpoint : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.PrivateEndpointResource&gt;" Usage="networkResourceGroupMockingExtension.GetPrivateEndpoint (privateEndpointName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.PrivateEndpointResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateEndpointName"> The name of the private endpoint. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified private endpoint by resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}</description></item><item><term>Operation Id</term><description>PrivateEndpoints_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateEndpointName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateEndpointName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateEndpointAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.PrivateEndpointResource&gt;&gt; GetPrivateEndpointAsync (string privateEndpointName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.PrivateEndpointResource&gt;&gt; GetPrivateEndpointAsync(string privateEndpointName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetPrivateEndpointAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateEndpointAsync (privateEndpointName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PrivateEndpointResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateEndpointAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.PrivateEndpointResource&gt;&gt;&#xA;override this.GetPrivateEndpointAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.PrivateEndpointResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetPrivateEndpointAsync (privateEndpointName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.PrivateEndpointResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateEndpointName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="privateEndpointName"> The name of the private endpoint. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified private endpoint by resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}</description></item><item><term>Operation Id</term><description>PrivateEndpoints_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="privateEndpointName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="privateEndpointName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateEndpoints">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.PrivateEndpointCollection GetPrivateEndpoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.PrivateEndpointCollection GetPrivateEndpoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetPrivateEndpoints" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateEndpoints () As PrivateEndpointCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateEndpoints : unit -&gt; Azure.ResourceManager.Network.PrivateEndpointCollection&#xA;override this.GetPrivateEndpoints : unit -&gt; Azure.ResourceManager.Network.PrivateEndpointCollection" Usage="networkResourceGroupMockingExtension.GetPrivateEndpoints " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.PrivateEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of PrivateEndpointResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of PrivateEndpointResources and their operations over a PrivateEndpointResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateLinkService">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.PrivateLinkServiceResource&gt; GetPrivateLinkService (string serviceName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.PrivateLinkServiceResource&gt; GetPrivateLinkService(string serviceName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetPrivateLinkService(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateLinkService (serviceName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PrivateLinkServiceResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateLinkService : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.PrivateLinkServiceResource&gt;&#xA;override this.GetPrivateLinkService : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.PrivateLinkServiceResource&gt;" Usage="networkResourceGroupMockingExtension.GetPrivateLinkService (serviceName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.PrivateLinkServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serviceName"> The name of the private link service. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified private link service by resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}</description></item><item><term>Operation Id</term><description>PrivateLinkServices_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="serviceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serviceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateLinkServiceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.PrivateLinkServiceResource&gt;&gt; GetPrivateLinkServiceAsync (string serviceName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.PrivateLinkServiceResource&gt;&gt; GetPrivateLinkServiceAsync(string serviceName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetPrivateLinkServiceAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateLinkServiceAsync (serviceName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PrivateLinkServiceResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateLinkServiceAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.PrivateLinkServiceResource&gt;&gt;&#xA;override this.GetPrivateLinkServiceAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.PrivateLinkServiceResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetPrivateLinkServiceAsync (serviceName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.PrivateLinkServiceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serviceName"> The name of the private link service. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified private link service by resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}</description></item><item><term>Operation Id</term><description>PrivateLinkServices_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="serviceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serviceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateLinkServices">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.PrivateLinkServiceCollection GetPrivateLinkServices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.PrivateLinkServiceCollection GetPrivateLinkServices() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetPrivateLinkServices" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrivateLinkServices () As PrivateLinkServiceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPrivateLinkServices : unit -&gt; Azure.ResourceManager.Network.PrivateLinkServiceCollection&#xA;override this.GetPrivateLinkServices : unit -&gt; Azure.ResourceManager.Network.PrivateLinkServiceCollection" Usage="networkResourceGroupMockingExtension.GetPrivateLinkServices " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.PrivateLinkServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of PrivateLinkServiceResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of PrivateLinkServiceResources and their operations over a PrivateLinkServiceResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPublicIPAddress">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.PublicIPAddressResource&gt; GetPublicIPAddress (string publicIPAddressName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.PublicIPAddressResource&gt; GetPublicIPAddress(string publicIPAddressName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetPublicIPAddress(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPublicIPAddress (publicIPAddressName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PublicIPAddressResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPublicIPAddress : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.PublicIPAddressResource&gt;&#xA;override this.GetPublicIPAddress : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.PublicIPAddressResource&gt;" Usage="networkResourceGroupMockingExtension.GetPublicIPAddress (publicIPAddressName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.PublicIPAddressResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicIPAddressName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="publicIPAddressName"> The name of the public IP address. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified public IP address in a specified resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}</description></item><item><term>Operation Id</term><description>PublicIPAddresses_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="publicIPAddressName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="publicIPAddressName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicIPAddressAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.PublicIPAddressResource&gt;&gt; GetPublicIPAddressAsync (string publicIPAddressName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.PublicIPAddressResource&gt;&gt; GetPublicIPAddressAsync(string publicIPAddressName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetPublicIPAddressAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPublicIPAddressAsync (publicIPAddressName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PublicIPAddressResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPublicIPAddressAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.PublicIPAddressResource&gt;&gt;&#xA;override this.GetPublicIPAddressAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.PublicIPAddressResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetPublicIPAddressAsync (publicIPAddressName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.PublicIPAddressResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicIPAddressName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="publicIPAddressName"> The name of the public IP address. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified public IP address in a specified resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}</description></item><item><term>Operation Id</term><description>PublicIPAddresses_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="publicIPAddressName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="publicIPAddressName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicIPAddresses">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.PublicIPAddressCollection GetPublicIPAddresses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.PublicIPAddressCollection GetPublicIPAddresses() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetPublicIPAddresses" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPublicIPAddresses () As PublicIPAddressCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPublicIPAddresses : unit -&gt; Azure.ResourceManager.Network.PublicIPAddressCollection&#xA;override this.GetPublicIPAddresses : unit -&gt; Azure.ResourceManager.Network.PublicIPAddressCollection" Usage="networkResourceGroupMockingExtension.GetPublicIPAddresses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.PublicIPAddressCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of PublicIPAddressResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of PublicIPAddressResources and their operations over a PublicIPAddressResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPublicIPPrefix">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.PublicIPPrefixResource&gt; GetPublicIPPrefix (string publicIPPrefixName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.PublicIPPrefixResource&gt; GetPublicIPPrefix(string publicIPPrefixName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetPublicIPPrefix(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPublicIPPrefix (publicIPPrefixName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of PublicIPPrefixResource)" />
      <MemberSignature Language="F#" Value="abstract member GetPublicIPPrefix : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.PublicIPPrefixResource&gt;&#xA;override this.GetPublicIPPrefix : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.PublicIPPrefixResource&gt;" Usage="networkResourceGroupMockingExtension.GetPublicIPPrefix (publicIPPrefixName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.PublicIPPrefixResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicIPPrefixName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="publicIPPrefixName"> The name of the public IP prefix. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified public IP prefix in a specified resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIpPrefixName}</description></item><item><term>Operation Id</term><description>PublicIPPrefixes_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="publicIPPrefixName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="publicIPPrefixName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicIPPrefixAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.PublicIPPrefixResource&gt;&gt; GetPublicIPPrefixAsync (string publicIPPrefixName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.PublicIPPrefixResource&gt;&gt; GetPublicIPPrefixAsync(string publicIPPrefixName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetPublicIPPrefixAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPublicIPPrefixAsync (publicIPPrefixName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of PublicIPPrefixResource))" />
      <MemberSignature Language="F#" Value="abstract member GetPublicIPPrefixAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.PublicIPPrefixResource&gt;&gt;&#xA;override this.GetPublicIPPrefixAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.PublicIPPrefixResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetPublicIPPrefixAsync (publicIPPrefixName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.PublicIPPrefixResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicIPPrefixName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="publicIPPrefixName"> The name of the public IP prefix. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified public IP prefix in a specified resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIpPrefixName}</description></item><item><term>Operation Id</term><description>PublicIPPrefixes_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="publicIPPrefixName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="publicIPPrefixName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicIPPrefixes">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.PublicIPPrefixCollection GetPublicIPPrefixes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.PublicIPPrefixCollection GetPublicIPPrefixes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetPublicIPPrefixes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPublicIPPrefixes () As PublicIPPrefixCollection" />
      <MemberSignature Language="F#" Value="abstract member GetPublicIPPrefixes : unit -&gt; Azure.ResourceManager.Network.PublicIPPrefixCollection&#xA;override this.GetPublicIPPrefixes : unit -&gt; Azure.ResourceManager.Network.PublicIPPrefixCollection" Usage="networkResourceGroupMockingExtension.GetPublicIPPrefixes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.PublicIPPrefixCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of PublicIPPrefixResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of PublicIPPrefixResources and their operations over a PublicIPPrefixResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteFilter">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.RouteFilterResource&gt; GetRouteFilter (string routeFilterName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.RouteFilterResource&gt; GetRouteFilter(string routeFilterName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetRouteFilter(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRouteFilter (routeFilterName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RouteFilterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRouteFilter : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.RouteFilterResource&gt;&#xA;override this.GetRouteFilter : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.RouteFilterResource&gt;" Usage="networkResourceGroupMockingExtension.GetRouteFilter (routeFilterName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.RouteFilterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeFilterName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="routeFilterName"> The name of the route filter. </param>
        <param name="expand"> Expands referenced express route bgp peering resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified route filter.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}</description></item><item><term>Operation Id</term><description>RouteFilters_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="routeFilterName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="routeFilterName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRouteFilterAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.RouteFilterResource&gt;&gt; GetRouteFilterAsync (string routeFilterName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.RouteFilterResource&gt;&gt; GetRouteFilterAsync(string routeFilterName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetRouteFilterAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRouteFilterAsync (routeFilterName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RouteFilterResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRouteFilterAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.RouteFilterResource&gt;&gt;&#xA;override this.GetRouteFilterAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.RouteFilterResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetRouteFilterAsync (routeFilterName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.RouteFilterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeFilterName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="routeFilterName"> The name of the route filter. </param>
        <param name="expand"> Expands referenced express route bgp peering resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified route filter.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}</description></item><item><term>Operation Id</term><description>RouteFilters_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="routeFilterName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="routeFilterName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRouteFilters">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.RouteFilterCollection GetRouteFilters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.RouteFilterCollection GetRouteFilters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetRouteFilters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRouteFilters () As RouteFilterCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRouteFilters : unit -&gt; Azure.ResourceManager.Network.RouteFilterCollection&#xA;override this.GetRouteFilters : unit -&gt; Azure.ResourceManager.Network.RouteFilterCollection" Usage="networkResourceGroupMockingExtension.GetRouteFilters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.RouteFilterCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RouteFilterResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of RouteFilterResources and their operations over a RouteFilterResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteTable">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.RouteTableResource&gt; GetRouteTable (string routeTableName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.RouteTableResource&gt; GetRouteTable(string routeTableName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetRouteTable(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRouteTable (routeTableName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RouteTableResource)" />
      <MemberSignature Language="F#" Value="abstract member GetRouteTable : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.RouteTableResource&gt;&#xA;override this.GetRouteTable : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.RouteTableResource&gt;" Usage="networkResourceGroupMockingExtension.GetRouteTable (routeTableName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.RouteTableResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeTableName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="routeTableName"> The name of the route table. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified route table.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}</description></item><item><term>Operation Id</term><description>RouteTables_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="routeTableName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="routeTableName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRouteTableAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.RouteTableResource&gt;&gt; GetRouteTableAsync (string routeTableName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.RouteTableResource&gt;&gt; GetRouteTableAsync(string routeTableName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetRouteTableAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRouteTableAsync (routeTableName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RouteTableResource))" />
      <MemberSignature Language="F#" Value="abstract member GetRouteTableAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.RouteTableResource&gt;&gt;&#xA;override this.GetRouteTableAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.RouteTableResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetRouteTableAsync (routeTableName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.RouteTableResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeTableName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="routeTableName"> The name of the route table. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified route table.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}</description></item><item><term>Operation Id</term><description>RouteTables_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="routeTableName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="routeTableName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRouteTables">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.RouteTableCollection GetRouteTables ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.RouteTableCollection GetRouteTables() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetRouteTables" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRouteTables () As RouteTableCollection" />
      <MemberSignature Language="F#" Value="abstract member GetRouteTables : unit -&gt; Azure.ResourceManager.Network.RouteTableCollection&#xA;override this.GetRouteTables : unit -&gt; Azure.ResourceManager.Network.RouteTableCollection" Usage="networkResourceGroupMockingExtension.GetRouteTables " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.RouteTableCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of RouteTableResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of RouteTableResources and their operations over a RouteTableResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityPartnerProvider">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.SecurityPartnerProviderResource&gt; GetSecurityPartnerProvider (string securityPartnerProviderName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.SecurityPartnerProviderResource&gt; GetSecurityPartnerProvider(string securityPartnerProviderName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetSecurityPartnerProvider(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityPartnerProvider (securityPartnerProviderName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SecurityPartnerProviderResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityPartnerProvider : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.SecurityPartnerProviderResource&gt;&#xA;override this.GetSecurityPartnerProvider : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.SecurityPartnerProviderResource&gt;" Usage="networkResourceGroupMockingExtension.GetSecurityPartnerProvider (securityPartnerProviderName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.SecurityPartnerProviderResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityPartnerProviderName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="securityPartnerProviderName"> The name of the Security Partner Provider. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Security Partner Provider.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/securityPartnerProviders/{securityPartnerProviderName}</description></item><item><term>Operation Id</term><description>SecurityPartnerProviders_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="securityPartnerProviderName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securityPartnerProviderName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityPartnerProviderAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.SecurityPartnerProviderResource&gt;&gt; GetSecurityPartnerProviderAsync (string securityPartnerProviderName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.SecurityPartnerProviderResource&gt;&gt; GetSecurityPartnerProviderAsync(string securityPartnerProviderName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetSecurityPartnerProviderAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityPartnerProviderAsync (securityPartnerProviderName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SecurityPartnerProviderResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityPartnerProviderAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.SecurityPartnerProviderResource&gt;&gt;&#xA;override this.GetSecurityPartnerProviderAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.SecurityPartnerProviderResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetSecurityPartnerProviderAsync (securityPartnerProviderName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.SecurityPartnerProviderResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityPartnerProviderName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="securityPartnerProviderName"> The name of the Security Partner Provider. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Security Partner Provider.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/securityPartnerProviders/{securityPartnerProviderName}</description></item><item><term>Operation Id</term><description>SecurityPartnerProviders_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="securityPartnerProviderName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securityPartnerProviderName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityPartnerProviders">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.SecurityPartnerProviderCollection GetSecurityPartnerProviders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.SecurityPartnerProviderCollection GetSecurityPartnerProviders() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetSecurityPartnerProviders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityPartnerProviders () As SecurityPartnerProviderCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityPartnerProviders : unit -&gt; Azure.ResourceManager.Network.SecurityPartnerProviderCollection&#xA;override this.GetSecurityPartnerProviders : unit -&gt; Azure.ResourceManager.Network.SecurityPartnerProviderCollection" Usage="networkResourceGroupMockingExtension.GetSecurityPartnerProviders " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.SecurityPartnerProviderCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SecurityPartnerProviderResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of SecurityPartnerProviderResources and their operations over a SecurityPartnerProviderResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceEndpointPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.ServiceEndpointPolicyCollection GetServiceEndpointPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.ServiceEndpointPolicyCollection GetServiceEndpointPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetServiceEndpointPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceEndpointPolicies () As ServiceEndpointPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetServiceEndpointPolicies : unit -&gt; Azure.ResourceManager.Network.ServiceEndpointPolicyCollection&#xA;override this.GetServiceEndpointPolicies : unit -&gt; Azure.ResourceManager.Network.ServiceEndpointPolicyCollection" Usage="networkResourceGroupMockingExtension.GetServiceEndpointPolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.ServiceEndpointPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ServiceEndpointPolicyResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of ServiceEndpointPolicyResources and their operations over a ServiceEndpointPolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceEndpointPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.ServiceEndpointPolicyResource&gt; GetServiceEndpointPolicy (string serviceEndpointPolicyName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.ServiceEndpointPolicyResource&gt; GetServiceEndpointPolicy(string serviceEndpointPolicyName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetServiceEndpointPolicy(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceEndpointPolicy (serviceEndpointPolicyName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServiceEndpointPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceEndpointPolicy : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.ServiceEndpointPolicyResource&gt;&#xA;override this.GetServiceEndpointPolicy : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.ServiceEndpointPolicyResource&gt;" Usage="networkResourceGroupMockingExtension.GetServiceEndpointPolicy (serviceEndpointPolicyName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.ServiceEndpointPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceEndpointPolicyName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serviceEndpointPolicyName"> The name of the service endpoint policy. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified service Endpoint Policies in a specified resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}</description></item><item><term>Operation Id</term><description>ServiceEndpointPolicies_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="serviceEndpointPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serviceEndpointPolicyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceEndpointPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ServiceEndpointPolicyResource&gt;&gt; GetServiceEndpointPolicyAsync (string serviceEndpointPolicyName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.ServiceEndpointPolicyResource&gt;&gt; GetServiceEndpointPolicyAsync(string serviceEndpointPolicyName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetServiceEndpointPolicyAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceEndpointPolicyAsync (serviceEndpointPolicyName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServiceEndpointPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetServiceEndpointPolicyAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ServiceEndpointPolicyResource&gt;&gt;&#xA;override this.GetServiceEndpointPolicyAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ServiceEndpointPolicyResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetServiceEndpointPolicyAsync (serviceEndpointPolicyName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.ServiceEndpointPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceEndpointPolicyName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serviceEndpointPolicyName"> The name of the service endpoint policy. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified service Endpoint Policies in a specified resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}</description></item><item><term>Operation Id</term><description>ServiceEndpointPolicies_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="serviceEndpointPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serviceEndpointPolicyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualHub">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.VirtualHubResource&gt; GetVirtualHub (string virtualHubName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.VirtualHubResource&gt; GetVirtualHub(string virtualHubName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVirtualHub(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualHub (virtualHubName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualHubResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualHub : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.VirtualHubResource&gt;&#xA;override this.GetVirtualHub : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.VirtualHubResource&gt;" Usage="networkResourceGroupMockingExtension.GetVirtualHub (virtualHubName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.VirtualHubResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualHubName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualHubName"> The name of the VirtualHub. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the details of a VirtualHub.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}</description></item><item><term>Operation Id</term><description>VirtualHubs_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualHubName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualHubName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualHubAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualHubResource&gt;&gt; GetVirtualHubAsync (string virtualHubName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.VirtualHubResource&gt;&gt; GetVirtualHubAsync(string virtualHubName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVirtualHubAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualHubAsync (virtualHubName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualHubResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualHubAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualHubResource&gt;&gt;&#xA;override this.GetVirtualHubAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualHubResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetVirtualHubAsync (virtualHubName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualHubResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualHubName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualHubName"> The name of the VirtualHub. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the details of a VirtualHub.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}</description></item><item><term>Operation Id</term><description>VirtualHubs_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualHubName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualHubName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualHubs">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VirtualHubCollection GetVirtualHubs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VirtualHubCollection GetVirtualHubs() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVirtualHubs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualHubs () As VirtualHubCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualHubs : unit -&gt; Azure.ResourceManager.Network.VirtualHubCollection&#xA;override this.GetVirtualHubs : unit -&gt; Azure.ResourceManager.Network.VirtualHubCollection" Usage="networkResourceGroupMockingExtension.GetVirtualHubs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VirtualHubCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VirtualHubResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VirtualHubResources and their operations over a VirtualHubResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetwork">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkResource&gt; GetVirtualNetwork (string virtualNetworkName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.VirtualNetworkResource&gt; GetVirtualNetwork(string virtualNetworkName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVirtualNetwork(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetwork (virtualNetworkName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualNetworkResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetwork : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkResource&gt;&#xA;override this.GetVirtualNetwork : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkResource&gt;" Usage="networkResourceGroupMockingExtension.GetVirtualNetwork (virtualNetworkName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualNetworkName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualNetworkName"> The name of the virtual network. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified virtual network by resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}</description></item><item><term>Operation Id</term><description>VirtualNetworks_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualNetworkName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualNetworkName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkResource&gt;&gt; GetVirtualNetworkAsync (string virtualNetworkName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.VirtualNetworkResource&gt;&gt; GetVirtualNetworkAsync(string virtualNetworkName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVirtualNetworkAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkAsync (virtualNetworkName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualNetworkResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkResource&gt;&gt;&#xA;override this.GetVirtualNetworkAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetVirtualNetworkAsync (virtualNetworkName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualNetworkName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualNetworkName"> The name of the virtual network. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified virtual network by resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}</description></item><item><term>Operation Id</term><description>VirtualNetworks_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualNetworkName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualNetworkName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkGateway">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkGatewayResource&gt; GetVirtualNetworkGateway (string virtualNetworkGatewayName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.VirtualNetworkGatewayResource&gt; GetVirtualNetworkGateway(string virtualNetworkGatewayName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVirtualNetworkGateway(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkGateway (virtualNetworkGatewayName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualNetworkGatewayResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkGateway : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkGatewayResource&gt;&#xA;override this.GetVirtualNetworkGateway : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkGatewayResource&gt;" Usage="networkResourceGroupMockingExtension.GetVirtualNetworkGateway (virtualNetworkGatewayName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkGatewayResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualNetworkGatewayName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualNetworkGatewayName"> The name of the virtual network gateway. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified virtual network gateway by resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}</description></item><item><term>Operation Id</term><description>VirtualNetworkGateways_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualNetworkGatewayName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualNetworkGatewayName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkGatewayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkGatewayResource&gt;&gt; GetVirtualNetworkGatewayAsync (string virtualNetworkGatewayName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.VirtualNetworkGatewayResource&gt;&gt; GetVirtualNetworkGatewayAsync(string virtualNetworkGatewayName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVirtualNetworkGatewayAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkGatewayAsync (virtualNetworkGatewayName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualNetworkGatewayResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkGatewayAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkGatewayResource&gt;&gt;&#xA;override this.GetVirtualNetworkGatewayAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkGatewayResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetVirtualNetworkGatewayAsync (virtualNetworkGatewayName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkGatewayResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualNetworkGatewayName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualNetworkGatewayName"> The name of the virtual network gateway. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified virtual network gateway by resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}</description></item><item><term>Operation Id</term><description>VirtualNetworkGateways_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualNetworkGatewayName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualNetworkGatewayName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkGatewayConnection">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionResource&gt; GetVirtualNetworkGatewayConnection (string virtualNetworkGatewayConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionResource&gt; GetVirtualNetworkGatewayConnection(string virtualNetworkGatewayConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVirtualNetworkGatewayConnection(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkGatewayConnection (virtualNetworkGatewayConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualNetworkGatewayConnectionResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkGatewayConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionResource&gt;&#xA;override this.GetVirtualNetworkGatewayConnection : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionResource&gt;" Usage="networkResourceGroupMockingExtension.GetVirtualNetworkGatewayConnection (virtualNetworkGatewayConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualNetworkGatewayConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualNetworkGatewayConnectionName"> The name of the virtual network gateway connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified virtual network gateway connection by resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}</description></item><item><term>Operation Id</term><description>VirtualNetworkGatewayConnections_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualNetworkGatewayConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualNetworkGatewayConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkGatewayConnectionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionResource&gt;&gt; GetVirtualNetworkGatewayConnectionAsync (string virtualNetworkGatewayConnectionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionResource&gt;&gt; GetVirtualNetworkGatewayConnectionAsync(string virtualNetworkGatewayConnectionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVirtualNetworkGatewayConnectionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkGatewayConnectionAsync (virtualNetworkGatewayConnectionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualNetworkGatewayConnectionResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkGatewayConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionResource&gt;&gt;&#xA;override this.GetVirtualNetworkGatewayConnectionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetVirtualNetworkGatewayConnectionAsync (virtualNetworkGatewayConnectionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualNetworkGatewayConnectionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualNetworkGatewayConnectionName"> The name of the virtual network gateway connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified virtual network gateway connection by resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}</description></item><item><term>Operation Id</term><description>VirtualNetworkGatewayConnections_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualNetworkGatewayConnectionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualNetworkGatewayConnectionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkGatewayConnections">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionCollection GetVirtualNetworkGatewayConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionCollection GetVirtualNetworkGatewayConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVirtualNetworkGatewayConnections" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkGatewayConnections () As VirtualNetworkGatewayConnectionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkGatewayConnections : unit -&gt; Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionCollection&#xA;override this.GetVirtualNetworkGatewayConnections : unit -&gt; Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionCollection" Usage="networkResourceGroupMockingExtension.GetVirtualNetworkGatewayConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VirtualNetworkGatewayConnectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VirtualNetworkGatewayConnectionResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VirtualNetworkGatewayConnectionResources and their operations over a VirtualNetworkGatewayConnectionResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkGateways">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VirtualNetworkGatewayCollection GetVirtualNetworkGateways ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VirtualNetworkGatewayCollection GetVirtualNetworkGateways() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVirtualNetworkGateways" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkGateways () As VirtualNetworkGatewayCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkGateways : unit -&gt; Azure.ResourceManager.Network.VirtualNetworkGatewayCollection&#xA;override this.GetVirtualNetworkGateways : unit -&gt; Azure.ResourceManager.Network.VirtualNetworkGatewayCollection" Usage="networkResourceGroupMockingExtension.GetVirtualNetworkGateways " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VirtualNetworkGatewayCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VirtualNetworkGatewayResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VirtualNetworkGatewayResources and their operations over a VirtualNetworkGatewayResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworks">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VirtualNetworkCollection GetVirtualNetworks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VirtualNetworkCollection GetVirtualNetworks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVirtualNetworks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworks () As VirtualNetworkCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworks : unit -&gt; Azure.ResourceManager.Network.VirtualNetworkCollection&#xA;override this.GetVirtualNetworks : unit -&gt; Azure.ResourceManager.Network.VirtualNetworkCollection" Usage="networkResourceGroupMockingExtension.GetVirtualNetworks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VirtualNetworkCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VirtualNetworkResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VirtualNetworkResources and their operations over a VirtualNetworkResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkTap">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkTapResource&gt; GetVirtualNetworkTap (string tapName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.VirtualNetworkTapResource&gt; GetVirtualNetworkTap(string tapName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVirtualNetworkTap(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkTap (tapName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualNetworkTapResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkTap : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkTapResource&gt;&#xA;override this.GetVirtualNetworkTap : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkTapResource&gt;" Usage="networkResourceGroupMockingExtension.GetVirtualNetworkTap (tapName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkTapResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tapName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tapName"> The name of virtual network tap. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about the specified virtual network tap.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/{tapName}</description></item><item><term>Operation Id</term><description>VirtualNetworkTaps_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tapName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tapName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkTapAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkTapResource&gt;&gt; GetVirtualNetworkTapAsync (string tapName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.VirtualNetworkTapResource&gt;&gt; GetVirtualNetworkTapAsync(string tapName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVirtualNetworkTapAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkTapAsync (tapName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualNetworkTapResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkTapAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkTapResource&gt;&gt;&#xA;override this.GetVirtualNetworkTapAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkTapResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetVirtualNetworkTapAsync (tapName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualNetworkTapResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tapName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tapName"> The name of virtual network tap. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets information about the specified virtual network tap.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/{tapName}</description></item><item><term>Operation Id</term><description>VirtualNetworkTaps_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="tapName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tapName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkTaps">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VirtualNetworkTapCollection GetVirtualNetworkTaps ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VirtualNetworkTapCollection GetVirtualNetworkTaps() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVirtualNetworkTaps" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualNetworkTaps () As VirtualNetworkTapCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualNetworkTaps : unit -&gt; Azure.ResourceManager.Network.VirtualNetworkTapCollection&#xA;override this.GetVirtualNetworkTaps : unit -&gt; Azure.ResourceManager.Network.VirtualNetworkTapCollection" Usage="networkResourceGroupMockingExtension.GetVirtualNetworkTaps " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VirtualNetworkTapCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VirtualNetworkTapResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VirtualNetworkTapResources and their operations over a VirtualNetworkTapResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualRouter">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.VirtualRouterResource&gt; GetVirtualRouter (string virtualRouterName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.VirtualRouterResource&gt; GetVirtualRouter(string virtualRouterName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVirtualRouter(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualRouter (virtualRouterName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualRouterResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualRouter : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.VirtualRouterResource&gt;&#xA;override this.GetVirtualRouter : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.VirtualRouterResource&gt;" Usage="networkResourceGroupMockingExtension.GetVirtualRouter (virtualRouterName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.VirtualRouterResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualRouterName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualRouterName"> The name of the Virtual Router. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Virtual Router.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}</description></item><item><term>Operation Id</term><description>VirtualRouters_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualRouterName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualRouterName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualRouterAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualRouterResource&gt;&gt; GetVirtualRouterAsync (string virtualRouterName, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.VirtualRouterResource&gt;&gt; GetVirtualRouterAsync(string virtualRouterName, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVirtualRouterAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualRouterAsync (virtualRouterName As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualRouterResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualRouterAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualRouterResource&gt;&gt;&#xA;override this.GetVirtualRouterAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualRouterResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetVirtualRouterAsync (virtualRouterName, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualRouterResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualRouterName" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualRouterName"> The name of the Virtual Router. </param>
        <param name="expand"> Expands referenced resources. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified Virtual Router.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}</description></item><item><term>Operation Id</term><description>VirtualRouters_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualRouterName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualRouterName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualRouters">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VirtualRouterCollection GetVirtualRouters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VirtualRouterCollection GetVirtualRouters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVirtualRouters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualRouters () As VirtualRouterCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualRouters : unit -&gt; Azure.ResourceManager.Network.VirtualRouterCollection&#xA;override this.GetVirtualRouters : unit -&gt; Azure.ResourceManager.Network.VirtualRouterCollection" Usage="networkResourceGroupMockingExtension.GetVirtualRouters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VirtualRouterCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VirtualRouterResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VirtualRouterResources and their operations over a VirtualRouterResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWan">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.VirtualWanResource&gt; GetVirtualWan (string virtualWanName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.VirtualWanResource&gt; GetVirtualWan(string virtualWanName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVirtualWan(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualWan (virtualWanName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualWanResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualWan : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.VirtualWanResource&gt;&#xA;override this.GetVirtualWan : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.VirtualWanResource&gt;" Usage="networkResourceGroupMockingExtension.GetVirtualWan (virtualWanName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.VirtualWanResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualWanName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualWanName"> The name of the VirtualWAN being retrieved. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the details of a VirtualWAN.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{VirtualWANName}</description></item><item><term>Operation Id</term><description>VirtualWans_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualWanName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualWanName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWanAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualWanResource&gt;&gt; GetVirtualWanAsync (string virtualWanName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.VirtualWanResource&gt;&gt; GetVirtualWanAsync(string virtualWanName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVirtualWanAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualWanAsync (virtualWanName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualWanResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualWanAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualWanResource&gt;&gt;&#xA;override this.GetVirtualWanAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualWanResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetVirtualWanAsync (virtualWanName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VirtualWanResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualWanName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="virtualWanName"> The name of the VirtualWAN being retrieved. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the details of a VirtualWAN.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{VirtualWANName}</description></item><item><term>Operation Id</term><description>VirtualWans_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualWanName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualWanName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWans">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VirtualWanCollection GetVirtualWans ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VirtualWanCollection GetVirtualWans() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVirtualWans" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualWans () As VirtualWanCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualWans : unit -&gt; Azure.ResourceManager.Network.VirtualWanCollection&#xA;override this.GetVirtualWans : unit -&gt; Azure.ResourceManager.Network.VirtualWanCollection" Usage="networkResourceGroupMockingExtension.GetVirtualWans " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VirtualWanCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VirtualWanResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VirtualWanResources and their operations over a VirtualWanResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVpnGateway">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.VpnGatewayResource&gt; GetVpnGateway (string gatewayName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.VpnGatewayResource&gt; GetVpnGateway(string gatewayName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVpnGateway(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVpnGateway (gatewayName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VpnGatewayResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVpnGateway : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.VpnGatewayResource&gt;&#xA;override this.GetVpnGateway : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.VpnGatewayResource&gt;" Usage="networkResourceGroupMockingExtension.GetVpnGateway (gatewayName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.VpnGatewayResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gatewayName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="gatewayName"> The name of the gateway. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the details of a virtual wan vpn gateway.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}</description></item><item><term>Operation Id</term><description>VpnGateways_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="gatewayName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="gatewayName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVpnGatewayAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VpnGatewayResource&gt;&gt; GetVpnGatewayAsync (string gatewayName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.VpnGatewayResource&gt;&gt; GetVpnGatewayAsync(string gatewayName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVpnGatewayAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVpnGatewayAsync (gatewayName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VpnGatewayResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVpnGatewayAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VpnGatewayResource&gt;&gt;&#xA;override this.GetVpnGatewayAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VpnGatewayResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetVpnGatewayAsync (gatewayName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VpnGatewayResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gatewayName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="gatewayName"> The name of the gateway. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the details of a virtual wan vpn gateway.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}</description></item><item><term>Operation Id</term><description>VpnGateways_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="gatewayName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="gatewayName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVpnGateways">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VpnGatewayCollection GetVpnGateways ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VpnGatewayCollection GetVpnGateways() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVpnGateways" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVpnGateways () As VpnGatewayCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVpnGateways : unit -&gt; Azure.ResourceManager.Network.VpnGatewayCollection&#xA;override this.GetVpnGateways : unit -&gt; Azure.ResourceManager.Network.VpnGatewayCollection" Usage="networkResourceGroupMockingExtension.GetVpnGateways " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VpnGatewayCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VpnGatewayResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VpnGatewayResources and their operations over a VpnGatewayResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVpnServerConfiguration">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.VpnServerConfigurationResource&gt; GetVpnServerConfiguration (string vpnServerConfigurationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.VpnServerConfigurationResource&gt; GetVpnServerConfiguration(string vpnServerConfigurationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVpnServerConfiguration(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVpnServerConfiguration (vpnServerConfigurationName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VpnServerConfigurationResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVpnServerConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.VpnServerConfigurationResource&gt;&#xA;override this.GetVpnServerConfiguration : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.VpnServerConfigurationResource&gt;" Usage="networkResourceGroupMockingExtension.GetVpnServerConfiguration (vpnServerConfigurationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.VpnServerConfigurationResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vpnServerConfigurationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vpnServerConfigurationName"> The name of the VpnServerConfiguration being retrieved. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the details of a VpnServerConfiguration.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}</description></item><item><term>Operation Id</term><description>VpnServerConfigurations_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vpnServerConfigurationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vpnServerConfigurationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVpnServerConfigurationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VpnServerConfigurationResource&gt;&gt; GetVpnServerConfigurationAsync (string vpnServerConfigurationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.VpnServerConfigurationResource&gt;&gt; GetVpnServerConfigurationAsync(string vpnServerConfigurationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVpnServerConfigurationAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVpnServerConfigurationAsync (vpnServerConfigurationName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VpnServerConfigurationResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVpnServerConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VpnServerConfigurationResource&gt;&gt;&#xA;override this.GetVpnServerConfigurationAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VpnServerConfigurationResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetVpnServerConfigurationAsync (vpnServerConfigurationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VpnServerConfigurationResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vpnServerConfigurationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vpnServerConfigurationName"> The name of the VpnServerConfiguration being retrieved. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the details of a VpnServerConfiguration.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}</description></item><item><term>Operation Id</term><description>VpnServerConfigurations_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vpnServerConfigurationName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vpnServerConfigurationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVpnServerConfigurations">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VpnServerConfigurationCollection GetVpnServerConfigurations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VpnServerConfigurationCollection GetVpnServerConfigurations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVpnServerConfigurations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVpnServerConfigurations () As VpnServerConfigurationCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVpnServerConfigurations : unit -&gt; Azure.ResourceManager.Network.VpnServerConfigurationCollection&#xA;override this.GetVpnServerConfigurations : unit -&gt; Azure.ResourceManager.Network.VpnServerConfigurationCollection" Usage="networkResourceGroupMockingExtension.GetVpnServerConfigurations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VpnServerConfigurationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VpnServerConfigurationResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VpnServerConfigurationResources and their operations over a VpnServerConfigurationResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVpnSite">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.VpnSiteResource&gt; GetVpnSite (string vpnSiteName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.VpnSiteResource&gt; GetVpnSite(string vpnSiteName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVpnSite(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVpnSite (vpnSiteName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VpnSiteResource)" />
      <MemberSignature Language="F#" Value="abstract member GetVpnSite : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.VpnSiteResource&gt;&#xA;override this.GetVpnSite : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.VpnSiteResource&gt;" Usage="networkResourceGroupMockingExtension.GetVpnSite (vpnSiteName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.VpnSiteResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vpnSiteName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vpnSiteName"> The name of the VpnSite being retrieved. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the details of a VPN site.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}</description></item><item><term>Operation Id</term><description>VpnSites_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vpnSiteName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vpnSiteName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVpnSiteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VpnSiteResource&gt;&gt; GetVpnSiteAsync (string vpnSiteName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.VpnSiteResource&gt;&gt; GetVpnSiteAsync(string vpnSiteName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVpnSiteAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVpnSiteAsync (vpnSiteName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VpnSiteResource))" />
      <MemberSignature Language="F#" Value="abstract member GetVpnSiteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VpnSiteResource&gt;&gt;&#xA;override this.GetVpnSiteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VpnSiteResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetVpnSiteAsync (vpnSiteName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.VpnSiteResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vpnSiteName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="vpnSiteName"> The name of the VpnSite being retrieved. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieves the details of a VPN site.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}</description></item><item><term>Operation Id</term><description>VpnSites_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vpnSiteName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vpnSiteName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVpnSites">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.VpnSiteCollection GetVpnSites ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.VpnSiteCollection GetVpnSites() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetVpnSites" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVpnSites () As VpnSiteCollection" />
      <MemberSignature Language="F#" Value="abstract member GetVpnSites : unit -&gt; Azure.ResourceManager.Network.VpnSiteCollection&#xA;override this.GetVpnSites : unit -&gt; Azure.ResourceManager.Network.VpnSiteCollection" Usage="networkResourceGroupMockingExtension.GetVpnSites " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.VpnSiteCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of VpnSiteResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of VpnSiteResources and their operations over a VpnSiteResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebApplicationFirewallPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Network.WebApplicationFirewallPolicyCollection GetWebApplicationFirewallPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Network.WebApplicationFirewallPolicyCollection GetWebApplicationFirewallPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetWebApplicationFirewallPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWebApplicationFirewallPolicies () As WebApplicationFirewallPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetWebApplicationFirewallPolicies : unit -&gt; Azure.ResourceManager.Network.WebApplicationFirewallPolicyCollection&#xA;override this.GetWebApplicationFirewallPolicies : unit -&gt; Azure.ResourceManager.Network.WebApplicationFirewallPolicyCollection" Usage="networkResourceGroupMockingExtension.GetWebApplicationFirewallPolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Network.WebApplicationFirewallPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of WebApplicationFirewallPolicyResources in the ResourceGroupResource. </summary>
        <returns> An object representing collection of WebApplicationFirewallPolicyResources and their operations over a WebApplicationFirewallPolicyResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebApplicationFirewallPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource&gt; GetWebApplicationFirewallPolicy (string policyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource&gt; GetWebApplicationFirewallPolicy(string policyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetWebApplicationFirewallPolicy(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWebApplicationFirewallPolicy (policyName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of WebApplicationFirewallPolicyResource)" />
      <MemberSignature Language="F#" Value="abstract member GetWebApplicationFirewallPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource&gt;&#xA;override this.GetWebApplicationFirewallPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource&gt;" Usage="networkResourceGroupMockingExtension.GetWebApplicationFirewallPolicy (policyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="policyName"> The name of the policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve protection policy with specified name within a resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/{policyName}</description></item><item><term>Operation Id</term><description>WebApplicationFirewallPolicies_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="policyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="policyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWebApplicationFirewallPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource&gt;&gt; GetWebApplicationFirewallPolicyAsync (string policyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource&gt;&gt; GetWebApplicationFirewallPolicyAsync(string policyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Network.Mocking.NetworkResourceGroupMockingExtension.GetWebApplicationFirewallPolicyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWebApplicationFirewallPolicyAsync (policyName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of WebApplicationFirewallPolicyResource))" />
      <MemberSignature Language="F#" Value="abstract member GetWebApplicationFirewallPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource&gt;&gt;&#xA;override this.GetWebApplicationFirewallPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource&gt;&gt;" Usage="networkResourceGroupMockingExtension.GetWebApplicationFirewallPolicyAsync (policyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Network</AssemblyName>
        <AssemblyVersion>1.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Network.WebApplicationFirewallPolicyResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="policyName"> The name of the policy. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Retrieve protection policy with specified name within a resource group.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/{policyName}</description></item><item><term>Operation Id</term><description>WebApplicationFirewallPolicies_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="policyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="policyName" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
