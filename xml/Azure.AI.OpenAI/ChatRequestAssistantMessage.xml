<Type Name="ChatRequestAssistantMessage" FullName="Azure.AI.OpenAI.ChatRequestAssistantMessage">
  <TypeSignature Language="C#" Value="public class ChatRequestAssistantMessage : Azure.AI.OpenAI.ChatRequestMessage, System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;, System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChatRequestAssistantMessage extends Azure.AI.OpenAI.ChatRequestMessage implements class System.ClientModel.Primitives.IJsonModel`1&lt;class Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;, class System.ClientModel.Primitives.IPersistableModel`1&lt;class Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.OpenAI.ChatRequestAssistantMessage" />
  <TypeSignature Language="VB.NET" Value="Public Class ChatRequestAssistantMessage&#xA;Inherits ChatRequestMessage&#xA;Implements IJsonModel(Of ChatRequestAssistantMessage), IPersistableModel(Of ChatRequestAssistantMessage)" />
  <TypeSignature Language="F#" Value="type ChatRequestAssistantMessage = class&#xA;    inherit ChatRequestMessage&#xA;    interface IJsonModel&lt;ChatRequestAssistantMessage&gt;&#xA;    interface IPersistableModel&lt;ChatRequestAssistantMessage&gt;" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.OpenAI</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.AI.OpenAI.ChatRequestMessage</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ClientModel.Primitives.IPersistableModel&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary> A request chat message representing response or action from the assistant. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatRequestAssistantMessage (Azure.AI.OpenAI.ChatResponseMessage responseMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Azure.AI.OpenAI.ChatResponseMessage responseMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.ChatRequestAssistantMessage.#ctor(Azure.AI.OpenAI.ChatResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (responseMessage As ChatResponseMessage)" />
      <MemberSignature Language="F#" Value="new Azure.AI.OpenAI.ChatRequestAssistantMessage : Azure.AI.OpenAI.ChatResponseMessage -&gt; Azure.AI.OpenAI.ChatRequestAssistantMessage" Usage="new Azure.AI.OpenAI.ChatRequestAssistantMessage responseMessage" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="responseMessage" Type="Azure.AI.OpenAI.ChatResponseMessage" />
      </Parameters>
      <Docs>
        <param name="responseMessage"> The <see cref="T:Azure.AI.OpenAI.ChatResponseMessage" /> to replicate from. </param>
        <summary>
            Initializes a new instance of <see cref="T:Azure.AI.OpenAI.ChatRequestAssistantMessage" /> from a prior <see cref="T:Azure.AI.OpenAI.ChatResponseMessage" />
            instance from the Assistant.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="responseMessage" /> is not a valid response message to use.
            </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChatRequestAssistantMessage (string content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.ChatRequestAssistantMessage.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (content As String)" />
      <MemberSignature Language="F#" Value="new Azure.AI.OpenAI.ChatRequestAssistantMessage : string -&gt; Azure.AI.OpenAI.ChatRequestAssistantMessage" Usage="new Azure.AI.OpenAI.ChatRequestAssistantMessage content" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content"> The content of the message. </param>
        <summary> Initializes a new instance of <see cref="T:Azure.AI.OpenAI.ChatRequestAssistantMessage" />. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public string Content { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Content" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.ChatRequestAssistantMessage.Content" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Content As String" />
      <MemberSignature Language="F#" Value="member this.Content : string" Usage="Azure.AI.OpenAI.ChatRequestAssistantMessage.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The content of the message. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FunctionCall">
      <MemberSignature Language="C#" Value="public Azure.AI.OpenAI.FunctionCall FunctionCall { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.AI.OpenAI.FunctionCall FunctionCall" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.ChatRequestAssistantMessage.FunctionCall" />
      <MemberSignature Language="VB.NET" Value="Public Property FunctionCall As FunctionCall" />
      <MemberSignature Language="F#" Value="member this.FunctionCall : Azure.AI.OpenAI.FunctionCall with get, set" Usage="Azure.AI.OpenAI.ChatRequestAssistantMessage.FunctionCall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.FunctionCall</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The function call that must be resolved and have its output appended to subsequent input messages for the chat
            completions request to resolve as configured.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.ChatRequestAssistantMessage.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Azure.AI.OpenAI.ChatRequestAssistantMessage.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> An optional name for the participant. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.OpenAI.ChatRequestAssistantMessage IJsonModel&lt;ChatRequestAssistantMessage&gt;.Create (ref System.Text.Json.Utf8JsonReader reader, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.OpenAI.ChatRequestAssistantMessage System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.Create(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.ChatRequestAssistantMessage.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#OpenAI#ChatRequestAssistantMessage&gt;#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (ByRef reader As Utf8JsonReader, options As ModelReaderWriterOptions) As ChatRequestAssistantMessage Implements IJsonModel(Of ChatRequestAssistantMessage).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.ChatRequestAssistantMessage&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.Create : Utf8JsonReader * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.ChatRequestAssistantMessage" Usage="chatRequestAssistantMessage.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.Create (reader, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.ChatRequestAssistantMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the JSON value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.Write">
      <MemberSignature Language="C#" Value="void IJsonModel&lt;ChatRequestAssistantMessage&gt;.Write (System.Text.Json.Utf8JsonWriter writer, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.Write(class System.Text.Json.Utf8JsonWriter writer, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.ChatRequestAssistantMessage.System#ClientModel#Primitives#IJsonModel&lt;Azure#AI#OpenAI#ChatRequestAssistantMessage&gt;#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Sub Write (writer As Utf8JsonWriter, options As ModelReaderWriterOptions) Implements IJsonModel(Of ChatRequestAssistantMessage).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit&#xA;override this.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.Write : System.Text.Json.Utf8JsonWriter * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; unit" Usage="chatRequestAssistantMessage.System.ClientModel.Primitives.IJsonModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.Write (writer, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IJsonModel`1.Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.Create">
      <MemberSignature Language="C#" Value="Azure.AI.OpenAI.ChatRequestAssistantMessage IPersistableModel&lt;ChatRequestAssistantMessage&gt;.Create (BinaryData data, System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Azure.AI.OpenAI.ChatRequestAssistantMessage System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.Create(class System.BinaryData data, class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.ChatRequestAssistantMessage.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#OpenAI#ChatRequestAssistantMessage&gt;#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Create (data As BinaryData, options As ModelReaderWriterOptions) As ChatRequestAssistantMessage Implements IPersistableModel(Of ChatRequestAssistantMessage).Create" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.ChatRequestAssistantMessage&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.Create : BinaryData * System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; Azure.AI.OpenAI.ChatRequestAssistantMessage" Usage="chatRequestAssistantMessage.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.Create (data, options)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.OpenAI.ChatRequestAssistantMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.BinaryData" />
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="data">The <see cref="T:System.BinaryData" /> to parse.</param>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary>
        <returns>A <typeparamref name="T" /> representation of the data.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.GetFormatFromOptions">
      <MemberSignature Language="C#" Value="string IPersistableModel&lt;ChatRequestAssistantMessage&gt;.GetFormatFromOptions (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.GetFormatFromOptions(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.ChatRequestAssistantMessage.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#OpenAI#ChatRequestAssistantMessage&gt;#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function GetFormatFromOptions (options As ModelReaderWriterOptions) As String Implements IPersistableModel(Of ChatRequestAssistantMessage).GetFormatFromOptions" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.GetFormatFromOptions : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; string" Usage="chatRequestAssistantMessage.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.GetFormatFromOptions options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary>
        <returns>The format that the model uses when communicating with the serivce.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.Write">
      <MemberSignature Language="C#" Value="BinaryData IPersistableModel&lt;ChatRequestAssistantMessage&gt;.Write (System.ClientModel.Primitives.ModelReaderWriterOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.BinaryData System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.Write(class System.ClientModel.Primitives.ModelReaderWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.OpenAI.ChatRequestAssistantMessage.System#ClientModel#Primitives#IPersistableModel&lt;Azure#AI#OpenAI#ChatRequestAssistantMessage&gt;#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Function Write (options As ModelReaderWriterOptions) As BinaryData Implements IPersistableModel(Of ChatRequestAssistantMessage).Write" />
      <MemberSignature Language="F#" Value="abstract member System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData&#xA;override this.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.Write : System.ClientModel.Primitives.ModelReaderWriterOptions -&gt; BinaryData" Usage="chatRequestAssistantMessage.System.ClientModel.Primitives.IPersistableModel&lt;Azure.AI.OpenAI.ChatRequestAssistantMessage&gt;.Write options" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ClientModel.Primitives.IPersistableModel`1.Write(System.ClientModel.Primitives.ModelReaderWriterOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.BinaryData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.ClientModel.Primitives.ModelReaderWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param>
        <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary>
        <returns>A binary representation of the written model.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToolCalls">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Azure.AI.OpenAI.ChatCompletionsToolCall&gt; ToolCalls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Azure.AI.OpenAI.ChatCompletionsToolCall&gt; ToolCalls" />
      <MemberSignature Language="DocId" Value="P:Azure.AI.OpenAI.ChatRequestAssistantMessage.ToolCalls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolCalls As IList(Of ChatCompletionsToolCall)" />
      <MemberSignature Language="F#" Value="member this.ToolCalls : System.Collections.Generic.IList&lt;Azure.AI.OpenAI.ChatCompletionsToolCall&gt;" Usage="Azure.AI.OpenAI.ChatRequestAssistantMessage.ToolCalls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.OpenAI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Azure.AI.OpenAI.ChatCompletionsToolCall&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The tool calls that must be resolved and have their outputs appended to subsequent input messages for the chat
            completions request to resolve as configured.
            Please note <see cref="T:Azure.AI.OpenAI.ChatCompletionsToolCall" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.AI.OpenAI.ChatCompletionsFunctionToolCall" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
