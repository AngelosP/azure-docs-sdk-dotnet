<Type Name="PercentageFilter" FullName="Microsoft.FeatureManagement.FeatureFilters.PercentageFilter">
  <TypeSignature Language="C#" Value="public class PercentageFilter : Microsoft.FeatureManagement.IFeatureFilter, Microsoft.FeatureManagement.IFilterParametersBinder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PercentageFilter extends System.Object implements class Microsoft.FeatureManagement.IFeatureFilter, class Microsoft.FeatureManagement.IFeatureFilterMetadata, class Microsoft.FeatureManagement.IFilterParametersBinder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.FeatureManagement.FeatureFilters.PercentageFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class PercentageFilter&#xA;Implements IFeatureFilter, IFilterParametersBinder" />
  <TypeSignature Language="F#" Value="type PercentageFilter = class&#xA;    interface IFeatureFilter&#xA;    interface IFeatureFilterMetadata&#xA;    interface IFilterParametersBinder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.FeatureManagement</AssemblyName>
    <AssemblyVersion>2.5.1.0</AssemblyVersion>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.FeatureManagement.IFeatureFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.FeatureManagement.IFeatureFilterMetadata</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.FeatureManagement.IFilterParametersBinder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.FeatureManagement.FilterAlias("Microsoft.Percentage")]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.FeatureManagement.FilterAlias("Microsoft.Percentage")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            A feature filter that can be used to activate a feature based on a random percentage.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PercentageFilter (Microsoft.Extensions.Logging.ILoggerFactory loggerFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FeatureManagement.FeatureFilters.PercentageFilter.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (loggerFactory As ILoggerFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.FeatureManagement.FeatureFilters.PercentageFilter : Microsoft.Extensions.Logging.ILoggerFactory -&gt; Microsoft.FeatureManagement.FeatureFilters.PercentageFilter" Usage="new Microsoft.FeatureManagement.FeatureFilters.PercentageFilter loggerFactory" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.FeatureManagement</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" />
      </Parameters>
      <Docs>
        <param name="loggerFactory">A logger factory for creating loggers.</param>
        <summary>
            Creates a percentage based feature filter.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindParameters">
      <MemberSignature Language="C#" Value="public object BindParameters (Microsoft.Extensions.Configuration.IConfiguration filterParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BindParameters(class Microsoft.Extensions.Configuration.IConfiguration filterParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FeatureManagement.FeatureFilters.PercentageFilter.BindParameters(Microsoft.Extensions.Configuration.IConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindParameters (filterParameters As IConfiguration) As Object" />
      <MemberSignature Language="F#" Value="abstract member BindParameters : Microsoft.Extensions.Configuration.IConfiguration -&gt; obj&#xA;override this.BindParameters : Microsoft.Extensions.Configuration.IConfiguration -&gt; obj" Usage="percentageFilter.BindParameters filterParameters" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.FeatureManagement.IFilterParametersBinder.BindParameters(Microsoft.Extensions.Configuration.IConfiguration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.FeatureManagement</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterParameters" Type="Microsoft.Extensions.Configuration.IConfiguration" />
      </Parameters>
      <Docs>
        <param name="filterParameters">The configuration representing filter parameters that should be bound to <see cref="T:Microsoft.FeatureManagement.FeatureFilters.PercentageFilterSettings" />.</param>
        <summary>
            Binds configuration representing filter parameters to <see cref="T:Microsoft.FeatureManagement.FeatureFilters.PercentageFilterSettings" />.
            </summary>
        <returns>
          <see cref="T:Microsoft.FeatureManagement.FeatureFilters.PercentageFilterSettings" /> that can later be used in feature evaluation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; EvaluateAsync (Microsoft.FeatureManagement.FeatureFilterEvaluationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; EvaluateAsync(class Microsoft.FeatureManagement.FeatureFilterEvaluationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FeatureManagement.FeatureFilters.PercentageFilter.EvaluateAsync(Microsoft.FeatureManagement.FeatureFilterEvaluationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function EvaluateAsync (context As FeatureFilterEvaluationContext) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member EvaluateAsync : Microsoft.FeatureManagement.FeatureFilterEvaluationContext -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.EvaluateAsync : Microsoft.FeatureManagement.FeatureFilterEvaluationContext -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="percentageFilter.EvaluateAsync context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.FeatureManagement.IFeatureFilter.EvaluateAsync(Microsoft.FeatureManagement.FeatureFilterEvaluationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.FeatureManagement</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.FeatureManagement.FeatureFilterEvaluationContext" />
      </Parameters>
      <Docs>
        <param name="context">The feature evaluation context.</param>
        <summary>
            Performs a percentage based evaluation to determine whether a feature is enabled.
            </summary>
        <returns>True if the feature is enabled, false otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
