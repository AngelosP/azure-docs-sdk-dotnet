<Type Name="ChaosExtensions" FullName="Azure.ResourceManager.Chaos.ChaosExtensions">
  <TypeSignature Language="C#" Value="public static class ChaosExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ChaosExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Chaos.ChaosExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ChaosExtensions" />
  <TypeSignature Language="F#" Value="type ChaosExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.Chaos. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCapabilityResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Chaos.CapabilityResource GetCapabilityResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Chaos.CapabilityResource GetCapabilityResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetCapabilityResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCapabilityResource (client As ArmClient, id As ResourceIdentifier) As CapabilityResource" />
      <MemberSignature Language="F#" Value="static member GetCapabilityResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.CapabilityResource" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetCapabilityResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.CapabilityResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Chaos.CapabilityResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Chaos.CapabilityResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Chaos.CapabilityResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosArmClient.GetCapabilityResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Chaos.CapabilityResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCapabilityTypeResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Chaos.CapabilityTypeResource GetCapabilityTypeResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Chaos.CapabilityTypeResource GetCapabilityTypeResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetCapabilityTypeResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCapabilityTypeResource (client As ArmClient, id As ResourceIdentifier) As CapabilityTypeResource" />
      <MemberSignature Language="F#" Value="static member GetCapabilityTypeResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.CapabilityTypeResource" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetCapabilityTypeResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.CapabilityTypeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Chaos.CapabilityTypeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Chaos.CapabilityTypeResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Chaos.CapabilityTypeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosArmClient.GetCapabilityTypeResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Chaos.CapabilityTypeResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChaosCapabilityResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Chaos.ChaosCapabilityResource GetChaosCapabilityResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Chaos.ChaosCapabilityResource GetChaosCapabilityResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosCapabilityResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChaosCapabilityResource (client As ArmClient, id As ResourceIdentifier) As ChaosCapabilityResource" />
      <MemberSignature Language="F#" Value="static member GetChaosCapabilityResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.ChaosCapabilityResource" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosCapabilityResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.ChaosCapabilityResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Chaos.ChaosCapabilityResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Chaos.ChaosCapabilityResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Chaos.ChaosCapabilityResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosArmClient.GetChaosCapabilityResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Chaos.ChaosCapabilityResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChaosCapabilityTypeResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Chaos.ChaosCapabilityTypeResource GetChaosCapabilityTypeResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Chaos.ChaosCapabilityTypeResource GetChaosCapabilityTypeResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosCapabilityTypeResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChaosCapabilityTypeResource (client As ArmClient, id As ResourceIdentifier) As ChaosCapabilityTypeResource" />
      <MemberSignature Language="F#" Value="static member GetChaosCapabilityTypeResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.ChaosCapabilityTypeResource" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosCapabilityTypeResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.ChaosCapabilityTypeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Chaos.ChaosCapabilityTypeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Chaos.ChaosCapabilityTypeResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Chaos.ChaosCapabilityTypeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosArmClient.GetChaosCapabilityTypeResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Chaos.ChaosCapabilityTypeResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChaosExperiment">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosExperimentResource&gt; GetChaosExperiment (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string experimentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Chaos.ChaosExperimentResource&gt; GetChaosExperiment(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string experimentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosExperiment(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChaosExperiment (resourceGroupResource As ResourceGroupResource, experimentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ChaosExperimentResource)" />
      <MemberSignature Language="F#" Value="static member GetChaosExperiment : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosExperimentResource&gt;" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosExperiment (resourceGroupResource, experimentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosExperimentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="experimentName" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="experimentName"> String that represents a Experiment resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Experiment resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Chaos/experiments/{experimentName}</description></item><item><term>Operation Id</term><description>Experiments_Get</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Chaos.ChaosExperimentResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosResourceGroupResource.GetChaosExperiment(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="experimentName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="experimentName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChaosExperimentAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosExperimentResource&gt;&gt; GetChaosExperimentAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string experimentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Chaos.ChaosExperimentResource&gt;&gt; GetChaosExperimentAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string experimentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosExperimentAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChaosExperimentAsync (resourceGroupResource As ResourceGroupResource, experimentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ChaosExperimentResource))" />
      <MemberSignature Language="F#" Value="static member GetChaosExperimentAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosExperimentResource&gt;&gt;" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosExperimentAsync (resourceGroupResource, experimentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosExperimentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="experimentName" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="experimentName"> String that represents a Experiment resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Experiment resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Chaos/experiments/{experimentName}</description></item><item><term>Operation Id</term><description>Experiments_Get</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Chaos.ChaosExperimentResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosResourceGroupResource.GetChaosExperimentAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="experimentName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="experimentName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChaosExperimentExecutionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Chaos.ChaosExperimentExecutionResource GetChaosExperimentExecutionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Chaos.ChaosExperimentExecutionResource GetChaosExperimentExecutionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosExperimentExecutionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChaosExperimentExecutionResource (client As ArmClient, id As ResourceIdentifier) As ChaosExperimentExecutionResource" />
      <MemberSignature Language="F#" Value="static member GetChaosExperimentExecutionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.ChaosExperimentExecutionResource" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosExperimentExecutionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.ChaosExperimentExecutionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Chaos.ChaosExperimentExecutionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Chaos.ChaosExperimentExecutionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Chaos.ChaosExperimentExecutionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosArmClient.GetChaosExperimentExecutionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Chaos.ChaosExperimentExecutionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChaosExperimentResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Chaos.ChaosExperimentResource GetChaosExperimentResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Chaos.ChaosExperimentResource GetChaosExperimentResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosExperimentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChaosExperimentResource (client As ArmClient, id As ResourceIdentifier) As ChaosExperimentResource" />
      <MemberSignature Language="F#" Value="static member GetChaosExperimentResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.ChaosExperimentResource" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosExperimentResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.ChaosExperimentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Chaos.ChaosExperimentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Chaos.ChaosExperimentResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Chaos.ChaosExperimentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosArmClient.GetChaosExperimentResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Chaos.ChaosExperimentResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChaosExperiments">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Chaos.ChaosExperimentCollection GetChaosExperiments (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Chaos.ChaosExperimentCollection GetChaosExperiments(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosExperiments(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChaosExperiments (resourceGroupResource As ResourceGroupResource) As ChaosExperimentCollection" />
      <MemberSignature Language="F#" Value="static member GetChaosExperiments : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Chaos.ChaosExperimentCollection" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosExperiments resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.ChaosExperimentCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of ChaosExperimentResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosResourceGroupResource.GetChaosExperiments" /> instead.</description></item></summary>
        <returns> An object representing collection of ChaosExperimentResources and their operations over a ChaosExperimentResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChaosExperiments">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Chaos.ChaosExperimentResource&gt; GetChaosExperiments (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, bool? running = default, string continuationToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Chaos.ChaosExperimentResource&gt; GetChaosExperiments(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Nullable`1&lt;bool&gt; running, string continuationToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosExperiments(Azure.ResourceManager.Resources.SubscriptionResource,System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChaosExperiments (subscriptionResource As SubscriptionResource, Optional running As Nullable(Of Boolean) = Nothing, Optional continuationToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ChaosExperimentResource)" />
      <MemberSignature Language="F#" Value="static member GetChaosExperiments : Azure.ResourceManager.Resources.SubscriptionResource * Nullable&lt;bool&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Chaos.ChaosExperimentResource&gt;" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosExperiments (subscriptionResource, running, continuationToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Chaos.ChaosExperimentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="running" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="continuationToken" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="running"> Optional value that indicates whether to filter results based on if the Experiment is currently running. If null, then the results will not be filtered. </param>
        <param name="continuationToken"> String that sets the continuation token. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of Experiment resources in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Chaos/experiments</description></item><item><term>Operation Id</term><description>Experiments_ListAll</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Chaos.ChaosExperimentResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosSubscriptionResource.GetChaosExperiments(System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Chaos.ChaosExperimentResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChaosExperimentsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Chaos.ChaosExperimentResource&gt; GetChaosExperimentsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, bool? running = default, string continuationToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Chaos.ChaosExperimentResource&gt; GetChaosExperimentsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Nullable`1&lt;bool&gt; running, string continuationToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosExperimentsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChaosExperimentsAsync (subscriptionResource As SubscriptionResource, Optional running As Nullable(Of Boolean) = Nothing, Optional continuationToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ChaosExperimentResource)" />
      <MemberSignature Language="F#" Value="static member GetChaosExperimentsAsync : Azure.ResourceManager.Resources.SubscriptionResource * Nullable&lt;bool&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Chaos.ChaosExperimentResource&gt;" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosExperimentsAsync (subscriptionResource, running, continuationToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Chaos.ChaosExperimentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="running" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="continuationToken" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="running"> Optional value that indicates whether to filter results based on if the Experiment is currently running. If null, then the results will not be filtered. </param>
        <param name="continuationToken"> String that sets the continuation token. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of Experiment resources in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Chaos/experiments</description></item><item><term>Operation Id</term><description>Experiments_ListAll</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Chaos.ChaosExperimentResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosSubscriptionResource.GetChaosExperiments(System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Chaos.ChaosExperimentResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChaosTarget">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosTargetResource&gt; GetChaosTarget (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentProviderNamespace, string parentResourceType, string parentResourceName, string targetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Chaos.ChaosTargetResource&gt; GetChaosTarget(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentProviderNamespace, string parentResourceType, string parentResourceName, string targetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosTarget(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChaosTarget (resourceGroupResource As ResourceGroupResource, parentProviderNamespace As String, parentResourceType As String, parentResourceName As String, targetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ChaosTargetResource)" />
      <MemberSignature Language="F#" Value="static member GetChaosTarget : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosTargetResource&gt;" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosTarget (resourceGroupResource, parentProviderNamespace, parentResourceType, parentResourceName, targetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosTargetResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="parentProviderNamespace" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="parentResourceType" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="parentResourceName" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="targetName" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentProviderNamespace"> String that represents a resource provider namespace. </param>
        <param name="parentResourceType"> String that represents a resource type. </param>
        <param name="parentResourceName"> String that represents a resource name. </param>
        <param name="targetName"> String that represents a Target resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Target resource that extends a tracked regional resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{parentProviderNamespace}/{parentResourceType}/{parentResourceName}/providers/Microsoft.Chaos/targets/{targetName}</description></item><item><term>Operation Id</term><description>Targets_Get</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Chaos.ChaosTargetResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosResourceGroupResource.GetChaosTarget(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" />, <paramref name="parentProviderNamespace" />, <paramref name="parentResourceType" />, <paramref name="parentResourceName" /> or <paramref name="targetName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentProviderNamespace" />, <paramref name="parentResourceType" />, <paramref name="parentResourceName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChaosTargetAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosTargetResource&gt;&gt; GetChaosTargetAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentProviderNamespace, string parentResourceType, string parentResourceName, string targetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Chaos.ChaosTargetResource&gt;&gt; GetChaosTargetAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentProviderNamespace, string parentResourceType, string parentResourceName, string targetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosTargetAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChaosTargetAsync (resourceGroupResource As ResourceGroupResource, parentProviderNamespace As String, parentResourceType As String, parentResourceName As String, targetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ChaosTargetResource))" />
      <MemberSignature Language="F#" Value="static member GetChaosTargetAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosTargetResource&gt;&gt;" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosTargetAsync (resourceGroupResource, parentProviderNamespace, parentResourceType, parentResourceName, targetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosTargetResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="parentProviderNamespace" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="parentResourceType" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="parentResourceName" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="targetName" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentProviderNamespace"> String that represents a resource provider namespace. </param>
        <param name="parentResourceType"> String that represents a resource type. </param>
        <param name="parentResourceName"> String that represents a resource name. </param>
        <param name="targetName"> String that represents a Target resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Target resource that extends a tracked regional resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{parentProviderNamespace}/{parentResourceType}/{parentResourceName}/providers/Microsoft.Chaos/targets/{targetName}</description></item><item><term>Operation Id</term><description>Targets_Get</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Chaos.ChaosTargetResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosResourceGroupResource.GetChaosTargetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" />, <paramref name="parentProviderNamespace" />, <paramref name="parentResourceType" />, <paramref name="parentResourceName" /> or <paramref name="targetName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentProviderNamespace" />, <paramref name="parentResourceType" />, <paramref name="parentResourceName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChaosTargetResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Chaos.ChaosTargetResource GetChaosTargetResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Chaos.ChaosTargetResource GetChaosTargetResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosTargetResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChaosTargetResource (client As ArmClient, id As ResourceIdentifier) As ChaosTargetResource" />
      <MemberSignature Language="F#" Value="static member GetChaosTargetResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.ChaosTargetResource" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosTargetResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.ChaosTargetResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Chaos.ChaosTargetResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Chaos.ChaosTargetResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Chaos.ChaosTargetResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosArmClient.GetChaosTargetResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Chaos.ChaosTargetResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChaosTargets">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Chaos.ChaosTargetCollection GetChaosTargets (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentProviderNamespace, string parentResourceType, string parentResourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Chaos.ChaosTargetCollection GetChaosTargets(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentProviderNamespace, string parentResourceType, string parentResourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosTargets(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChaosTargets (resourceGroupResource As ResourceGroupResource, parentProviderNamespace As String, parentResourceType As String, parentResourceName As String) As ChaosTargetCollection" />
      <MemberSignature Language="F#" Value="static member GetChaosTargets : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * string -&gt; Azure.ResourceManager.Chaos.ChaosTargetCollection" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosTargets (resourceGroupResource, parentProviderNamespace, parentResourceType, parentResourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.ChaosTargetCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="parentProviderNamespace" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="parentResourceType" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="parentResourceName" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentProviderNamespace"> String that represents a resource provider namespace. </param>
        <param name="parentResourceType"> String that represents a resource type. </param>
        <param name="parentResourceName"> String that represents a resource name. </param>
        <summary>
            Gets a collection of ChaosTargetResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosResourceGroupResource.GetChaosTargets(System.String,System.String,System.String)" /> instead.</description></item></summary>
        <returns> An object representing collection of ChaosTargetResources and their operations over a ChaosTargetResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" />, <paramref name="parentProviderNamespace" />, <paramref name="parentResourceType" /> or <paramref name="parentResourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentProviderNamespace" />, <paramref name="parentResourceType" /> or <paramref name="parentResourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChaosTargetType">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosTargetTypeResource&gt; GetChaosTargetType (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, string targetTypeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Chaos.ChaosTargetTypeResource&gt; GetChaosTargetType(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, string targetTypeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosTargetType(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChaosTargetType (subscriptionResource As SubscriptionResource, locationName As String, targetTypeName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ChaosTargetTypeResource)" />
      <MemberSignature Language="F#" Value="static member GetChaosTargetType : Azure.ResourceManager.Resources.SubscriptionResource * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosTargetTypeResource&gt;" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosTargetType (subscriptionResource, locationName, targetTypeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosTargetTypeResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="locationName" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="targetTypeName" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> String that represents a Location resource name. </param>
        <param name="targetTypeName"> String that represents a Target Type resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Target Type resources for given location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Chaos/locations/{locationName}/targetTypes/{targetTypeName}</description></item><item><term>Operation Id</term><description>TargetTypes_Get</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Chaos.ChaosTargetTypeResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosSubscriptionResource.GetChaosTargetType(System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locationName" /> or <paramref name="targetTypeName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> or <paramref name="targetTypeName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChaosTargetTypeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosTargetTypeResource&gt;&gt; GetChaosTargetTypeAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, string targetTypeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Chaos.ChaosTargetTypeResource&gt;&gt; GetChaosTargetTypeAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, string targetTypeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosTargetTypeAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChaosTargetTypeAsync (subscriptionResource As SubscriptionResource, locationName As String, targetTypeName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ChaosTargetTypeResource))" />
      <MemberSignature Language="F#" Value="static member GetChaosTargetTypeAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosTargetTypeResource&gt;&gt;" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosTargetTypeAsync (subscriptionResource, locationName, targetTypeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.ChaosTargetTypeResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="locationName" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="targetTypeName" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> String that represents a Location resource name. </param>
        <param name="targetTypeName"> String that represents a Target Type resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Target Type resources for given location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Chaos/locations/{locationName}/targetTypes/{targetTypeName}</description></item><item><term>Operation Id</term><description>TargetTypes_Get</description></item><item><term>Default Api Version</term><description>2023-11-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.Chaos.ChaosTargetTypeResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosSubscriptionResource.GetChaosTargetTypeAsync(System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locationName" /> or <paramref name="targetTypeName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> or <paramref name="targetTypeName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChaosTargetTypeResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Chaos.ChaosTargetTypeResource GetChaosTargetTypeResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Chaos.ChaosTargetTypeResource GetChaosTargetTypeResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosTargetTypeResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChaosTargetTypeResource (client As ArmClient, id As ResourceIdentifier) As ChaosTargetTypeResource" />
      <MemberSignature Language="F#" Value="static member GetChaosTargetTypeResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.ChaosTargetTypeResource" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosTargetTypeResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.ChaosTargetTypeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Chaos.ChaosTargetTypeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Chaos.ChaosTargetTypeResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Chaos.ChaosTargetTypeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosArmClient.GetChaosTargetTypeResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Chaos.ChaosTargetTypeResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChaosTargetTypes">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Chaos.ChaosTargetTypeCollection GetChaosTargetTypes (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Chaos.ChaosTargetTypeCollection GetChaosTargetTypes(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosTargetTypes(Azure.ResourceManager.Resources.SubscriptionResource,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChaosTargetTypes (subscriptionResource As SubscriptionResource, locationName As String) As ChaosTargetTypeCollection" />
      <MemberSignature Language="F#" Value="static member GetChaosTargetTypes : Azure.ResourceManager.Resources.SubscriptionResource * string -&gt; Azure.ResourceManager.Chaos.ChaosTargetTypeCollection" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetChaosTargetTypes (subscriptionResource, locationName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.ChaosTargetTypeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" Index="0" FrameworkAlternate="azure-dotnet" RefType="this" />
        <Parameter Name="locationName" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> String that represents a Location resource name. </param>
        <summary>
            Gets a collection of ChaosTargetTypeResources in the SubscriptionResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosSubscriptionResource.GetChaosTargetTypes(System.String)" /> instead.</description></item></summary>
        <returns> An object representing collection of ChaosTargetTypeResources and their operations over a ChaosTargetTypeResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="locationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExperiment">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Chaos.ExperimentResource&gt; GetExperiment (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string experimentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Chaos.ExperimentResource&gt; GetExperiment(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string experimentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetExperiment(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetExperiment (resourceGroupResource As ResourceGroupResource, experimentName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ExperimentResource)" />
      <MemberSignature Language="F#" Value="static member GetExperiment : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Chaos.ExperimentResource&gt;" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetExperiment (resourceGroupResource, experimentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Chaos.ExperimentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="experimentName" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="experimentName"> String that represents a Experiment resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Experiment resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Chaos/experiments/{experimentName}</description></item><item><term>Operation Id</term><description>Experiments_Get</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosResourceGroupResource.GetExperiment(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="experimentName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="experimentName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExperimentAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.ExperimentResource&gt;&gt; GetExperimentAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string experimentName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Chaos.ExperimentResource&gt;&gt; GetExperimentAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string experimentName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetExperimentAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetExperimentAsync (resourceGroupResource As ResourceGroupResource, experimentName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ExperimentResource))" />
      <MemberSignature Language="F#" Value="static member GetExperimentAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.ExperimentResource&gt;&gt;" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetExperimentAsync (resourceGroupResource, experimentName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.ExperimentResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="experimentName" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="experimentName"> String that represents a Experiment resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Experiment resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Chaos/experiments/{experimentName}</description></item><item><term>Operation Id</term><description>Experiments_Get</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosResourceGroupResource.GetExperimentAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="experimentName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="experimentName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExperimentExecutionDetailResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Chaos.ExperimentExecutionDetailResource GetExperimentExecutionDetailResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Chaos.ExperimentExecutionDetailResource GetExperimentExecutionDetailResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetExperimentExecutionDetailResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetExperimentExecutionDetailResource (client As ArmClient, id As ResourceIdentifier) As ExperimentExecutionDetailResource" />
      <MemberSignature Language="F#" Value="static member GetExperimentExecutionDetailResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.ExperimentExecutionDetailResource" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetExperimentExecutionDetailResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.ExperimentExecutionDetailResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Chaos.ExperimentExecutionDetailResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Chaos.ExperimentExecutionDetailResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Chaos.ExperimentExecutionDetailResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosArmClient.GetExperimentExecutionDetailResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Chaos.ExperimentExecutionDetailResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExperimentResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Chaos.ExperimentResource GetExperimentResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Chaos.ExperimentResource GetExperimentResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetExperimentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetExperimentResource (client As ArmClient, id As ResourceIdentifier) As ExperimentResource" />
      <MemberSignature Language="F#" Value="static member GetExperimentResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.ExperimentResource" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetExperimentResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.ExperimentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Chaos.ExperimentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Chaos.ExperimentResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Chaos.ExperimentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosArmClient.GetExperimentResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Chaos.ExperimentResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExperiments">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Chaos.ExperimentCollection GetExperiments (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Chaos.ExperimentCollection GetExperiments(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetExperiments(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetExperiments (resourceGroupResource As ResourceGroupResource) As ExperimentCollection" />
      <MemberSignature Language="F#" Value="static member GetExperiments : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.Chaos.ExperimentCollection" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetExperiments resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.ExperimentCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of ExperimentResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosResourceGroupResource.GetExperiments" /> instead.</description></item></summary>
        <returns> An object representing collection of ExperimentResources and their operations over a ExperimentResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExperiments">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Chaos.ExperimentResource&gt; GetExperiments (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, bool? running = default, string continuationToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Chaos.ExperimentResource&gt; GetExperiments(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Nullable`1&lt;bool&gt; running, string continuationToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetExperiments(Azure.ResourceManager.Resources.SubscriptionResource,System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetExperiments (subscriptionResource As SubscriptionResource, Optional running As Nullable(Of Boolean) = Nothing, Optional continuationToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ExperimentResource)" />
      <MemberSignature Language="F#" Value="static member GetExperiments : Azure.ResourceManager.Resources.SubscriptionResource * Nullable&lt;bool&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Chaos.ExperimentResource&gt;" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetExperiments (subscriptionResource, running, continuationToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Chaos.ExperimentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="running" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="continuationToken" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="running"> Optional value that indicates whether to filter results based on if the Experiment is currently running. If null, then the results will not be filtered. </param>
        <param name="continuationToken"> String that sets the continuation token. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of Experiment resources in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Chaos/experiments</description></item><item><term>Operation Id</term><description>Experiments_ListAll</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosSubscriptionResource.GetExperiments(System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Chaos.ExperimentResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExperimentsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Chaos.ExperimentResource&gt; GetExperimentsAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, bool? running = default, string continuationToken = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Chaos.ExperimentResource&gt; GetExperimentsAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Nullable`1&lt;bool&gt; running, string continuationToken, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetExperimentsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetExperimentsAsync (subscriptionResource As SubscriptionResource, Optional running As Nullable(Of Boolean) = Nothing, Optional continuationToken As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ExperimentResource)" />
      <MemberSignature Language="F#" Value="static member GetExperimentsAsync : Azure.ResourceManager.Resources.SubscriptionResource * Nullable&lt;bool&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Chaos.ExperimentResource&gt;" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetExperimentsAsync (subscriptionResource, running, continuationToken, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Chaos.ExperimentResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="running" Type="System.Nullable&lt;System.Boolean&gt;" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="continuationToken" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="running"> Optional value that indicates whether to filter results based on if the Experiment is currently running. If null, then the results will not be filtered. </param>
        <param name="continuationToken"> String that sets the continuation token. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a list of Experiment resources in a subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Chaos/experiments</description></item><item><term>Operation Id</term><description>Experiments_ListAll</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosSubscriptionResource.GetExperiments(System.Nullable{System.Boolean},System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Chaos.ExperimentResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExperimentStatusResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Chaos.ExperimentStatusResource GetExperimentStatusResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Chaos.ExperimentStatusResource GetExperimentStatusResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetExperimentStatusResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetExperimentStatusResource (client As ArmClient, id As ResourceIdentifier) As ExperimentStatusResource" />
      <MemberSignature Language="F#" Value="static member GetExperimentStatusResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.ExperimentStatusResource" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetExperimentStatusResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.ExperimentStatusResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Chaos.ExperimentStatusResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Chaos.ExperimentStatusResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.Chaos.ExperimentStatusResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosArmClient.GetExperimentStatusResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Chaos.ExperimentStatusResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTarget">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Chaos.TargetResource&gt; GetTarget (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentProviderNamespace, string parentResourceType, string parentResourceName, string targetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Chaos.TargetResource&gt; GetTarget(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentProviderNamespace, string parentResourceType, string parentResourceName, string targetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetTarget(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTarget (resourceGroupResource As ResourceGroupResource, parentProviderNamespace As String, parentResourceType As String, parentResourceName As String, targetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TargetResource)" />
      <MemberSignature Language="F#" Value="static member GetTarget : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Chaos.TargetResource&gt;" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetTarget (resourceGroupResource, parentProviderNamespace, parentResourceType, parentResourceName, targetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Chaos.TargetResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="parentProviderNamespace" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="parentResourceType" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="parentResourceName" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="targetName" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentProviderNamespace"> String that represents a resource provider namespace. </param>
        <param name="parentResourceType"> String that represents a resource type. </param>
        <param name="parentResourceName"> String that represents a resource name. </param>
        <param name="targetName"> String that represents a Target resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Target resource that extends a tracked regional resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{parentProviderNamespace}/{parentResourceType}/{parentResourceName}/providers/Microsoft.Chaos/targets/{targetName}</description></item><item><term>Operation Id</term><description>Targets_Get</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosResourceGroupResource.GetTarget(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" />, <paramref name="parentProviderNamespace" />, <paramref name="parentResourceType" />, <paramref name="parentResourceName" /> or <paramref name="targetName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentProviderNamespace" />, <paramref name="parentResourceType" />, <paramref name="parentResourceName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTargetAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.TargetResource&gt;&gt; GetTargetAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentProviderNamespace, string parentResourceType, string parentResourceName, string targetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Chaos.TargetResource&gt;&gt; GetTargetAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentProviderNamespace, string parentResourceType, string parentResourceName, string targetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetTargetAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTargetAsync (resourceGroupResource As ResourceGroupResource, parentProviderNamespace As String, parentResourceType As String, parentResourceName As String, targetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TargetResource))" />
      <MemberSignature Language="F#" Value="static member GetTargetAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.TargetResource&gt;&gt;" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetTargetAsync (resourceGroupResource, parentProviderNamespace, parentResourceType, parentResourceName, targetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.TargetResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="parentProviderNamespace" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="parentResourceType" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="parentResourceName" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="targetName" Type="System.String" Index="4" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="5" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentProviderNamespace"> String that represents a resource provider namespace. </param>
        <param name="parentResourceType"> String that represents a resource type. </param>
        <param name="parentResourceName"> String that represents a resource name. </param>
        <param name="targetName"> String that represents a Target resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Target resource that extends a tracked regional resource.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{parentProviderNamespace}/{parentResourceType}/{parentResourceName}/providers/Microsoft.Chaos/targets/{targetName}</description></item><item><term>Operation Id</term><description>Targets_Get</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosResourceGroupResource.GetTargetAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" />, <paramref name="parentProviderNamespace" />, <paramref name="parentResourceType" />, <paramref name="parentResourceName" /> or <paramref name="targetName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentProviderNamespace" />, <paramref name="parentResourceType" />, <paramref name="parentResourceName" /> or <paramref name="targetName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTargetResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Chaos.TargetResource GetTargetResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Chaos.TargetResource GetTargetResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetTargetResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTargetResource (client As ArmClient, id As ResourceIdentifier) As TargetResource" />
      <MemberSignature Language="F#" Value="static member GetTargetResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.TargetResource" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetTargetResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.TargetResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Chaos.TargetResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Chaos.TargetResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Chaos.TargetResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosArmClient.GetTargetResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Chaos.TargetResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTargets">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Chaos.TargetCollection GetTargets (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentProviderNamespace, string parentResourceType, string parentResourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Chaos.TargetCollection GetTargets(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string parentProviderNamespace, string parentResourceType, string parentResourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetTargets(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTargets (resourceGroupResource As ResourceGroupResource, parentProviderNamespace As String, parentResourceType As String, parentResourceName As String) As TargetCollection" />
      <MemberSignature Language="F#" Value="static member GetTargets : Azure.ResourceManager.Resources.ResourceGroupResource * string * string * string -&gt; Azure.ResourceManager.Chaos.TargetCollection" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetTargets (resourceGroupResource, parentProviderNamespace, parentResourceType, parentResourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.TargetCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="parentProviderNamespace" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="parentResourceType" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="parentResourceName" Type="System.String" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="parentProviderNamespace"> String that represents a resource provider namespace. </param>
        <param name="parentResourceType"> String that represents a resource type. </param>
        <param name="parentResourceName"> String that represents a resource name. </param>
        <summary>
            Gets a collection of TargetResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosResourceGroupResource.GetTargets(System.String,System.String,System.String)" /> instead.</description></item></summary>
        <returns> An object representing collection of TargetResources and their operations over a TargetResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" />, <paramref name="parentProviderNamespace" />, <paramref name="parentResourceType" /> or <paramref name="parentResourceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="parentProviderNamespace" />, <paramref name="parentResourceType" /> or <paramref name="parentResourceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTargetType">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Chaos.TargetTypeResource&gt; GetTargetType (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, string targetTypeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Chaos.TargetTypeResource&gt; GetTargetType(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, string targetTypeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetTargetType(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTargetType (subscriptionResource As SubscriptionResource, locationName As String, targetTypeName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TargetTypeResource)" />
      <MemberSignature Language="F#" Value="static member GetTargetType : Azure.ResourceManager.Resources.SubscriptionResource * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Chaos.TargetTypeResource&gt;" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetTargetType (subscriptionResource, locationName, targetTypeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Chaos.TargetTypeResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="locationName" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="targetTypeName" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> String that represents a Location resource name. </param>
        <param name="targetTypeName"> String that represents a Target Type resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Target Type resources for given location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Chaos/locations/{locationName}/targetTypes/{targetTypeName}</description></item><item><term>Operation Id</term><description>TargetTypes_Get</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosSubscriptionResource.GetTargetType(System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locationName" /> or <paramref name="targetTypeName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> or <paramref name="targetTypeName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTargetTypeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.TargetTypeResource&gt;&gt; GetTargetTypeAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, string targetTypeName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Chaos.TargetTypeResource&gt;&gt; GetTargetTypeAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName, string targetTypeName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetTargetTypeAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTargetTypeAsync (subscriptionResource As SubscriptionResource, locationName As String, targetTypeName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TargetTypeResource))" />
      <MemberSignature Language="F#" Value="static member GetTargetTypeAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.TargetTypeResource&gt;&gt;" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetTargetTypeAsync (subscriptionResource, locationName, targetTypeName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Chaos.TargetTypeResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="locationName" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="targetTypeName" Type="System.String" Index="2" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> String that represents a Location resource name. </param>
        <param name="targetTypeName"> String that represents a Target Type resource name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a Target Type resources for given location.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.Chaos/locations/{locationName}/targetTypes/{targetTypeName}</description></item><item><term>Operation Id</term><description>TargetTypes_Get</description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosSubscriptionResource.GetTargetTypeAsync(System.String,System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" />, <paramref name="locationName" /> or <paramref name="targetTypeName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> or <paramref name="targetTypeName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTargetTypeResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Chaos.TargetTypeResource GetTargetTypeResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Chaos.TargetTypeResource GetTargetTypeResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetTargetTypeResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTargetTypeResource (client As ArmClient, id As ResourceIdentifier) As TargetTypeResource" />
      <MemberSignature Language="F#" Value="static member GetTargetTypeResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.Chaos.TargetTypeResource" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetTargetTypeResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.TargetTypeResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Chaos.TargetTypeResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Chaos.TargetTypeResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Chaos.TargetTypeResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosArmClient.GetTargetTypeResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.Chaos.TargetTypeResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTargetTypes">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Chaos.TargetTypeCollection GetTargetTypes (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Chaos.TargetTypeCollection GetTargetTypes(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string locationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Chaos.ChaosExtensions.GetTargetTypes(Azure.ResourceManager.Resources.SubscriptionResource,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTargetTypes (subscriptionResource As SubscriptionResource, locationName As String) As TargetTypeCollection" />
      <MemberSignature Language="F#" Value="static member GetTargetTypes : Azure.ResourceManager.Resources.SubscriptionResource * string -&gt; Azure.ResourceManager.Chaos.TargetTypeCollection" Usage="Azure.ResourceManager.Chaos.ChaosExtensions.GetTargetTypes (subscriptionResource, locationName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Chaos</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Chaos.TargetTypeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" Index="0" FrameworkAlternate="azure-dotnet-preview" />
        <Parameter Name="locationName" Type="System.String" Index="1" FrameworkAlternate="azure-dotnet-preview" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="locationName"> String that represents a Location resource name. </param>
        <summary>
            Gets a collection of TargetTypeResources in the SubscriptionResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Chaos.Mocking.MockableChaosSubscriptionResource.GetTargetTypes(System.String)" /> instead.</description></item></summary>
        <returns> An object representing collection of TargetTypeResources and their operations over a TargetTypeResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> or <paramref name="locationName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
