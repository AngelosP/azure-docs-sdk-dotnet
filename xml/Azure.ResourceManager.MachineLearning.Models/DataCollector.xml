<Type Name="DataCollector" FullName="Azure.ResourceManager.MachineLearning.Models.DataCollector">
  <TypeSignature Language="C#" Value="public class DataCollector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataCollector extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.MachineLearning.Models.DataCollector" />
  <TypeSignature Language="VB.NET" Value="Public Class DataCollector" />
  <TypeSignature Language="F#" Value="type DataCollector = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The DataCollector. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataCollector (System.Collections.Generic.IDictionary&lt;string,Azure.ResourceManager.MachineLearning.Models.DataCollectionConfiguration&gt; collections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, class Azure.ResourceManager.MachineLearning.Models.DataCollectionConfiguration&gt; collections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.MachineLearning.Models.DataCollector.#ctor(System.Collections.Generic.IDictionary{System.String,Azure.ResourceManager.MachineLearning.Models.DataCollectionConfiguration})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collections As IDictionary(Of String, DataCollectionConfiguration))" />
      <MemberSignature Language="F#" Value="new Azure.ResourceManager.MachineLearning.Models.DataCollector : System.Collections.Generic.IDictionary&lt;string, Azure.ResourceManager.MachineLearning.Models.DataCollectionConfiguration&gt; -&gt; Azure.ResourceManager.MachineLearning.Models.DataCollector" Usage="new Azure.ResourceManager.MachineLearning.Models.DataCollector collections" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Generic.IDictionary&lt;System.String,Azure.ResourceManager.MachineLearning.Models.DataCollectionConfiguration&gt;" />
      </Parameters>
      <Docs>
        <param name="collections">
            [Required] The collection configuration. Each collection has it own configuration to collect model data and the name of collection can be arbitrary string.
            Model data collector can be used for either payload logging or custom logging or both of them. Collection request and response are reserved for payload logging, others are for custom logging.
            </param>
        <summary> Initializes a new instance of DataCollector. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="collections" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Collections">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Azure.ResourceManager.MachineLearning.Models.DataCollectionConfiguration&gt; Collections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Azure.ResourceManager.MachineLearning.Models.DataCollectionConfiguration&gt; Collections" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.DataCollector.Collections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Collections As IDictionary(Of String, DataCollectionConfiguration)" />
      <MemberSignature Language="F#" Value="member this.Collections : System.Collections.Generic.IDictionary&lt;string, Azure.ResourceManager.MachineLearning.Models.DataCollectionConfiguration&gt;" Usage="Azure.ResourceManager.MachineLearning.Models.DataCollector.Collections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Azure.ResourceManager.MachineLearning.Models.DataCollectionConfiguration&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            [Required] The collection configuration. Each collection has it own configuration to collect model data and the name of collection can be arbitrary string.
            Model data collector can be used for either payload logging or custom logging or both of them. Collection request and response are reserved for payload logging, others are for custom logging.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestLoggingCaptureHeaders">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; RequestLoggingCaptureHeaders { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; RequestLoggingCaptureHeaders" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.DataCollector.RequestLoggingCaptureHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestLoggingCaptureHeaders As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.RequestLoggingCaptureHeaders : System.Collections.Generic.IList&lt;string&gt; with get, set" Usage="Azure.ResourceManager.MachineLearning.Models.DataCollector.RequestLoggingCaptureHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> For payload logging, we only collect payload by default. If customers also want to collect the specified headers, they can set them in captureHeaders so that backend will collect those headers along with payload. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RollingRate">
      <MemberSignature Language="C#" Value="public Azure.ResourceManager.MachineLearning.Models.RollingRateType? RollingRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.MachineLearning.Models.RollingRateType&gt; RollingRate" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.MachineLearning.Models.DataCollector.RollingRate" />
      <MemberSignature Language="VB.NET" Value="Public Property RollingRate As Nullable(Of RollingRateType)" />
      <MemberSignature Language="F#" Value="member this.RollingRate : Nullable&lt;Azure.ResourceManager.MachineLearning.Models.RollingRateType&gt; with get, set" Usage="Azure.ResourceManager.MachineLearning.Models.DataCollector.RollingRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.MachineLearning</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Azure.ResourceManager.MachineLearning.Models.RollingRateType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            When model data is collected to blob storage, we need to roll the data to different path to avoid logging all of them in a single blob file.
            If the rolling rate is hour, all data will be collected in the blob path /yyyy/MM/dd/HH/.
            If it's day, all data will be collected in blob path /yyyy/MM/dd/.
            The other benefit of rolling path is that model monitoring ui is able to select a time range of data very quickly.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
