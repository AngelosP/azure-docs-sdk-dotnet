<Type Name="LargeInstanceExtensions" FullName="Azure.ResourceManager.LargeInstance.LargeInstanceExtensions">
  <TypeSignature Language="C#" Value="public static class LargeInstanceExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LargeInstanceExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.LargeInstance.LargeInstanceExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module LargeInstanceExtensions" />
  <TypeSignature Language="F#" Value="type LargeInstanceExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.LargeInstance</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.LargeInstance. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetLargeInstance">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt; GetLargeInstance (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string azureLargeInstanceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt; GetLargeInstance(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string azureLargeInstanceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeInstance(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLargeInstance (resourceGroupResource As ResourceGroupResource, azureLargeInstanceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LargeInstanceResource)" />
      <MemberSignature Language="F#" Value="static member GetLargeInstance : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt;" Usage="Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeInstance (resourceGroupResource, azureLargeInstanceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LargeInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="azureLargeInstanceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="azureLargeInstanceName"> Name of the AzureLargeInstance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an Azure Large Instance for the specified subscription, resource group,
            and instance name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureLargeInstance/azureLargeInstances/{azureLargeInstanceName}</description></item><item><term>Operation Id</term><description>AzureLargeInstance_Get</description></item><item><term>Default Api Version</term><description>2023-07-20-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.LargeInstance.LargeInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.LargeInstance.Mocking.MockableLargeInstanceResourceGroupResource.GetLargeInstance(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="azureLargeInstanceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="azureLargeInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLargeInstanceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt;&gt; GetLargeInstanceAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string azureLargeInstanceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt;&gt; GetLargeInstanceAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string azureLargeInstanceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeInstanceAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLargeInstanceAsync (resourceGroupResource As ResourceGroupResource, azureLargeInstanceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LargeInstanceResource))" />
      <MemberSignature Language="F#" Value="static member GetLargeInstanceAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt;&gt;" Usage="Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeInstanceAsync (resourceGroupResource, azureLargeInstanceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LargeInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="azureLargeInstanceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="azureLargeInstanceName"> Name of the AzureLargeInstance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an Azure Large Instance for the specified subscription, resource group,
            and instance name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureLargeInstance/azureLargeInstances/{azureLargeInstanceName}</description></item><item><term>Operation Id</term><description>AzureLargeInstance_Get</description></item><item><term>Default Api Version</term><description>2023-07-20-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.LargeInstance.LargeInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.LargeInstance.Mocking.MockableLargeInstanceResourceGroupResource.GetLargeInstanceAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="azureLargeInstanceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="azureLargeInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLargeInstanceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.LargeInstance.LargeInstanceResource GetLargeInstanceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.LargeInstance.LargeInstanceResource GetLargeInstanceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeInstanceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLargeInstanceResource (client As ArmClient, id As ResourceIdentifier) As LargeInstanceResource" />
      <MemberSignature Language="F#" Value="static member GetLargeInstanceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.LargeInstance.LargeInstanceResource" Usage="Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeInstanceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LargeInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.LargeInstance.LargeInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.LargeInstance.LargeInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.LargeInstance.LargeInstanceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.LargeInstance.LargeInstanceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.LargeInstance.Mocking.MockableLargeInstanceArmClient.GetLargeInstanceResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.LargeInstance.LargeInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLargeInstances">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.LargeInstance.LargeInstanceCollection GetLargeInstances (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.LargeInstance.LargeInstanceCollection GetLargeInstances(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeInstances(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLargeInstances (resourceGroupResource As ResourceGroupResource) As LargeInstanceCollection" />
      <MemberSignature Language="F#" Value="static member GetLargeInstances : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.LargeInstance.LargeInstanceCollection" Usage="Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeInstances resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LargeInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.LargeInstance.LargeInstanceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of LargeInstanceResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.LargeInstance.Mocking.MockableLargeInstanceResourceGroupResource.GetLargeInstances" /> instead.</description></item></summary>
        <returns> An object representing collection of LargeInstanceResources and their operations over a LargeInstanceResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLargeInstances">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt; GetLargeInstances (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt; GetLargeInstances(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeInstances(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLargeInstances (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of LargeInstanceResource)" />
      <MemberSignature Language="F#" Value="static member GetLargeInstances : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt;" Usage="Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeInstances (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LargeInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of Azure Large Instances in the specified subscription. The
            operations returns various properties of each Azure Large Instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AzureLargeInstance/azureLargeInstances</description></item><item><term>Operation Id</term><description>AzureLargeInstance_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-07-20-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.LargeInstance.LargeInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.LargeInstance.Mocking.MockableLargeInstanceSubscriptionResource.GetLargeInstances(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.LargeInstance.LargeInstanceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLargeInstancesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt; GetLargeInstancesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt; GetLargeInstancesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeInstancesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLargeInstancesAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of LargeInstanceResource)" />
      <MemberSignature Language="F#" Value="static member GetLargeInstancesAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt;" Usage="Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeInstancesAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LargeInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.LargeInstance.LargeInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of Azure Large Instances in the specified subscription. The
            operations returns various properties of each Azure Large Instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AzureLargeInstance/azureLargeInstances</description></item><item><term>Operation Id</term><description>AzureLargeInstance_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-07-20-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.LargeInstance.LargeInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.LargeInstance.Mocking.MockableLargeInstanceSubscriptionResource.GetLargeInstances(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.LargeInstance.LargeInstanceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLargeStorageInstance">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt; GetLargeStorageInstance (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string azureLargeStorageInstanceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt; GetLargeStorageInstance(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string azureLargeStorageInstanceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeStorageInstance(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLargeStorageInstance (resourceGroupResource As ResourceGroupResource, azureLargeStorageInstanceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LargeStorageInstanceResource)" />
      <MemberSignature Language="F#" Value="static member GetLargeStorageInstance : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt;" Usage="Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeStorageInstance (resourceGroupResource, azureLargeStorageInstanceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LargeInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="azureLargeStorageInstanceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="azureLargeStorageInstanceName"> Name of the AzureLargeStorageInstance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an Azure Large Storage instance for the specified subscription, resource
            group, and instance name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureLargeInstance/azureLargeStorageInstances/{azureLargeStorageInstanceName}</description></item><item><term>Operation Id</term><description>AzureLargeStorageInstance_Get</description></item><item><term>Default Api Version</term><description>2023-07-20-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.LargeInstance.Mocking.MockableLargeInstanceResourceGroupResource.GetLargeStorageInstance(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="azureLargeStorageInstanceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="azureLargeStorageInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLargeStorageInstanceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt;&gt; GetLargeStorageInstanceAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string azureLargeStorageInstanceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt;&gt; GetLargeStorageInstanceAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string azureLargeStorageInstanceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeStorageInstanceAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLargeStorageInstanceAsync (resourceGroupResource As ResourceGroupResource, azureLargeStorageInstanceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LargeStorageInstanceResource))" />
      <MemberSignature Language="F#" Value="static member GetLargeStorageInstanceAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt;&gt;" Usage="Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeStorageInstanceAsync (resourceGroupResource, azureLargeStorageInstanceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LargeInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="azureLargeStorageInstanceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="azureLargeStorageInstanceName"> Name of the AzureLargeStorageInstance. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an Azure Large Storage instance for the specified subscription, resource
            group, and instance name.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureLargeInstance/azureLargeStorageInstances/{azureLargeStorageInstanceName}</description></item><item><term>Operation Id</term><description>AzureLargeStorageInstance_Get</description></item><item><term>Default Api Version</term><description>2023-07-20-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.LargeInstance.Mocking.MockableLargeInstanceResourceGroupResource.GetLargeStorageInstanceAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="azureLargeStorageInstanceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="azureLargeStorageInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLargeStorageInstanceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource GetLargeStorageInstanceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource GetLargeStorageInstanceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeStorageInstanceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLargeStorageInstanceResource (client As ArmClient, id As ResourceIdentifier) As LargeStorageInstanceResource" />
      <MemberSignature Language="F#" Value="static member GetLargeStorageInstanceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource" Usage="Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeStorageInstanceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LargeInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.LargeInstance.Mocking.MockableLargeInstanceArmClient.GetLargeStorageInstanceResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLargeStorageInstances">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.LargeInstance.LargeStorageInstanceCollection GetLargeStorageInstances (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.LargeInstance.LargeStorageInstanceCollection GetLargeStorageInstances(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeStorageInstances(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLargeStorageInstances (resourceGroupResource As ResourceGroupResource) As LargeStorageInstanceCollection" />
      <MemberSignature Language="F#" Value="static member GetLargeStorageInstances : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.LargeInstance.LargeStorageInstanceCollection" Usage="Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeStorageInstances resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LargeInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.LargeInstance.LargeStorageInstanceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of LargeStorageInstanceResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.LargeInstance.Mocking.MockableLargeInstanceResourceGroupResource.GetLargeStorageInstances" /> instead.</description></item></summary>
        <returns> An object representing collection of LargeStorageInstanceResources and their operations over a LargeStorageInstanceResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLargeStorageInstances">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt; GetLargeStorageInstances (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt; GetLargeStorageInstances(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeStorageInstances(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLargeStorageInstances (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of LargeStorageInstanceResource)" />
      <MemberSignature Language="F#" Value="static member GetLargeStorageInstances : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt;" Usage="Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeStorageInstances (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LargeInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of AzureLargeStorageInstances in the specified subscription. The
            operations returns various properties of each Azure LargeStorage instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AzureLargeInstance/azureLargeStorageInstances</description></item><item><term>Operation Id</term><description>AzureLargeStorageInstance_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-07-20-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.LargeInstance.Mocking.MockableLargeInstanceSubscriptionResource.GetLargeStorageInstances(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLargeStorageInstancesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt; GetLargeStorageInstancesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt; GetLargeStorageInstancesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeStorageInstancesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLargeStorageInstancesAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of LargeStorageInstanceResource)" />
      <MemberSignature Language="F#" Value="static member GetLargeStorageInstancesAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt;" Usage="Azure.ResourceManager.LargeInstance.LargeInstanceExtensions.GetLargeStorageInstancesAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.LargeInstance</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a list of AzureLargeStorageInstances in the specified subscription. The
            operations returns various properties of each Azure LargeStorage instance.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.AzureLargeInstance/azureLargeStorageInstances</description></item><item><term>Operation Id</term><description>AzureLargeStorageInstance_ListBySubscription</description></item><item><term>Default Api Version</term><description>2023-07-20-preview</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.LargeInstance.Mocking.MockableLargeInstanceSubscriptionResource.GetLargeStorageInstances(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.LargeInstance.LargeStorageInstanceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
